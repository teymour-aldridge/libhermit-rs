var searchIndex = JSON.parse('{\
"bit_field":{"doc":"Provides the abstraction of a bit field, which allows for …","t":[18,8,8,10,10,10,10,10,10,10,10,10],"n":["BIT_LENGTH","BitArray","BitField","bit_length","get_bit","get_bit","get_bits","get_bits","set_bit","set_bit","set_bits","set_bits"],"q":["bit_field","","","","","","","","","","",""],"d":["The number of bits in this bit field.","","A generic trait which provides methods for extracting and …","Returns the length, eg number of bits, in this bit array.","Obtains the bit at the index <code>bit</code>; note that index 0 is the …","Obtains the bit at the index <code>bit</code>; note that index 0 is the …","Obtains the range of bits specified by <code>range</code>; note that …","Obtains the range of bits specified by <code>range</code>; note that …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the range of bits defined by the range <code>range</code> to the …","Sets the range of bits defined by the range <code>range</code> to the …"],"i":[1,0,0,2,1,2,1,2,1,2,1,2],"f":[null,null,null,[[],["usize",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["rangebounds",8,[["usize",15]]]]],[[["rangebounds",8,[["usize",15]]]]],[[["usize",15],["bool",15]]],[[["usize",15],["bool",15]]],[[["rangebounds",8,[["usize",15]]]]],[[["rangebounds",8,[["usize",15]]]]]],"p":[[8,"BitField"],[8,"BitArray"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","t":[14],"n":["bitflags"],"q":["bitflags"],"d":["The macro used to generate the flag structures."],"i":[0],"f":[null],"p":[]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":[14],"n":["cfg_if"],"q":["cfg_if"],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[null],"p":[]},\
"crossbeam_utils":{"doc":"Miscellaneous tools for concurrent programming.","t":[3,3,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11],"n":["Backoff","CachePadded","atomic","borrow","borrow","borrow_mut","borrow_mut","clone","default","default","deref","deref_mut","eq","fmt","fmt","from","from","from","from","hash","into","into","into_inner","is_completed","ne","new","new","reset","snooze","spin","try_from","try_from","try_into","try_into","type_id","type_id","AtomicCell","AtomicConsume","Val","as_ptr","borrow","borrow_mut","compare_and_swap","compare_exchange","default","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_update","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fmt","from","from","from","into","into_inner","is_lock_free","load","load_consume","new","store","swap","take","try_from","try_into","type_id"],"q":["crossbeam_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crossbeam_utils::atomic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Performs exponential backoff in spin loops.","Pads and aligns a value to the length of a cache line.","Atomic types.","","","","","","","","","","","","","","","","","","","","Returns the inner value.","Returns <code>true</code> if exponential backoff has completed and …","","Creates a new <code>Backoff</code>.","Pads and aligns a value to the length of a cache line.","Resets the <code>Backoff</code>.","Backs off in a blocking loop.","Backs off in a lock-free loop.","","","","","","","A thread-safe mutable memory location.","Trait which allows reading from primitive atomic types …","Type returned by <code>load_consume</code>.","Returns a raw pointer to the underlying data in this …","","","If the current value equals <code>current</code>, stores <code>new</code> into the …","If the current value equals <code>current</code>, stores <code>new</code> into the …","","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies logical “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies logical “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Fetches the value, and applies a function to it that …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies logical “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","","","","","","Consumes the atomic and returns the contained value.","Returns <code>true</code> if operations on values of this type are …","Loads a value from the atomic cell.","Loads a value from the atomic using a “consume” memory …","Creates a new atomic cell initialized with <code>val</code>.","Stores <code>val</code> into the atomic cell.","Stores <code>val</code> into the atomic cell and returns the previous …","Takes the value of the atomic cell, leaving …","","",""],"i":[0,0,0,1,2,1,2,2,1,2,2,2,2,1,2,1,2,2,2,2,1,2,2,1,2,1,2,1,1,1,1,2,1,2,1,2,0,0,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,4,4,4,4,4,4,4],"f":[null,null,null,[[]],[[]],[[]],[[]],[[],["cachepadded",3]],[[],["backoff",3]],[[],["cachepadded",3]],[[]],[[]],[[["cachepadded",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["never",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["cachepadded",3]],["bool",15]],[[]],[[],["cachepadded",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["atomiccell",3]],[[["usize",15]],["usize",15]],[[["u64",15]],["u64",15]],[[["u32",15]],["u32",15]],[[["i16",15]],["i16",15]],[[["i128",15]],["i128",15]],[[["u16",15]],["u16",15]],[[["u128",15]],["u128",15]],[[["i32",15]],["i32",15]],[[["isize",15]],["isize",15]],[[["i8",15]],["i8",15]],[[["u8",15]],["u8",15]],[[["i64",15]],["i64",15]],[[["isize",15]],["isize",15]],[[["u64",15]],["u64",15]],[[["bool",15]],["bool",15]],[[["u8",15]],["u8",15]],[[["i32",15]],["i32",15]],[[["i8",15]],["i8",15]],[[["i64",15]],["i64",15]],[[["usize",15]],["usize",15]],[[["u16",15]],["u16",15]],[[["u128",15]],["u128",15]],[[["i16",15]],["i16",15]],[[["i128",15]],["i128",15]],[[["u32",15]],["u32",15]],[[["i8",15]],["i8",15]],[[["i32",15]],["i32",15]],[[["bool",15]],["bool",15]],[[["i16",15]],["i16",15]],[[["isize",15]],["isize",15]],[[["u16",15]],["u16",15]],[[["usize",15]],["usize",15]],[[["i128",15]],["i128",15]],[[["u32",15]],["u32",15]],[[["u128",15]],["u128",15]],[[["u8",15]],["u8",15]],[[["u64",15]],["u64",15]],[[["i64",15]],["i64",15]],[[["u128",15]],["u128",15]],[[["i16",15]],["i16",15]],[[["i32",15]],["i32",15]],[[["u32",15]],["u32",15]],[[["isize",15]],["isize",15]],[[["i8",15]],["i8",15]],[[["u64",15]],["u64",15]],[[["usize",15]],["usize",15]],[[["u16",15]],["u16",15]],[[["i64",15]],["i64",15]],[[["u8",15]],["u8",15]],[[["i128",15]],["i128",15]],[[],["result",4]],[[["i128",15]],["i128",15]],[[["u8",15]],["u8",15]],[[["i8",15]],["i8",15]],[[["u128",15]],["u128",15]],[[["bool",15]],["bool",15]],[[["i16",15]],["i16",15]],[[["isize",15]],["isize",15]],[[["u32",15]],["u32",15]],[[["i64",15]],["i64",15]],[[["i32",15]],["i32",15]],[[["u64",15]],["u64",15]],[[["usize",15]],["usize",15]],[[["u16",15]],["u16",15]],[[["formatter",3]],["result",6]],[[],["atomiccell",3]],[[["never",15]]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[],["atomiccell",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"Backoff"],[3,"CachePadded"],[8,"AtomicConsume"],[3,"AtomicCell"]]},\
"hermit":{"doc":"","t":[17,17,17,17,17,17,17,3,3,17,6,17,17,5,5,5,5,5,14,14,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,0,5,5,5,14,14,14,5,11,11,11,11,11,0,12,12,3,0,14,5,0,5,5,0,14,14,0,5,0,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,13,13,13,13,7,4,3,3,8,8,4,13,12,11,11,11,11,11,11,11,11,11,11,10,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,10,11,12,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,12,3,3,5,12,12,12,5,5,5,5,5,12,5,5,5,12,12,3,0,0,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,0,0,0,0,5,0,0,0,0,5,5,5,0,3,5,5,5,17,5,5,5,5,5,5,5,5,5,5,5,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,8,8,8,4,3,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,12,12,12,12,12,12,12,12,12,12,12,12,12,17,17,17,17,5,5,5,17,5,5,3,3,5,12,12,12,5,5,5,5,5,12,5,5,5,12,12,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,3,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,3,4,4,4,4,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,0,5,5,5,12,12,5,5,12,12,5,12,5,5,12,12,12,12,12,5,12,12,12,12,12,13,13,13,13,13,13,4,12,12,12,12,12,12,8,7,3,3,8,6,5,5,10,5,5,5,12,12,10,5,5,12,17,5,5,5,5,17,5,5,3,3,3,3,3,3,3,12,12,12,12,12,12,12,12,12,5,5,5,12,12,12,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,12,12,12,12,12,12,12,5,5,5,12,5,12,5,12,5,5,5,5,5,5,5,5,5,12,12,12,12,13,3,13,3,4,3,5,12,12,3,12,5,5,5,5,5,5,5,5,5,5,5,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,4,4,4,8,3,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,8,7,3,3,8,6,5,5,10,5,5,5,12,12,10,5,5,12,3,3,3,3,3,3,3,12,12,12,12,12,12,12,12,12,5,5,5,12,12,12,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,12,12,12,12,12,12,12,5,5,5,12,5,12,5,12,5,5,5,5,5,5,5,5,5,12,12,12,12,13,3,13,3,4,3,5,12,12,5,5,5,5,5,5,5,5,5,0,0,3,0,0,5,5,5,11,11,11,11,0,0,5,5,5,5,5,5,5,5,5,5,5,5,0,11,0,5,5,5,5,5,5,0,0,0,0,5,0,0,0,0,5,5,5,0,11,11,11,3,11,11,11,11,5,11,5,11,5,11,11,11,11,11,17,5,5,5,5,5,5,5,5,5,5,5,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,8,8,8,4,3,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5,5,5,5,5,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,12,12,12,17,17,17,17,5,5,5,17,5,5,3,3,5,11,11,11,11,11,11,12,12,12,5,5,5,11,11,11,5,11,5,12,11,11,5,5,5,11,12,12,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,3,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,3,4,4,4,4,13,13,13,13,13,13,13,13,13,13,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,5,12,12,5,5,11,11,11,11,11,11,11,12,11,11,12,5,12,5,5,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,12,12,12,12,12,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,12,12,12,12,12,12,8,7,3,3,8,6,11,11,11,11,5,5,11,11,10,11,11,5,5,5,11,11,12,12,11,11,10,11,11,5,5,11,11,11,11,12,11,11,17,5,5,5,5,17,5,5,3,3,3,3,3,3,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,5,5,5,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,12,11,11,11,11,11,11,11,12,12,12,12,12,11,12,5,5,5,12,11,11,5,11,11,12,5,12,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,12,12,12,12,13,3,13,3,18,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,12,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,12,12,3,3,5,5,0,0,0,18,4,18,18,18,18,18,4,4,18,18,18,18,18,18,18,8,3,3,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,5,5,5,11,11,11,11,11,11,11,11,11,11,5,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,5,5,5,5,5,5,5,5,5,5,5,5,5],"n":["CLOCK_MONOTONIC","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_THREAD_CPUTIME_ID","DEFAULT_STACK_SIZE","HW_DESTRUCTIVE_INTERFERENCE_SIZE","KERNEL_STACK_SIZE","SpinlockContainer","SpinlockIrqSaveContainer","TIMER_ABSTIME","Tid","USER_STACK_SIZE","VIRTIO_MAX_QUEUE_SIZE","__sys_free","__sys_malloc","__sys_realloc","__sys_shutdown","__sys_usleep","align_down","align_up","application_processor_init","boot_application_processors","boot_processor_init","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","environment","fmt","fmt","fmt","from","from","from","from","from","fs","get_application_parameters","get_boot_time","get_processor_count","infoentry","infofooter","infoheader","init_drivers","into","into","into","into","into","irq","it_interval","it_value","itimerval","kernel","kernel_function","message_output_init","mm","output_message_buf","output_message_byte","percore","print","println","processor","random_init","scheduler","set_current_kernel_stack","set_oneshot_timer","switch","sys_abort","sys_add_queue","sys_block_current_task","sys_block_current_task_with_timeout","sys_clock_getres","sys_clock_gettime","sys_clock_nanosleep","sys_clock_settime","sys_close","sys_destroy_queue","sys_exit","sys_free","sys_free_tx_buffer","sys_get_mac_address","sys_get_mtu","sys_get_priority","sys_get_processor_count","sys_get_processor_frequency","sys_get_tx_buffer","sys_getpagesize","sys_getpid","sys_getprio","sys_gettimeofday","sys_init_queue","sys_join","sys_lseek","sys_malloc","sys_msleep","sys_nanosleep","sys_netwait","sys_notify","sys_open","sys_rand","sys_read","sys_realloc","sys_receive_rx_buffer","sys_recmutex_destroy","sys_recmutex_init","sys_recmutex_lock","sys_recmutex_unlock","sys_rx_buffer_consumed","sys_secure_rand32","sys_secure_rand64","sys_sem_cancelablewait","sys_sem_destroy","sys_sem_init","sys_sem_post","sys_sem_timedwait","sys_sem_trywait","sys_send_tx_buffer","sys_set_network_polling_mode","sys_setitimer","sys_setprio","sys_shutdown","sys_spawn","sys_spawn2","sys_spinlock_destroy","sys_spinlock_init","sys_spinlock_irqsave_destroy","sys_spinlock_irqsave_init","sys_spinlock_irqsave_lock","sys_spinlock_irqsave_unlock","sys_spinlock_lock","sys_spinlock_unlock","sys_srand","sys_stat","sys_thread_exit","sys_unlink","sys_usleep","sys_wait","sys_wakeup_task","sys_write","sys_yield","timespec","timeval","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tv_nsec","tv_sec","tv_sec","tv_usec","type_id","type_id","type_id","type_id","type_id","wakeup_core","x86_64","get_base_address","get_cmdline","get_cmdsize","get_command_line_argv","get_command_line_cpu_frequency","get_command_line_path","get_image_size","get_tls_align","get_tls_filesz","get_tls_memsz","get_tls_start","init","is_proxy","is_single_kernel","is_uhyve","Cur","ENOENT","ENOSYS","End","FILESYSTEM","FileError","FilePerms","Filesystem","PosixFile","PosixFileSystem","SeekWhence","Set","append","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","close","close","creat","default","directio","excl","fd_op","fmt","fmt","from","from","from","from","into","into","into","into","lseek","mode","mount","new","open","open","raw","read","to_owned","trunc","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unlink","unlink","write","write","ExceptionStackFrame","IrqStatistics","add_irq_name","code_segment","counters","cpu_flags","disable","enable","enable_and_wait","get_irq_name","install","instruction_pointer","irq_install_handler","nested_disable","nested_enable","stack_pointer","stack_segment","BootInfo","acpi","apic","application_processor_init","boot_application_processors","boot_processor_init","fuse","gdt","get_base_address","get_cmdline","get_cmdsize","get_image_size","get_limit","get_mbinfo","get_processor_count","get_tls_align","get_tls_filesz","get_tls_memsz","get_tls_start","has_ipdevice","idt","irq","is_single_kernel","is_uhyve","is_uhyve_with_pci","message_output_init","output_message_buf","output_message_byte","pci","percore","pic","pit","print_statistics","processor","scheduler","serial","switch","sys_uhyve_get_gateway","sys_uhyve_get_ip","sys_uhyve_get_mask","systemtime","AcpiTable","get_madt","init","poweroff","TIMER_INTERRUPT_NUMBER","add_local_apic_id","boot_application_processors","eoi","init","init_local_apic","init_next_processor_variables","init_x2apic","ipi_tlb_flush","print_information","set_oneshot_timer","wakeup_core","CUSE_INIT","Cmd","FUSE_ACCESS","FUSE_BATCH_FORGET","FUSE_BMAP","FUSE_CREATE","FUSE_DESTROY","FUSE_EXCHANGE","FUSE_FALLOCATE","FUSE_FLUSH","FUSE_FORGET","FUSE_FSYNC","FUSE_FSYNCDIR","FUSE_GETATTR","FUSE_GETLK","FUSE_GETXATTR","FUSE_GETXTIMES","FUSE_INIT","FUSE_INTERRUPT","FUSE_IOCTL","FUSE_LINK","FUSE_LISTXATTR","FUSE_LOOKUP","FUSE_MKDIR","FUSE_MKNOD","FUSE_NOTIFY_REPLY","FUSE_OPEN","FUSE_OPENDIR","FUSE_POLL","FUSE_READ","FUSE_READDIR","FUSE_READLINK","FUSE_RELEASE","FUSE_RELEASEDIR","FUSE_REMOVEXATTR","FUSE_RENAME","FUSE_RMDIR","FUSE_SETATTR","FUSE_SETLK","FUSE_SETLKW","FUSE_SETVOLNAME","FUSE_SETXATTR","FUSE_STATFS","FUSE_SYMLINK","FUSE_UNLINK","FUSE_WRITE","Fuse","FuseIn","FuseInterface","FuseOut","Opcode","Rsp","atime","atimensec","attr","attr_valid","attr_valid_nsec","blksize","blocks","congestion_threshold","create_create","create_in_header","create_init","create_lookup","create_open","create_read","create_release","create_unlink","create_write","ctime","ctimensec","entry","entry_valid","entry_valid_nsec","error","fh","fh","fh","fh","flags","flags","flags","flags","flags","flags","flags","fuse_attr","fuse_create_in","fuse_create_out","fuse_entry_out","fuse_in_header","fuse_init_in","fuse_init_out","fuse_lookup_in","fuse_open_in","fuse_open_out","fuse_out_header","fuse_read_in","fuse_read_out","fuse_release_in","fuse_release_out","fuse_unlink_in","fuse_unlink_out","fuse_write_in","fuse_write_out","generation","gid","gid","ino","len","len","lock_owner","lock_owner","lock_owner","major","major","max_background","max_readahead","max_readahead","max_write","minor","minor","mode","mode","mtime","mtimensec","name","name","name","nlink","nodeid","nodeid","offset","offset","opcode","open","open_flags","padding","padding","padding","padding","padding","padding","padding","pid","rdev","read_flags","release_flags","send_command","size","size","size","size","time_gran","uid","uid","umask","unique","unique","unused","unused","write_flags","GDT_FIRST_TSS","GDT_KERNEL_CODE","GDT_KERNEL_DATA","GDT_NULL","add_current_core","init","set_current_kernel_stack","IDT_ENTRIES","install","set_gate","ExceptionStackFrame","IrqStatistics","add_irq_name","code_segment","counters","cpu_flags","disable","enable","enable_and_wait","get_irq_name","install","instruction_pointer","irq_install_handler","nested_disable","nested_enable","stack_pointer","stack_segment","ATMController","BaseSystemPeripheral","BridgeDevice","DataAcquisitionSignalProcessing","DisplayController","DockingStation","EncryptionController","EthernetController","FDDIController","FabricController","IO","IOBar","ISDNController","InfinibandController","InputDevice","IntelligentIoController","MassStorage","Memory","MemoryBar","MemoryController","MultimediaController","NetworkController","NetworkController","Other","PCI_BAR0_REGISTER","PCI_BASE_ADDRESS_IO_SPACE","PCI_CAPABILITY_LIST_REGISTER","PCI_CAP_ID_VNDR","PCI_CLASS_REGISTER","PCI_COMMAND_BUSMASTER","PCI_COMMAND_REGISTER","PCI_CONFIG_ADDRESS_ENABLE","PCI_CONFIG_ADDRESS_PORT","PCI_CONFIG_DATA_PORT","PCI_HEADER_REGISTER","PCI_HEADER_TYPE_MASK","PCI_ID_REGISTER","PCI_INTERRUPT_REGISTER","PCI_IO_BASE_ADDRESS_MASK","PCI_MAX_BUS_NUMBER","PCI_MAX_DEVICE_NUMBER","PCI_MEM_BASE_ADDRESS_64BIT","PCI_MEM_BASE_ADDRESS_MASK","PCI_MEM_PREFETCHABLE","PCI_MULTIFUNCTION_MASK","PCI_STATUS_CAPABILITIES_LIST","PICMGController","PciAdapter","PciBar","PciClassCode","PciDriver","PciNetworkControllerSubclass","Processor","RTL8139Net","SerialBusController","SimpleCommunicationController","TokenRingController","TooOld","VirtioFs","VirtioNet","WirelessController","WorldFipController","addr","addr","base_addresses","bus","class_id","device","device_id","error","get_adapter","get_filesystem_driver","get_network_driver","index","index","init","init_drivers","irq","prefetchable","print_information","programming_interface_id","read_config","register_driver","size","size","subclass_id","vendor_id","width","write_config","0","0","0","0","0","BadCapPtr","General","NoBar","NoBarForCap","NoCapPtr","NoVirtioCaps","PciError","0","0","0","0","0","0","Is32BitVariable","PERCORE","PerCoreInnerVariables","PerCoreVariable","PerCoreVariableMethods","PerCoreVariables","core_id","core_scheduler","get","get_kernel_stack","increment_irq_counter","init","irq_statistics","kernel_stack","set","set_core_scheduler","set_kernel_stack","tss","PIC1_INTERRUPT_OFFSET","eoi","init","mask","unmask","PIT_INTERRUPT_NUMBER","deinit","init","FPUState","XSaveAVXState","XSaveBndcsr","XSaveBndregs","XSaveHeader","XSaveLWPState","XSaveLegacyRegion","avx_state","bndcfgu_register","bndcsr","bndregs","bndstatus_register","bound_registers","buffer_base","buffer_head_offset","buffer_size","configure","detect_features","detect_frequency","event_counter","filters","flags","fpu_control_word","fpu_data_pointer","fpu_data_pointer_high_or_ds","fpu_instruction_pointer","fpu_instruction_pointer_high_or_cs","fpu_opcode","fpu_status_word","fpu_tag_word","generate_random_number32","generate_random_number64","get_frequency","get_linear_address_bits","get_physical_address_bits","get_timer_ticks","get_timestamp","halt","header","legacy_region","lwp_state","lwpcb_address","mxcsr","mxcsr_mask","padding","print_information","readfs","readgs","reserved","run_on_hypervisor","saved_event_record","shutdown","st_space","supports_1gib_pages","supports_avx","supports_fsgs","supports_tsc_deadline","supports_x2apic","supports_xsave","udelay","writefs","writegs","xcomp_bv","xmm_space","xstate_bv","ymmh_space","Boot","BootStack","Common","CommonStack","TaskStacks","TaskTLS","install_timer_handler","0","0","SerialPort","port_address","kernel_function0","kernel_function1","kernel_function2","kernel_function3","kernel_function4","kernel_function5","kernel_function6","switch_to_fpu_owner","switch_to_task","get_boot_time","init","0","0","PhysAddr","VirtAddr","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","align_down_to_base_page","align_down_to_base_page","align_down_to_huge_page","align_down_to_huge_page","align_down_to_large_page","align_down_to_large_page","align_up_to_base_page","align_up_to_base_page","align_up_to_huge_page","align_up_to_huge_page","align_up_to_large_page","align_up_to_large_page","as_mut_ptr","as_ptr","as_u64","as_u64","as_usize","as_usize","base_page_offset","base_page_offset","bitand","bitand","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitor","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_u64","from_usize","hash","hash","huge_page_offset","huge_page_offset","init","init_page_tables","into","into","into","into","into","into","is_aligned","is_aligned","is_base_page_aligned","is_base_page_aligned","is_huge_page_aligned","is_huge_page_aligned","is_large_page_aligned","is_large_page_aligned","is_zero","is_zero","large_page_offset","large_page_offset","ne","ne","paging","partial_cmp","partial_cmp","physicalmem","rem","rem","rem","rem","rem","rem","shr","shr","shr","shr","split","sub","sub","sub","sub","sub","sub","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","virtualmem","zero","zero","BasePageSize","HugePageSize","LargePageSize","PageSize","PageTableEntry","PageTableEntryFlags","get_application_page_size","get_page_table_entry","get_physical_address","identity_map","init","init_page_tables","map","page_fault_handler","unmap","virt_to_phys","virtual_to_physical","allocate","allocate_aligned","deallocate","init","print_information","reserve","total_memory_size","allocate","allocate_aligned","deallocate","init","kernel_heap_end","print_information","Is32BitVariable","PERCORE","PerCoreInnerVariables","PerCoreVariable","PerCoreVariableMethods","PerCoreVariables","core_id","core_scheduler","get","get_kernel_stack","increment_irq_counter","init","irq_statistics","kernel_stack","set","set_core_scheduler","set_kernel_stack","tss","FPUState","XSaveAVXState","XSaveBndcsr","XSaveBndregs","XSaveHeader","XSaveLWPState","XSaveLegacyRegion","avx_state","bndcfgu_register","bndcsr","bndregs","bndstatus_register","bound_registers","buffer_base","buffer_head_offset","buffer_size","configure","detect_features","detect_frequency","event_counter","filters","flags","fpu_control_word","fpu_data_pointer","fpu_data_pointer_high_or_ds","fpu_instruction_pointer","fpu_instruction_pointer_high_or_cs","fpu_opcode","fpu_status_word","fpu_tag_word","generate_random_number32","generate_random_number64","get_frequency","get_linear_address_bits","get_physical_address_bits","get_timer_ticks","get_timestamp","halt","header","legacy_region","lwp_state","lwpcb_address","mxcsr","mxcsr_mask","padding","print_information","readfs","readgs","reserved","run_on_hypervisor","saved_event_record","shutdown","st_space","supports_1gib_pages","supports_avx","supports_fsgs","supports_tsc_deadline","supports_x2apic","supports_xsave","udelay","writefs","writegs","xcomp_bv","xmm_space","xstate_bv","ymmh_space","Boot","BootStack","Common","CommonStack","TaskStacks","TaskTLS","install_timer_handler","0","0","kernel_function0","kernel_function1","kernel_function2","kernel_function3","kernel_function4","kernel_function5","kernel_function6","switch_to_fpu_owner","switch_to_task","kernel","mm","BootInfo","acpi","apic","application_processor_init","boot_application_processors","boot_processor_init","borrow","borrow_mut","current_stack_address_offset","from","fuse","gdt","get_base_address","get_cmdline","get_cmdsize","get_image_size","get_limit","get_mbinfo","get_processor_count","get_tls_align","get_tls_filesz","get_tls_memsz","get_tls_start","has_ipdevice","idt","into","irq","is_single_kernel","is_uhyve","is_uhyve_with_pci","message_output_init","output_message_buf","output_message_byte","pci","percore","pic","pit","print_statistics","processor","scheduler","serial","switch","sys_uhyve_get_gateway","sys_uhyve_get_ip","sys_uhyve_get_mask","systemtime","try_from","try_into","type_id","AcpiTable","borrow","borrow_mut","drop","from","get_madt","header_start_address","init","into","poweroff","table_end_address","table_start_address","try_from","try_into","type_id","TIMER_INTERRUPT_NUMBER","add_local_apic_id","boot_application_processors","eoi","init","init_local_apic","init_next_processor_variables","init_x2apic","ipi_tlb_flush","print_information","set_oneshot_timer","wakeup_core","CUSE_INIT","Cmd","FUSE_ACCESS","FUSE_BATCH_FORGET","FUSE_BMAP","FUSE_CREATE","FUSE_DESTROY","FUSE_EXCHANGE","FUSE_FALLOCATE","FUSE_FLUSH","FUSE_FORGET","FUSE_FSYNC","FUSE_FSYNCDIR","FUSE_GETATTR","FUSE_GETLK","FUSE_GETXATTR","FUSE_GETXTIMES","FUSE_INIT","FUSE_INTERRUPT","FUSE_IOCTL","FUSE_LINK","FUSE_LISTXATTR","FUSE_LOOKUP","FUSE_MKDIR","FUSE_MKNOD","FUSE_NOTIFY_REPLY","FUSE_OPEN","FUSE_OPENDIR","FUSE_POLL","FUSE_READ","FUSE_READDIR","FUSE_READLINK","FUSE_RELEASE","FUSE_RELEASEDIR","FUSE_REMOVEXATTR","FUSE_RENAME","FUSE_RMDIR","FUSE_SETATTR","FUSE_SETLK","FUSE_SETLKW","FUSE_SETVOLNAME","FUSE_SETXATTR","FUSE_STATFS","FUSE_SYMLINK","FUSE_UNLINK","FUSE_WRITE","Fuse","FuseIn","FuseInterface","FuseOut","Opcode","Rsp","atime","atimensec","attr","attr_valid","attr_valid_nsec","blksize","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","congestion_threshold","create_create","create_in_header","create_init","create_lookup","create_open","create_read","create_release","create_unlink","create_write","ctime","ctimensec","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","entry","entry_valid","entry_valid_nsec","error","fh","fh","fh","fh","flags","flags","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fuse_attr","fuse_create_in","fuse_create_out","fuse_entry_out","fuse_in_header","fuse_init_in","fuse_init_out","fuse_lookup_in","fuse_open_in","fuse_open_out","fuse_out_header","fuse_read_in","fuse_read_out","fuse_release_in","fuse_release_out","fuse_unlink_in","fuse_unlink_out","fuse_write_in","fuse_write_out","generation","gid","gid","ino","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","len","len","lock_owner","lock_owner","lock_owner","lookup","major","major","max_background","max_readahead","max_readahead","max_write","minor","minor","mode","mode","mtime","mtimensec","name","name","name","new","nlink","nodeid","nodeid","offset","offset","opcode","open","open","open_flags","padding","padding","padding","padding","padding","padding","padding","pid","rdev","read_flags","release_flags","send_command","send_init","size","size","size","size","time_gran","to_owned","to_u8buf","to_u8buf_mut","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","uid","umask","unique","unique","unlink","unused","unused","write_flags","GDT_FIRST_TSS","GDT_KERNEL_CODE","GDT_KERNEL_DATA","GDT_NULL","add_current_core","init","set_current_kernel_stack","IDT_ENTRIES","install","set_gate","ExceptionStackFrame","IrqStatistics","add_irq_name","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","code_segment","counters","cpu_flags","disable","enable","enable_and_wait","fmt","from","from","get_irq_name","inc","install","instruction_pointer","into","into","irq_install_handler","nested_disable","nested_enable","new","stack_pointer","stack_segment","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ATMController","BaseSystemPeripheral","BridgeDevice","DataAcquisitionSignalProcessing","DisplayController","DockingStation","EncryptionController","EthernetController","FDDIController","FabricController","IO","IOBar","ISDNController","InfinibandController","InputDevice","IntelligentIoController","MassStorage","Memory","MemoryBar","MemoryController","MultimediaController","NetworkController","NetworkController","Other","PCI_BAR0_REGISTER","PCI_BASE_ADDRESS_IO_SPACE","PCI_CAPABILITY_LIST_REGISTER","PCI_CAP_ID_VNDR","PCI_CLASS_REGISTER","PCI_COMMAND_BUSMASTER","PCI_COMMAND_REGISTER","PCI_CONFIG_ADDRESS_ENABLE","PCI_CONFIG_ADDRESS_PORT","PCI_CONFIG_DATA_PORT","PCI_HEADER_REGISTER","PCI_HEADER_TYPE_MASK","PCI_ID_REGISTER","PCI_INTERRUPT_REGISTER","PCI_IO_BASE_ADDRESS_MASK","PCI_MAX_BUS_NUMBER","PCI_MAX_DEVICE_NUMBER","PCI_MEM_BASE_ADDRESS_64BIT","PCI_MEM_BASE_ADDRESS_MASK","PCI_MEM_PREFETCHABLE","PCI_MULTIFUNCTION_MASK","PCI_STATUS_CAPABILITIES_LIST","PICMGController","PciAdapter","PciBar","PciClassCode","PciDriver","PciNetworkControllerSubclass","Processor","RTL8139Net","SerialBusController","SimpleCommunicationController","TokenRingController","TooOld","VirtioFs","VirtioNet","WirelessController","WorldFipController","addr","addr","base_addresses","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus","class_id","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","device","device_id","eq","eq","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_i64","from_i64","from_u64","from_u64","get_adapter","get_bar","get_filesystem_driver","get_network_driver","index","index","init","init_drivers","into","into","into","into","into","into","into","irq","make_bus_master","memory_map_bar","prefetchable","print_information","programming_interface_id","read_config","register_driver","size","size","subclass_id","to_i64","to_i64","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_u64","to_u64","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vendor_id","width","write_config","0","0","0","0","0","BadCapPtr","General","NoBar","NoBarForCap","NoCapPtr","NoVirtioCaps","PciError","borrow","borrow_mut","fmt","from","into","try_from","try_into","type_id","0","0","0","0","0","0","Is32BitVariable","PERCORE","PerCoreInnerVariables","PerCoreVariable","PerCoreVariableMethods","PerCoreVariables","borrow","borrow","borrow_mut","borrow_mut","core_id","core_scheduler","from","from","get","get","get","get_kernel_stack","increment_irq_counter","init","into","into","irq_statistics","kernel_stack","new","new","set","set","set","set_core_scheduler","set_kernel_stack","try_from","try_from","try_into","try_into","tss","type_id","type_id","PIC1_INTERRUPT_OFFSET","eoi","init","mask","unmask","PIT_INTERRUPT_NUMBER","deinit","init","FPUState","XSaveAVXState","XSaveBndcsr","XSaveBndregs","XSaveHeader","XSaveLWPState","XSaveLegacyRegion","avx_state","bndcfgu_register","bndcsr","bndregs","bndstatus_register","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_registers","buffer_base","buffer_head_offset","buffer_size","configure","detect_features","detect_frequency","event_counter","filters","flags","fpu_control_word","fpu_data_pointer","fpu_data_pointer_high_or_ds","fpu_instruction_pointer","fpu_instruction_pointer_high_or_cs","fpu_opcode","fpu_status_word","fpu_tag_word","from","from","from","from","from","from","from","generate_random_number32","generate_random_number64","get_frequency","get_linear_address_bits","get_physical_address_bits","get_timer_ticks","get_timestamp","halt","header","into","into","into","into","into","into","into","legacy_region","lwp_state","lwpcb_address","mxcsr","mxcsr_mask","new","padding","print_information","readfs","readgs","reserved","restore","restore_common","run_on_hypervisor","save","save_common","saved_event_record","shutdown","st_space","supports_1gib_pages","supports_avx","supports_fsgs","supports_tsc_deadline","supports_x2apic","supports_xsave","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udelay","writefs","writegs","xcomp_bv","xmm_space","xstate_bv","ymmh_space","Boot","BootStack","Common","CommonStack","MARKER_SIZE","TaskStacks","TaskTLS","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","drop","from","from","from","from","from_boot_stacks","get_interrupt_stack","get_interrupt_stack_size","get_kernel_stack","get_kernel_stack_size","get_user_stack","get_user_stack_size","install_timer_handler","into","into","into","into","new","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","0","SerialPort","borrow","borrow_mut","from","init","into","new","port_address","try_from","try_into","type_id","write_byte","kernel_function0","kernel_function1","kernel_function2","kernel_function3","kernel_function4","kernel_function5","kernel_function6","switch_to_fpu_owner","switch_to_task","get_boot_time","init","0","0","PhysAddr","VirtAddr","init","init_page_tables","paging","physicalmem","virtualmem","ACCESSED","BasePageSize","CACHE_DISABLE","DIRTY","EXECUTE_DISABLE","GLOBAL","HUGE_PAGE","HugePageSize","LargePageSize","MAP_EXTRA_FLAG","MAP_EXTRA_FLAG","MAP_EXTRA_FLAG","MAP_LEVEL","MAP_LEVEL","MAP_LEVEL","PRESENT","PageSize","PageTableEntry","PageTableEntryFlags","SIZE","SIZE","SIZE","USER_ACCESSIBLE","WRITABLE","WRITE_THROUGH","address","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","complement","contains","device","difference","empty","eq","execute_disable","extend","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_application_page_size","get_page_table_entry","get_physical_address","hash","identity_map","init","init_page_tables","insert","intersection","intersects","into","into","into","into","into","is_all","is_empty","map","ne","normal","not","page_fault_handler","partial_cmp","read_only","remove","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","virt_to_phys","virtual_to_physical","writable","allocate","allocate_aligned","deallocate","init","print_information","reserve","total_memory_size","allocate","allocate_aligned","deallocate","init","kernel_heap_end","print_information"],"q":["hermithermit::environment","","","","","","","","","","","","","","","hermit::fs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::irq","","","","","","","","","","","","","","","","","hermit::kernel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::kernel::acpi","","","","hermit::kernel::apic","","","","","","","","","","","","hermit::kernel::fuse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::kernel::gdt","","","","","","","hermit::kernel::idt","","","hermit::kernel::irq","","","","","","","","","","","","","","","","","hermit::kernel::pci","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::kernel::pci::PciBar","","hermit::kernel::pci::PciDriver","","","hermit::kernel::pci::error","","","","","","","hermit::kernel::pci::error::PciError","","","","","","hermit::kernel::percore","","","","","","","","","","","","","","","","","","hermit::kernel::pic","","","","","hermit::kernel::pit","","","hermit::kernel::processor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::kernel::scheduler","","","","","","","hermit::kernel::scheduler::TaskStacks","","hermit::kernel::serial","","hermit::kernel::switch","","","","","","","","","hermit::kernel::systemtime","","hermit::mm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::mm::paging","","","","","","","","","","","","","","","","","hermit::mm::physicalmem","","","","","","","hermit::mm::virtualmem","","","","","","hermit::percore","","","","","","","","","","","","","","","","","","hermit::processor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::scheduler","","","","","","","hermit::scheduler::TaskStacks","","hermit::switch","","","","","","","","","hermit::x86_64","","hermit::x86_64::kernel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::x86_64::kernel::acpi","","","","","","","","","","","","","","","hermit::x86_64::kernel::apic","","","","","","","","","","","","hermit::x86_64::kernel::fusehermit::x86_64::kernel::gdt","","","","","","","hermit::x86_64::kernel::idt","","","hermit::x86_64::kernel::irq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::x86_64::kernel::pcihermit::x86_64::kernel::pci::PciBar","","hermit::x86_64::kernel::pci::PciDriver","","","hermit::x86_64::kernel::pci::error","","","","","","","","","","","","","","","hermit::x86_64::kernel::pci::error::PciError","","","","","","hermit::x86_64::kernel::percore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::x86_64::kernel::pic","","","","","hermit::x86_64::kernel::pit","","","hermit::x86_64::kernel::processor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::x86_64::kernel::scheduler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::x86_64::kernel::scheduler::TaskStacks","","hermit::x86_64::kernel::serial","","","","","","","","","","","","hermit::x86_64::kernel::switch","","","","","","","","","hermit::x86_64::kernel::systemtime","","hermit::x86_64::mm","","","","","","","","","hermit::x86_64::mm::paging","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hermit::x86_64::mm::physicalmem","","","","","","","hermit::x86_64::mm::virtualmem","","","","",""],"d":["","","","","","","","","","","","","","Interface to deallocate a memory region from the system …","Interface to allocate memory from system heap","Shrink or grow a block of memory to the given <code>new_size</code>. …","","","","","Application Processor initialization","Boots all available Application Processors on bare-metal …","Real Boot Processor initialization as soon as we have put …","","","","","","","","","","","","","","","","","Determining and providing information about the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Runs <code>f</code> on the kernel stack.","Earliest initialization function called by the Boot …","","","","","Print formatted text to our console.","Print formatted text to our console, followed by a newline.","","","Architecture dependent interface to initialize a task","","","","","","Set the current task state to <code>blocked</code>","Set the current task state to <code>blocked</code>","","","","","","","","","","","","Determine the priority of the current thread","Returns the number of processors currently online. ","Returns the processor frequency in MHz. ","","","","","","","","","","","","","","","The function computes a sequence of pseudo-random integers …","","","","","","","","","Create a cryptographicly secure 32bit random number with …","Create a cryptographicly secure 64bit random number with …","","","","","","","","","","","","","","","","","","","","","","The function sets its argument as the seed for a new …","","","","","","Wake up the task with the identifier <code>id</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","Send an inter-processor interrupt to wake up a CPU Core …","","","","","Returns the cmdline argument passed in after “–”","CPU Frequency in MHz if given through the -freq …","Returns the first cmdline argument, if not otherwise …","","","","","","","Whether HermitCore shall communicate with the “proxy” …","Whether HermitCore is running alone (true) or side-by-side …","Whether HermitCore is running under the “uhyve” …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Run closure on file referenced by file descriptor.","","","","","","","","","","","","","Create new backing-fs at mountpoint mntpath","","","Tries to open file at given path …","","","","","","","","","","","","","","","","","","","Unlinks a file given by path","","","Represents the exception stack frame pushed by the CPU on …","","","The code segment selector, padded with zeros.","","The flags register before the interrupt handler was …","Disable Interrupts","Enable Interrupts","Enable Interrupts and wait for the next interrupt (HLT …","","","This value points to the instruction that should be …","","Disable IRQs (nested)","Enable IRQs (nested)","The stack pointer at the time of the interrupt.","The stack segment descriptor at the time of the interrupt …","","","","Application Processor initialization","Boots all available Application Processors on bare-metal …","Real Boot Processor initialization as soon as we have put …","","","","","","","","","","","","","","","","","Whether HermitCore is running alone (true) or side-by-side …","Whether HermitCore is running under the “uhyve” …","","Earliest initialization function called by the Boot …","","","","","","","","","Architecture dependent interface to initialize a task","","","","","","","A convenience structure to work with an ACPI table. Maps a …","","","","","","Boot all Application Processors This algorithm is derived …","","","","Initialize the required entry.asm variables for the next …","","","","","Send an inter-processor interrupt to wake up a CPU Core …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Marker trait, which signals that a struct is a valid Fuse …","","Marker trait, which signals that a struct is a valid Fuse …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Declare an IDT of 256 entries. Although not all entries …","","Set an entry in the IDT.","Represents the exception stack frame pushed by the CPU on …","","","The code segment selector, padded with zeros.","","The flags register before the interrupt handler was …","Disable Interrupts","Enable Interrupts","Enable Interrupts and wait for the next interrupt (HLT …","","","This value points to the instruction that should be …","","Disable IRQs (nested)","Enable IRQs (nested)","The stack pointer at the time of the interrupt.","The stack segment descriptor at the time of the interrupt …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Classes of PCI nodes.","","Network Controller Sub Classes","","","","","","","","","","","","","","","","","","A module containing PCI specific errors","","","","","","","","","","","","Returns the value (indicated by bus, device and register) …","","","","","","","","","","","","","","","","","","","An enum of PciErrors typically carrying the device’s id …","","","","","","","","","","","","","","","","","","","Interface to the interrupt counters","start address of the kernel stack","","","","Task State Segment (TSS) allocated for this CPU Core.","","","","","","","","","","","","","","XSave Area for AMD Lightweight Profiling. Refer to AMD …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The halt function stops the processor until the next …","","","","","","","","","","","","","","Shutdown the system","","","","","","","","Delay execution by the given number of microseconds using …","","","","","","","","","","","","","","","","","","Executes <code>f</code> on the kernel stack.","Executes <code>f</code> on the kernel stack.","Executes <code>f</code> on the kernel stack.","Executes <code>f</code> on the kernel stack.","Executes <code>f</code> on the kernel stack.","Executes <code>f</code> on the kernel stack.","Executes <code>f</code> on the kernel stack.","Performa a context switch to an idle task or a task, which …","","","","","","A wrapper for a physical address.","A wrapper for a virtual address.","","","","","","","","","","","","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 1 GiB page (higher or equal than …","Return address of nearest 1 GiB page (higher or equal than …","Return address of nearest 2 MiB page (higher or equal than …","Return address of nearest 2 MiB page (higher or equal than …","Convert to mutable pointer.","Convert to pointer.","Convert to <code>u64</code>","Convert to <code>u64</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Offset within the 4 KiB page.","Offset within the 4 KiB page.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from <code>u64</code>","Convert from <code>usize</code>","","","Offset within the 1 GiB page.","Offset within the 1 GiB page.","","","","","","","","","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Is this address aligned to a 1 GiB page?","Is this address aligned to a 1 GiB page?","Is this address aligned to a 2 MiB page?","Is this address aligned to a 2 MiB page?","Is zero?","Is zero?","Offset within the 2 MiB page.","Offset within the 2 MiB page.","","","","","","","","","","","","","","","","","Split <code>PAddr</code> into lower and higher 32-bits.","","","","","","","","","","","","","","","","","","Physical Address zero.","Virtual Address zero.","A 4 KiB page mapped in the PT.","A 1 GiB page mapped in the PDPT.","A 2 MiB page mapped in the PD.","A generic interface to support all possible page sizes.","An entry in either table (PML4, PDPT, PD, PT)","Possible flags for an entry in either table (PML4, PDPT, …","","","","","","","","","","","Translate a virtual memory address to a physical one.","","","This function must only be called from mm::deallocate! …","","","","","","","","","End of the virtual memory address space reserved for …","","","","","","","","","","","","","","Interface to the interrupt counters","start address of the kernel stack","","","","Task State Segment (TSS) allocated for this CPU Core.","","","","","","XSave Area for AMD Lightweight Profiling. Refer to AMD …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The halt function stops the processor until the next …","","","","","","","","","","","","","","Shutdown the system","","","","","","","","Delay execution by the given number of microseconds using …","","","","","","","","","","","","","","","","Executes <code>f</code> on the kernel stack.","Executes <code>f</code> on the kernel stack.","Executes <code>f</code> on the kernel stack.","Executes <code>f</code> on the kernel stack.","Executes <code>f</code> on the kernel stack.","Executes <code>f</code> on the kernel stack.","Executes <code>f</code> on the kernel stack.","Performa a context switch to an idle task or a task, which …","","","","","","","Application Processor initialization","Boots all available Application Processors on bare-metal …","Real Boot Processor initialization as soon as we have put …","","","","","","","","","","","","","","","","","","","","","","Whether HermitCore is running alone (true) or side-by-side …","Whether HermitCore is running under the “uhyve” …","","Earliest initialization function called by the Boot …","","","","","","","","","Architecture dependent interface to initialize a task","","","","","","","","","","A convenience structure to work with an ACPI table. Maps a …","","","","","","","","","","","","","","","","","Boot all Application Processors This algorithm is derived …","","","","Initialize the required entry.asm variables for the next …","","","","","Send an inter-processor interrupt to wake up a CPU Core …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Marker trait, which signals that a struct is a valid Fuse …","","Marker trait, which signals that a struct is a valid Fuse …eclare an IDT of 256 entries. Although not all entries …","","Set an entry in the IDT.","Represents the exception stack frame pushed by the CPU on …","","","","","","","","","The code segment selector, padded with zeros.","","The flags register before the interrupt handler was …","Disable Interrupts","Enable Interrupts","Enable Interrupts and wait for the next interrupt (HLT …","","","","","","","This value points to the instruction that should be …","","","","Disable IRQs (nested)","Enable IRQs (nested)","","The stack pointer at the time of the interrupt.","The stack segment descriptor at the time of the interrupt …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Classes of PCI nodes.","","Network Controller Sub Classes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A module containing PCI specific errors","","","","","","","","","","","","","","","","","","","","","Returns the bar at bar-register baridx.","","","","","","","","","","","","","","","","Memory maps pci bar with specified index to identical …","","","","Returns the value (indicated by bus, device and register) …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An enum of PciErrors typically carrying the device’s id …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Interface to the interrupt counters","start address of the kernel stack","","","","","","","","","","","","Task State Segment (TSS) allocated for this CPU Core.","","","","","","","","","","","","","","","","XSave Area for AMD Lightweight Profiling. Refer to AMD …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The halt function stops the processor until the next …","","","","","","","","","","","","","","","","","","","","","","","","","","Shutdown the system","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Delay execution by the given number of microseconds using …","","","","","","","","","","","Size of the debug marker at the very top of each stack.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Executes <code>f</code> on the kernel stack.","Executes <code>f</code> on the kernel stack.","Executes <code>f</code> on the kernel stack.","Executes <code>f</code> on the kernel stack.","Executes <code>f</code> on the kernel stack.","Executes <code>f</code> on the kernel stack.","Executes <code>f</code> on the kernel stack.","Performa a context switch to an idle task or a task, which …","","","","","","A wrapper for a physical address.","A wrapper for a virtual address.","","","","","","Set if software has accessed this entry (for memory access …","A 4 KiB page mapped in the PT.","Set if caching shall be disabled for memory referenced by …","Only for page entries: Set if software has written to the …","Set if code execution shall be disabled for memory …","Only for page entries: Set if this address translation is …","Only for page entries in PDPT or PDT: Set if this entry …","A 1 GiB page mapped in the PDPT.","A 2 MiB page mapped in the PD.","Any extra flag that needs to be set to map a page of this …","Any extra flag that needs to be set to map a page of this …","Any extra flag that needs to be set to map a page of this …","The page table level at which a page of this size is …","The page table level at which a page of this size is …","The page table level at which a page of this size is …","Set if this entry is valid and points to a page or table.","A generic interface to support all possible page sizes.","An entry in either table (PML4, PDPT, PD, PT)","Possible flags for an entry in either table (PML4, PDPT, …","The page size in bytes.","The page size in bytes.","The page size in bytes.","Set if memory referenced by this entry shall be accessible …","Set if memory referenced by this entry shall be writable.","Set if Write-Through caching shall be enabled for memory …","Return the stored physical address.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","Translate a virtual memory address to a physical one.","","","","This function must only be called from mm::deallocate! …","","","","","","","","","End of the virtual memory address space reserved for …",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,1,2,3,4,5,3,4,5,3,4,5,0,3,4,5,1,2,3,4,5,0,0,0,0,0,0,0,0,1,2,3,4,5,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,5,1,2,3,4,5,1,2,3,4,5,4,4,5,5,1,2,3,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,7,6,0,0,0,0,0,0,0,6,8,9,6,7,8,9,6,7,8,8,8,10,9,8,8,8,8,9,7,8,9,6,7,8,9,6,7,8,10,8,9,9,11,9,8,10,8,8,9,6,6,7,8,9,6,7,8,9,6,7,8,11,9,10,8,0,0,0,12,13,12,0,0,0,0,0,12,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,15,15,16,16,16,15,15,17,0,0,0,0,0,0,0,0,0,15,15,18,16,16,19,20,21,22,23,24,25,17,20,21,26,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,27,15,15,27,19,20,21,23,25,17,17,25,17,17,25,17,24,15,15,15,28,29,24,15,27,16,20,21,27,18,22,24,27,20,21,30,22,15,27,15,20,23,31,20,21,30,15,17,27,15,24,27,19,17,26,21,0,0,0,0,0,0,0,0,0,0,0,0,0,12,13,12,0,0,0,0,0,12,0,0,0,12,12,32,33,33,33,33,33,33,32,32,32,34,0,32,32,33,33,33,34,0,33,33,33,32,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,33,35,33,33,32,33,35,35,33,32,36,37,38,38,38,38,38,0,0,0,0,36,37,0,0,38,37,0,38,0,0,36,37,38,38,37,0,39,40,41,42,43,44,44,44,44,44,44,0,45,46,47,48,49,50,0,0,0,0,0,0,0,0,51,0,0,0,52,52,51,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,54,53,53,54,55,56,56,56,0,0,0,56,56,56,57,57,57,57,57,57,57,57,0,0,0,0,0,0,0,0,53,53,53,56,57,57,57,0,0,0,58,0,56,0,57,0,0,0,0,0,0,0,0,0,58,57,58,59,60,0,60,0,0,0,0,61,62,0,63,0,0,0,0,0,0,0,0,0,0,0,64,65,0,0,64,64,64,65,65,65,64,64,65,65,65,64,65,64,65,64,65,64,65,64,65,64,65,65,65,64,65,64,65,64,65,64,64,65,65,65,65,64,64,65,65,65,64,65,64,65,64,65,64,65,64,65,64,65,64,64,64,64,64,64,64,65,65,65,65,65,65,65,64,64,64,64,65,65,65,65,65,65,64,65,64,65,0,0,64,64,64,65,65,65,64,65,64,65,64,65,64,65,64,65,64,65,64,65,0,64,65,0,64,64,64,65,65,65,64,65,65,65,64,64,64,64,65,65,65,64,65,64,65,64,65,64,65,64,65,0,64,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0,0,0,52,52,51,0,0,52,0,0,0,0,0,0,0,53,54,53,53,54,55,56,56,56,0,0,0,56,56,56,57,57,57,57,57,57,57,57,0,0,0,0,0,0,0,0,53,53,53,56,57,57,57,0,0,0,58,0,56,0,57,0,0,0,0,0,0,0,0,0,58,57,58,59,60,0,60,0,0,0,0,61,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,0,67,67,67,67,0,67,0,67,0,67,67,67,67,67,0,0,0,0,0,0,0,0,0,0,0,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,15,15,16,16,16,15,15,68,28,29,24,14,69,70,27,19,25,17,20,71,21,30,26,22,23,72,16,15,73,18,68,28,29,24,14,69,70,27,19,25,17,20,71,21,30,26,22,23,72,16,15,73,18,14,14,17,0,0,0,0,0,0,0,0,0,15,15,68,19,17,20,71,21,30,26,22,23,72,16,15,73,18,18,16,16,19,20,21,22,23,24,25,17,20,21,26,23,28,29,24,14,69,70,27,19,25,17,20,71,21,30,26,22,23,72,16,15,73,18,68,28,28,29,29,24,14,69,70,27,19,25,17,20,71,21,30,26,22,23,72,16,15,73,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,27,15,15,68,28,29,24,14,69,70,27,19,25,17,20,71,21,30,26,22,23,72,16,15,73,18,27,19,20,21,23,68,25,17,17,25,17,17,25,17,24,15,15,15,28,29,24,68,15,27,16,20,21,27,68,18,22,24,27,20,21,30,22,15,27,15,20,23,31,68,20,21,30,15,17,14,69,70,68,28,29,24,14,69,70,27,19,25,17,20,71,21,30,26,22,23,72,16,15,73,18,68,28,29,24,14,69,70,27,19,25,17,20,71,21,30,26,22,23,72,16,15,73,18,68,28,29,24,14,69,70,27,19,25,17,20,71,21,30,26,22,23,72,16,15,73,18,27,15,24,27,19,68,17,26,21,0,0,0,0,0,0,0,0,0,0,0,0,0,12,13,12,13,13,13,12,13,12,0,0,0,12,12,13,0,13,0,12,12,13,0,0,0,13,12,12,13,12,13,12,13,12,13,32,33,33,33,33,33,33,32,32,32,34,0,32,32,33,33,33,34,0,33,33,33,32,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,33,35,33,33,32,33,35,35,33,32,36,37,38,35,33,32,38,34,36,37,35,33,32,38,34,36,37,38,38,33,32,38,34,36,37,33,32,38,34,36,37,38,38,33,32,0,33,32,38,38,34,34,36,37,35,33,32,38,34,36,37,33,32,33,32,0,38,0,0,36,37,0,0,35,33,32,38,34,36,37,38,38,38,37,0,38,0,0,36,37,38,33,32,33,32,38,34,36,37,38,34,33,32,35,33,32,38,34,36,37,35,33,32,38,34,36,37,35,33,32,38,34,36,37,38,37,0,39,40,41,42,43,44,44,44,44,44,44,0,44,44,44,44,44,44,44,44,45,46,47,48,49,50,0,0,0,0,0,0,52,74,52,74,0,0,52,74,51,74,74,0,0,0,52,74,52,52,52,74,51,74,74,0,0,52,74,52,74,52,52,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,54,53,53,54,57,58,59,56,55,54,53,57,58,59,56,55,54,53,55,56,56,56,0,0,0,56,56,56,57,57,57,57,57,57,57,57,57,58,59,56,55,54,53,0,0,0,0,0,0,0,0,53,57,58,59,56,55,54,53,53,53,56,57,57,53,57,0,0,0,58,53,53,0,53,53,56,0,57,0,0,0,0,0,0,57,58,59,56,55,54,53,57,58,59,56,55,54,53,57,58,59,56,55,54,53,0,0,0,58,57,58,59,60,0,60,0,60,0,0,75,76,60,77,75,76,60,77,60,75,76,60,77,60,60,60,60,60,60,60,0,75,76,60,77,60,75,76,60,77,75,76,60,77,75,76,60,77,61,62,0,63,63,63,63,63,63,63,63,63,63,63,0,0,0,0,0,0,0,0,0,0,0,64,65,0,0,0,0,0,0,0,78,0,78,78,78,78,78,0,0,79,79,79,79,79,79,78,0,0,0,79,79,79,78,78,78,80,78,78,78,78,78,78,78,78,78,80,81,82,83,78,80,81,82,83,78,80,81,82,83,78,80,81,82,83,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,80,81,82,83,78,78,78,78,0,0,0,78,0,0,0,78,78,78,78,80,81,82,83,78,78,0,78,78,78,0,78,78,78,78,78,78,78,78,80,81,82,83,78,78,80,81,82,83,78,80,81,82,83,78,80,81,82,83,78,0,0,0,78,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15],["usize",15]]],[[["usize",15],["usize",15]]],[[["usize",15],["usize",15],["usize",15]]],[[["i32",15]],["never",15]],[[["u64",15]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["itimerval",3]],[[],["timespec",3]],[[],["timeval",3]],[[]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[],["u64",15]],[[],["u32",15]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],null,[[]],[[["u8",15]]],null,null,null,null,[[]],null,[[]],[[["option",4,[["u64",15]]]]],null,[[],["never",15]],[[["usize",15],["i64",15]],["i32",15]],[[]],[[["u64",15]]],[[["u64",15]],["i32",15]],[[["u64",15]],["i32",15]],[[["u64",15],["i32",15]],["i32",15]],[[["u64",15]],["i32",15]],[[["i32",15]],["i32",15]],[[["usize",15]],["i32",15]],[[["i32",15]],["never",15]],[[["usize",15],["usize",15]]],[[["usize",15]],["result",4]],[[],["result",4]],[[],["result",4,[["u16",15]]]],[[],["u8",15]],[[],["usize",15]],[[],["u16",15]],[[["usize",15]],["result",4]],[[],["i32",15]],[[],["tid",6]],[[],["i32",15]],[[["usize",15]],["i32",15]],[[["usize",15]],["i32",15]],[[["tid",6]],["i32",15]],[[["i32",15],["isize",15],["i32",15]],["isize",15]],[[["usize",15],["usize",15]]],[[["u32",15]]],[[],["i32",15]],[[]],[[["usize",15],["i32",15]],["i32",15]],[[["i32",15],["i32",15]],["i32",15]],[[],["u32",15]],[[["i32",15],["usize",15]],["isize",15]],[[["usize",15],["usize",15],["usize",15]]],[[],["result",4]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[["usize",15]],["result",4]],[[],["option",4,[["u32",15]]]],[[],["option",4,[["u64",15]]]],[[["u32",15]],["i32",15]],[[],["i32",15]],[[["u32",15]],["i32",15]],[[],["i32",15]],[[["u32",15]],["i32",15]],[[],["i32",15]],[[["usize",15],["usize",15]],["result",4]],[[["bool",15]]],[[["i32",15]],["i32",15]],[[["i32",15]],["i32",15]],[[["i32",15]],["never",15]],[[["usize",15],["u8",15],["isize",15]],["i32",15]],[[["usize",15],["u8",15],["usize",15],["isize",15]],["tid",6]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[["u32",15]]],[[["usize",15]],["i32",15]],[[["i32",15]],["never",15]],[[],["i32",15]],[[["u64",15]]],[[["usize",15]],["i32",15]],[[["tid",6]]],[[["i32",15],["usize",15]],["isize",15]],[[]],null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u32",15]]],null,[[],["virtaddr",3]],[[],["virtaddr",3]],[[],["usize",15]],[[],["option",4]],[[],["option",4,[["u16",15]]]],[[],["option",4,[["str",15]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["virtaddr",3]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["fileperms",3]],[[]],[[],["result",4,[["fileerror",4]]]],[[["u64",15]]],null,[[],["fileperms",3]],null,null,[[["u64",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["isize",15],["seekwhence",4]],["result",4,[["usize",15],["fileerror",4]]]],null,[[["str",15],["box",3,[["posixfilesystem",8]]]],["result",4]],[[]],[[["str",15],["fileperms",3]],["result",4,[["box",3,[["posixfile",8]]],["fileerror",4]]]],[[["str",15],["fileperms",3]],["result",4,[["u64",15],["fileerror",4]]]],null,[[["u32",15]],["result",4,[["vec",3,[["u8",15]]],["fileerror",4]]]],[[]],null,[[],["result",4]],[[["i32",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["str",15]],["result",4,[["fileerror",4]]]],[[["str",15]],["result",4,[["fileerror",4]]]],[[],["result",4,[["u64",15],["fileerror",4]]]],null,null,null,[[["u32",15],["str",15]]],null,null,null,[[]],[[]],[[]],[[["u32",15]],["option",4,[["string",3]]]],[[]],null,[[["u32",15],["usize",15]]],[[],["bool",15]],[[["bool",15]]],null,null,null,null,null,[[]],[[]],[[]],null,null,[[],["virtaddr",3]],[[],["virtaddr",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["virtaddr",3]],[[],["u32",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["virtaddr",3]],[[],["bool",15]],null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[["u8",15]]],null,null,null,null,[[]],null,null,null,null,[[]],[[]],[[]],null,null,[[],["option",4,[["acpitable",3]]]],[[]],[[]],null,[[["u8",15]]],[[]],[[]],[[]],[[]],[[["u32",15]]],[[]],[[]],[[]],[[["option",4,[["u64",15]]]]],[[["u32",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15],["u32",15],["u32",15]]],[[["opcode",4]],["fuse_in_header",3]],[[]],[[["str",15]]],[[["u64",15],["u32",15]]],[[["u64",15],["u32",15],["u64",15]]],[[["u64",15],["u64",15]]],[[["str",15]]],[[["u64",15],["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cmd",3],["option",4,[["rsp",3]]]],["option",4,[["rsp",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],null,[[]],[[["u8",15],["usize",15],["u8",15]]],null,null,[[["u32",15],["str",15]]],null,null,null,[[]],[[]],[[]],[[["u32",15]],["option",4,[["string",3]]]],[[]],null,[[["u32",15],["usize",15]]],[[],["bool",15]],[[["bool",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u16",15],["u16",15]],["option",4,[["pciadapter",3]]]],[[],["option",4,[["spinlockirqsave",3]]]],[[],["option",4,[["spinlockirqsave",3]]]],null,null,[[]],[[]],null,null,[[]],null,[[["u8",15],["u8",15],["u32",15]],["u32",15]],[[["pcidriver",4]]],null,null,null,null,null,[[["u8",15],["u8",15],["u32",15],["u32",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["u32",15]],[[],["percorescheduler",3]],[[]],[[],["u64",15]],[[["usize",15]]],[[]],null,null,[[]],[[]],[[["u64",15]]],null,null,[[["u8",15]]],[[]],[[["u8",15]]],[[["u8",15]]],null,[[]],[[["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["option",4,[["u32",15]]]],[[],["option",4,[["u64",15]]]],[[],["u16",15]],[[],["u8",15]],[[],["u8",15]],[[],["u64",15]],[[],["u64",15]],[[]],null,null,null,null,null,null,null,[[]],[[],["usize",15]],[[],["usize",15]],null,[[],["bool",15]],null,[[],["never",15]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["u64",15]]],[[["usize",15]]],[[["usize",15]]],null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["u64",15]],[[]],null,null,null,null,[[["usize",15]]],[[["u64",15]]],[[["paddr",3]]],[[["u64",15]]],[[["vaddr",3]]],[[["usize",15]]],[[["paddr",3]]],[[["u64",15]]],[[["usize",15]]],[[["vaddr",3]]],[[["u64",15]]],[[],["paddr",3]],[[],["vaddr",3]],[[],["paddr",3]],[[],["vaddr",3]],[[],["paddr",3]],[[],["vaddr",3]],[[],["paddr",3]],[[],["vaddr",3]],[[],["paddr",3]],[[],["vaddr",3]],[[],["paddr",3]],[[],["vaddr",3]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["usize",15]],[[],["usize",15]],[[],["u64",15]],[[],["u64",15]],[[["u64",15]]],[[["paddr",3]],["paddr",3]],[[["usize",15]]],[[["vaddr",3]]],[[["i32",15]]],[[["u64",15]]],[[["u64",15]]],[[["paddr",3]]],[[["vaddr",3]],["vaddr",3]],[[["u64",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["paddr",3]],[[],["vaddr",3]],[[]],[[]],[[["paddr",3]],["ordering",4]],[[["vaddr",3]],["ordering",4]],[[["paddr",3]],["bool",15]],[[["vaddr",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[["usize",15]],["paddr",3]],[[["u64",15]],["paddr",3]],[[["i32",15]],["paddr",3]],[[]],[[["i32",15]],["vaddr",3]],[[["u64",15]],["vaddr",3]],[[["usize",15]],["vaddr",3]],[[["u64",15]],["vaddr",3]],[[["usize",15]],["vaddr",3]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[],["u64",15]],[[],["usize",15]],[[]],[[],["u64",15]],[[],["usize",15]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u64",15]],[[],["u64",15]],[[["paddr",3]],["bool",15]],[[["vaddr",3]],["bool",15]],null,[[["paddr",3]],["option",4,[["ordering",4]]]],[[["vaddr",3]],["option",4,[["ordering",4]]]],null,[[["usize",15]]],[[["u64",15]]],[[["paddr",3]]],[[]],[[]],[[["vaddr",3]]],[[["u64",15]]],[[["i32",15]]],[[["u64",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["paddr",3]]],[[["u64",15]]],[[["usize",15]]],[[["u64",15]]],[[["vaddr",3]]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[],["paddr",3]],[[],["vaddr",3]],null,null,null,null,null,null,[[],["usize",15]],[[["virtaddr",3]],["option",4,[["pagetableentry",3]]]],[[["virtaddr",3]],["physaddr",3]],[[["physaddr",3],["physaddr",3]]],[[]],[[]],[[["virtaddr",3],["physaddr",3],["usize",15],["pagetableentryflags",3]]],[[["exceptionstackframe",3],["u64",15]]],[[["virtaddr",3],["usize",15]]],[[["virtaddr",3]],["physaddr",3]],[[["virtaddr",3]],["physaddr",3]],[[["usize",15]],["result",4,[["physaddr",3],["allocerror",3]]]],[[["usize",15],["usize",15]],["result",4,[["physaddr",3],["allocerror",3]]]],[[["physaddr",3],["usize",15]]],[[]],[[]],[[["physaddr",3],["usize",15]]],[[],["usize",15]],[[["usize",15]],["result",4,[["virtaddr",3],["allocerror",3]]]],[[["usize",15],["usize",15]],["result",4,[["virtaddr",3],["allocerror",3]]]],[[["virtaddr",3],["usize",15]]],[[]],[[],["virtaddr",3]],[[]],null,null,null,null,null,null,[[],["u32",15]],[[],["percorescheduler",3]],[[]],[[],["u64",15]],[[["usize",15]]],[[]],null,null,[[]],[[]],[[["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["option",4,[["u32",15]]]],[[],["option",4,[["u64",15]]]],[[],["u16",15]],[[],["u8",15]],[[],["u8",15]],[[],["u64",15]],[[],["u64",15]],[[]],null,null,null,null,null,null,null,[[]],[[],["usize",15]],[[],["usize",15]],null,[[],["bool",15]],null,[[],["never",15]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["u64",15]]],[[["usize",15]]],[[["usize",15]]],null,null,null,null,null,null,null,null,null,null,[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["isize",15]],[[]],null,null,[[],["virtaddr",3]],[[],["virtaddr",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["virtaddr",3]],[[],["u32",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["virtaddr",3]],[[],["bool",15]],null,[[]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[["u8",15]]],null,null,null,null,[[]],null,null,null,null,[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[],["option",4,[["acpitable",3]]]],[[],["usize",15]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[["u8",15]]],[[]],[[]],[[]],[[]],[[["u32",15]]],[[]],[[]],[[]],[[["option",4,[["u64",15]]]]],[[["u32",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["opcode",4]],[[]],null,[[["str",15],["u32",15],["u32",15]]],[[["opcode",4]],["fuse_in_header",3]],[[]],[[["str",15]]],[[["u64",15],["u32",15]]],[[["u64",15],["u32",15],["u64",15]]],[[["u64",15],["u64",15]]],[[["str",15]]],[[["u64",15],["u64",15]]],null,null,[[]],[[],["fuse_out_header",3]],[[],["fuse_init_out",3]],[[],["fuse_read_in",3]],[[],["fuse_read_out",3]],[[],["fuse_write_in",3]],[[],["fuse_write_out",3]],[[],["fuse_open_in",3]],[[],["fuse_open_out",3]],[[],["fuse_release_in",3]],[[],["fuse_release_out",3]],[[],["fuse_entry_out",3]],[[],["fuse_attr",3]],[[],["fuse_unlink_out",3]],[[],["fuse_create_out",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]]],[[]],[[["str",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["str",15]],["option",4,[["u64",15]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,[[["str",15],["fileperms",3]],["result",4,[["box",3,[["posixfile",8]]],["fileerror",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cmd",3],["option",4,[["rsp",3]]]],["option",4,[["rsp",3]]]],[[]],null,null,null,null,null,[[]],[[],["vec",3]],[[],["vec",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[["str",15]],["result",4,[["fileerror",4]]]],null,null,null,null,null,null,null,[[]],[[]],[[]],null,[[]],[[["u8",15],["usize",15],["u8",15]]],null,null,[[["u32",15],["str",15]]],[[]],[[]],[[]],[[]],[[],["irqstatistics",3]],[[]],null,null,null,[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u32",15]],["option",4,[["string",3]]]],[[["usize",15]]],[[]],null,[[]],[[]],[[["u32",15],["usize",15]]],[[],["bool",15]],[[["bool",15]]],[[]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["pciclasscode",4]],[[],["pcinetworkcontrollersubclass",4]],[[],["pciadapter",3]],[[],["pcibar",4]],[[],["iobar",3]],[[],["memorybar",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["pciclasscode",4]],["bool",15]],[[["pcinetworkcontrollersubclass",4]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i64",15]],["option",4]],[[["i64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u16",15],["u16",15]],["option",4,[["pciadapter",3]]]],[[["u8",15]],["option",4,[["pcibar",4]]]],[[],["option",4,[["spinlockirqsave",3]]]],[[],["option",4,[["spinlockirqsave",3]]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[["u8",15],["bool",15]],["option",4]],null,[[]],null,[[["u8",15],["u8",15],["u32",15]],["u32",15]],[[["pcidriver",4]]],null,null,null,[[],["option",4,[["i64",15]]]],[[],["option",4,[["i64",15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u64",15]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[["u8",15],["u8",15],["u32",15],["u32",15]]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["percorescheduler",3]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[["usize",15]]],[[]],[[]],[[]],null,null,[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],null,[[["u8",15]]],[[]],[[["u8",15]]],[[["u8",15]]],null,[[]],[[["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4,[["u32",15]]]],[[],["option",4,[["u64",15]]]],[[],["u16",15]],[[],["u8",15]],[[],["u8",15]],[[],["u64",15]],[[],["u64",15]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],null,[[]],[[],["usize",15]],[[],["usize",15]],null,[[]],[[]],[[],["bool",15]],[[]],[[]],null,[[],["never",15]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u64",15]]],[[["usize",15]]],[[["usize",15]]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["taskstacks",4]],[[],["virtaddr",3]],[[],["usize",15]],[[],["virtaddr",3]],[[],["usize",15]],[[],["virtaddr",3]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["taskstacks",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[["u32",15]]],[[]],[[["u16",15]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["u8",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["u64",15]],[[]],null,null,null,null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["physaddr",3]],[[]],[[]],[[]],[[["pagetableentryflags",3]]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pagetableentryflags",3]],[[],["pagetableentry",3]],[[],["basepagesize",4]],[[],["largepagesize",4]],[[],["hugepagesize",4]],[[]],[[]],[[]],[[]],[[]],[[["pagetableentryflags",3]],["ordering",4]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[["pagetableentryflags",3]],["bool",15]],[[]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]],["option",4]],[[["u64",15]]],[[["u64",15]]],[[["intoiterator",8]]],[[],["usize",15]],[[["virtaddr",3]],["option",4,[["pagetableentry",3]]]],[[["virtaddr",3]],["physaddr",3]],[[]],[[["physaddr",3],["physaddr",3]]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["virtaddr",3],["physaddr",3],["usize",15],["pagetableentryflags",3]]],[[["pagetableentryflags",3]],["bool",15]],[[]],[[]],[[["exceptionstackframe",3],["u64",15]]],[[["pagetableentryflags",3]],["option",4,[["ordering",4]]]],[[]],[[]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["virtaddr",3],["usize",15]]],[[["virtaddr",3]],["physaddr",3]],[[["virtaddr",3]],["physaddr",3]],[[]],[[["usize",15]],["result",4,[["physaddr",3],["allocerror",3]]]],[[["usize",15],["usize",15]],["result",4,[["physaddr",3],["allocerror",3]]]],[[["physaddr",3],["usize",15]]],[[]],[[]],[[["physaddr",3],["usize",15]]],[[],["usize",15]],[[["usize",15]],["result",4,[["virtaddr",3],["allocerror",3]]]],[[["usize",15],["usize",15]],["result",4,[["virtaddr",3],["allocerror",3]]]],[[["virtaddr",3],["usize",15]]],[[]],[[],["virtaddr",3]],[[]]],"p":[[3,"SpinlockContainer"],[3,"SpinlockIrqSaveContainer"],[3,"itimerval"],[3,"timespec"],[3,"timeval"],[4,"SeekWhence"],[4,"FileError"],[3,"FilePerms"],[3,"Filesystem"],[8,"PosixFile"],[8,"PosixFileSystem"],[3,"ExceptionStackFrame"],[3,"IrqStatistics"],[4,"Opcode"],[3,"fuse_attr"],[3,"fuse_entry_out"],[3,"fuse_init_out"],[3,"fuse_create_out"],[3,"fuse_out_header"],[3,"fuse_read_in"],[3,"fuse_write_in"],[3,"fuse_open_out"],[3,"fuse_release_in"],[3,"fuse_create_in"],[3,"fuse_init_in"],[3,"fuse_open_in"],[3,"fuse_in_header"],[3,"fuse_lookup_in"],[3,"fuse_unlink_in"],[3,"fuse_write_out"],[8,"FuseInterface"],[4,"PciNetworkControllerSubclass"],[4,"PciClassCode"],[4,"PciBar"],[4,"PciDriver"],[3,"IOBar"],[3,"MemoryBar"],[3,"PciAdapter"],[13,"IO"],[13,"Memory"],[13,"VirtioFs"],[13,"VirtioNet"],[13,"RTL8139Net"],[4,"PciError"],[13,"General"],[13,"NoBar"],[13,"NoCapPtr"],[13,"BadCapPtr"],[13,"NoBarForCap"],[13,"NoVirtioCaps"],[8,"PerCoreVariableMethods"],[3,"PerCoreInnerVariables"],[3,"FPUState"],[3,"XSaveBndcsr"],[3,"XSaveBndregs"],[3,"XSaveLWPState"],[3,"XSaveLegacyRegion"],[3,"XSaveHeader"],[3,"XSaveAVXState"],[4,"TaskStacks"],[13,"Boot"],[13,"Common"],[3,"SerialPort"],[3,"PhysAddr"],[3,"VirtAddr"],[3,"BootInfo"],[3,"AcpiTable"],[3,"Fuse"],[3,"Cmd"],[3,"Rsp"],[3,"fuse_read_out"],[3,"fuse_release_out"],[3,"fuse_unlink_out"],[3,"PerCoreVariable"],[3,"BootStack"],[3,"CommonStack"],[3,"TaskTLS"],[3,"PageTableEntryFlags"],[8,"PageSize"],[3,"PageTableEntry"],[4,"BasePageSize"],[4,"LargePageSize"],[4,"HugePageSize"]]},\
"log":{"doc":"A lightweight logging facade.","t":[13,13,13,13,13,13,4,4,8,3,3,13,3,3,3,17,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,10,11,11,11,11,11,11,11,14,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,14,14,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14],"n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","cmp","cmp","cmp","cmp","debug","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","ge","ge","ge","ge","gt","gt","gt","gt","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","le","le","le","le","level","level","level","level","line","line","log","log","log_enabled","logger","lt","lt","lt","lt","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","ne","ne","ne","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_logger","set_logger_racy","set_max_level","target","target","target","target","to_level","to_level_filter","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":["logd":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of the …","An enum representing the available verbosity level filters …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","Returns the string representation of the <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","Logs a message at the debug level.","Determines if a log message with the specified metadata …","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>file</code> to a <code>&#39;static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the info level.","","","","","","","","","","","","","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","","","","","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>module_path</code> to a <code>&#39;static</code> string","","","","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>&amp;&#39;static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[1,2,1,2,1,2,0,0,0,0,0,2,0,0,0,0,0,1,2,1,2,3,4,1,2,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,4,6,3,5,1,2,3,5,1,2,5,6,0,9,1,1,2,2,5,6,8,0,3,4,3,4,9,1,1,2,2,3,4,5,6,7,7,8,8,1,2,3,4,5,6,7,8,1,2,1,1,2,2,1,1,2,2,1,2,5,6,0,1,2,3,4,5,6,7,8,1,1,2,2,3,4,5,6,3,4,9,0,0,0,1,1,2,2,1,2,0,3,4,3,4,3,4,5,6,8,4,6,1,1,2,2,5,6,0,0,0,3,4,5,6,2,1,0,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["arguments",3]],[[["arguments",3]],["recordbuilder",3]],[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["record",3]],[[],["metadata",3]],[[],["recordbuilder",3]],[[],["metadatabuilder",3]],[[],["level",4]],[[],["levelfilter",4]],[[],["record",3]],[[],["metadata",3]],[[["level",4]],["ordering",4]],[[["levelfilter",4]],["ordering",4]],[[["metadata",3]],["ordering",4]],[[["metadatabuilder",3]],["ordering",4]],null,[[["metadata",3]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["metadata",3]],["bool",15]],[[["metadatabuilder",3]],["bool",15]],[[["parselevelerror",3]],["bool",15]],null,[[],["option",4,[["str",15]]]],[[["option",4,[["str",15]]]],["recordbuilder",3]],[[],["option",4,[["str",15]]]],[[["option",4,[["str",15]]]],["recordbuilder",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4,[["level",4]]]],[[["str",15]],["result",4,[["levelfilter",4]]]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[],["level",4]],[[["level",4]],["recordbuilder",3]],[[],["level",4]],[[["level",4]],["metadatabuilder",3]],[[],["option",4,[["u32",15]]]],[[["option",4,[["u32",15]]]],["recordbuilder",3]],[[["record",3]]],null,null,[[],["log",8]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[],["level",4]],[[],["levelfilter",4]],[[],["levelfilter",4]],[[],["metadata",3]],[[["metadata",3]],["recordbuilder",3]],[[],["option",4,[["str",15]]]],[[["option",4,[["str",15]]]],["recordbuilder",3]],[[],["option",4,[["str",15]]]],[[["option",4,[["str",15]]]],["recordbuilder",3]],[[["metadata",3]],["bool",15]],[[["metadatabuilder",3]],["bool",15]],[[["parselevelerror",3]],["bool",15]],[[],["recordbuilder",3]],[[],["metadatabuilder",3]],[[["level",4]],["option",4,[["ordering",4]]]],[[["levelfilter",4]],["option",4,[["ordering",4]]]],[[["levelfilter",4]],["option",4,[["ordering",4]]]],[[["level",4]],["option",4,[["ordering",4]]]],[[["metadata",3]],["option",4,[["ordering",4]]]],[[["metadatabuilder",3]],["option",4,[["ordering",4]]]],[[["log",8]],["result",4,[["setloggererror",3]]]],[[["log",8]],["result",4,[["setloggererror",3]]]],[[["levelfilter",4]]],[[],["str",15]],[[["str",15]],["recordbuilder",3]],[[],["str",15]],[[["str",15]],["metadatabuilder",3]],[[],["option",4,[["level",4]]]],[[],["levelfilter",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[4,"Level"],[4,"LevelFilter"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"],[8,"Log"]]},\
"multiboot":{"doc":"Multiboot v1 library","t":[0,0,3,13,17,3,3,13,4,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,3,13,3,3,3,4,13,13,3,3,3,8,3,4,3,3,3,3,13,6,13,13,13,17,4,13,12,10,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,12,11,12,11,12,12,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12],"n":["header","information","Header","LinearGraphics","MULTIBOOT_HEADER_MAGIC","MultibootAddresses","MultibootVideoMode","TextMode","VideoModeType","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bss_end_address","clone","clone","clone","clone","compute_load_offset","depth","entry_address","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_slice","get_addresses","get_preferred_video_mode","has_multiboot_addresses","has_video_mode","header_address","header_start","height","into","into","into","into","load_address","load_end_address","mode_type","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wants_memory_information","wants_modules_page_aligned","width","ACPI","AOut","AOutSymbols","Available","BootDevice","ColorInfoPalette","ColorInfoRgb","ColorInfoType","Defect","Elf","ElfSymbols","FramebufferTable","MemoryEntry","MemoryManagement","MemoryMapIter","MemoryType","Module","ModuleIter","Multiboot","MultibootInfo","NVS","PAddr","Palette","Reserved","Rgb","SIGNATURE_EAX","SymbolType","Text","addr","allocate","base_address","blue_field_position","blue_mask_size","boot_device","boot_loader_name","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bpp","clone","clone","clone","clone","clone","clone","clone","color_info","command_line","deallocate","default","default","default","default","default","default","drive","end","eq","find_highest_address","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","framebuffer_table","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_addr","from_ptr","from_ref","green_field_position","green_mask_size","has_aout_symbols","has_apm_table","has_boot_device","has_boot_loader_name","has_cmdline","has_config_table","has_drives","has_elf_symbols","has_framebuffer_table","has_memory_bounds","has_memory_map","has_modules","has_vbe","height","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","length","lower_memory_bound","memory_regions","memory_type","modules","new","new","new","next","next","paddr_to_slice","partition1","partition1_is_valid","partition2","partition2_is_valid","partition3","partition3_is_valid","pitch","red_field_position","red_mask_size","set_boot_loader_name","set_command_line","set_framebuffer_table","set_memory_bounds","set_memory_regions","set_modules","set_symbols","start","string","symbols","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upper_memory_bound","width","0","0","0","0"],"q":["multiboot","","multiboot::header","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","multiboot::informationmultiboot::information::ColorInfoType","","multiboot::information::SymbolType",""],"d":["This module contains the pieces for parsing Multiboot …","This modules contains the pieces for parsing and creating …","Multiboot struct bootloaders mainly interact with","","","Addresses specified in the Multiboot header","Preferred video mode specified in the Multiboot header","","Preferred video mode type","","","","","","","","","","","","","","Compute the offset of the load address into the binary.","Get the preferred depth, if possible.","","","","","","","","","","","Get the header by parsing it from a slice.","Get the load addresses specified in the Multiboot header.","Get the preferred video mode specified in the Multiboot …","If true, then the <code>header_addr</code>, <code>load_addr</code>, <code>load_end_addr</code>, …","If true, then the <code>mode_type</code>, <code>width</code>, <code>height</code> and <code>depth</code> …","","the index at which the header starts","","","","","","","","Get the preferred video mode type","","","","","","","","","","","","","If true, memory information must be passed.","If true, then the modules have to be page aligned.","","ACPI Reclaim Memory","","Multiboot format for AOut Symbols","memory, available to OS","The ‘boot_device’ field.","Information for indexed color mode","Information for direct RGB color mode","Safe wrapper for <code>ColorInfo</code>","defective RAM modules","","Multiboot format for ELF Symbols","Contains the information about the framebuffer","Multiboot format of the MMAP buffer.","Implement this trait to be able to get or set fields …","Used to iterate over all memory regions provided by …","Types that define if the memory is usable or not.","Information about a module in multiboot.","Used to iterate over all modules in multiboot.","Multiboot struct clients mainly interact with","Representation of Multiboot Information according to …","ACPI NVS Memory","","","reserved, not available (rom, mem map dev)","","Value found in %eax after multiboot jumps to our entry …","Safe wrapper for either <code>AOutSymbols</code> or <code>ElfSymbols</code>","","","Allocates <code>length</code> bytes.","Get base of memory region.","","","Indicates which bios disk device the boot loader loaded …","Get the name of the bootloader.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the color info from this table.","Command line passed to the kernel.","Free the previously allocated memory.","","","Get the “default” memory entry. (It’s 0 bytes and …","","","","Contains the bios drive number as understood by the bios …","End address of module in physic memory.","","Return end address of multiboot image.","","","","","","","","","","","","Return the framebuffer table, if it exists.","","","","","","","","","","","","","","","","Uses a passed address for the symbols.","Initializes the multiboot structure from a passed address.","Initializes this struct from an already existing …","","","If true, then the <code>syms</code> field is valid and contains AOut …","If true, then the <code>apm_table</code> field is valid.","If true, then the <code>boot_device</code> field is valid.","If true, then the <code>boot_loader_name</code> field is valid.","If true, then the <code>cmdline</code> field is valid.","If true, then the <code>config_table</code> field is valid.","If true, then the <code>drives_addr</code> and <code>drives_length</code> fields are …","If true, then the <code>syms</code> field is valid and containts ELF …","If true, then the framebuffer table is valid.","If true, then the <code>mem_upper</code> and <code>mem_lower</code> fields are valid.","If true, then the <code>mmap_addr</code> and <code>mmap_length</code> fields are …","If true, then the <code>mods_addr</code> and <code>mods_count</code> fields are …","If true, then the <code>vbe_*</code> fields are valid.","","","","","","","","","","","","","","","","","","","Get size of the memory region.","Indicate the amount of lower memory in kilobytes.","Discover all memory regions in the multiboot memory map.","Is the region type valid RAM?","Discover all additional modules in multiboot.","Create a new entry from the given data.","","Create this table from a color info.","","","Translates physical addr + size into a kernel accessible …","Specifies the top-level partition number.","Is partition1 a valid partition?","Specifies a sub-partition in the top-level partition","Is partition2 a valid partition?","Specifies a sub-partition in the 2nd-level partition","Is partition3 a valid partition?","","","","Set the name of the bootloader.","Command line to be passed to the kernel.","Set the framebuffer table, if it exists.","Sets the memory bounds (lower, upper).","Publish the memory regions to the kernel.","Publish modules to the kernel.","Set the symbols.","Start address of module in physical memory.","Name of the module.","Get the symbols.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicate the amount of upper memory in kilobytes.","","","","",""],"i":[0,0,0,1,0,0,0,1,0,2,3,4,1,2,3,4,1,3,2,3,4,1,3,4,3,1,2,3,4,1,2,3,4,1,2,2,2,2,2,3,2,4,2,3,4,1,3,3,4,2,3,4,1,2,3,4,1,2,3,4,1,2,2,4,5,6,0,5,0,0,0,0,5,6,0,0,0,0,0,0,0,0,0,0,5,0,7,5,7,0,0,7,8,9,10,11,11,12,12,12,13,14,15,16,5,10,17,6,18,19,8,7,20,11,12,13,14,15,16,5,10,17,6,18,19,8,7,20,11,8,16,10,6,18,19,20,11,8,12,9,15,16,10,18,19,8,16,17,5,12,16,5,10,17,6,18,19,8,7,20,11,12,12,13,14,15,16,5,10,17,6,18,19,8,7,20,11,19,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,8,12,13,14,15,16,5,10,17,6,18,19,8,7,20,11,13,14,10,12,12,10,12,10,17,8,13,14,9,16,16,16,16,16,16,8,11,11,12,12,12,12,12,12,12,17,17,12,12,13,14,15,16,5,10,17,6,18,19,8,7,20,11,12,13,14,15,16,5,10,17,6,18,19,8,7,20,11,12,13,14,15,16,5,10,17,6,18,19,8,7,20,11,12,8,21,22,23,24],"f":[null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["header",3]],[[],["multibootaddresses",3]],[[],["multibootvideomode",3]],[[],["videomodetype",4]],[[["u32",15]],["u32",15]],[[],["option",4,[["u32",15]]]],null,[[["videomodetype",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4,[["multibootaddresses",3]]]],[[],["option",4,[["multibootvideomode",3]]]],[[],["bool",15]],[[],["bool",15]],null,null,null,[[]],[[]],[[]],[[]],null,null,[[],["option",4,[["videomodetype",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15]],["option",4]],[[],["paddr",6]],null,null,[[],["option",4,[["bootdevice",3]]]],[[],["option",4,[["str",15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["bootdevice",3]],[[],["memoryentry",3]],[[],["symboltype",4]],[[],["aoutsymbols",3]],[[],["elfsymbols",3]],[[],["colorinfopalette",3]],[[],["colorinforgb",3]],[[],["option",4,[["colorinfotype",4]]]],[[],["option",4,[["str",15]]]],[[["paddr",6]]],[[],["multibootinfo",3]],[[]],[[]],[[],["aoutsymbols",3]],[[],["elfsymbols",3]],[[],["framebuffertable",3]],null,null,[[["memorytype",4]],["bool",15]],[[],["paddr",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["option",4,[["framebuffertable",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15],["u32",15],["paddr",6],["u32",15]]],[[["paddr",6],["memorymanagement",8]],["option",4,[["multiboot",3]]]],[[["multibootinfo",3],["memorymanagement",8]]],null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["option",4,[["u32",15]]]],[[],["option",4,[["memorymapiter",3]]]],[[],["memorytype",4]],[[],["option",4,[["moduleiter",3]]]],[[["paddr",6],["paddr",6],["memorytype",4]]],[[["paddr",6],["paddr",6],["option",4,[["str",15]]]],["module",3]],[[["u64",15],["u32",15],["u32",15],["u32",15],["u8",15],["colorinfotype",4]]],[[],["option",4,[["memoryentry",3]]]],[[],["option",4,[["module",3]]]],[[["paddr",6],["usize",15]],["option",4]],null,[[],["bool",15]],null,[[],["bool",15]],null,[[],["bool",15]],null,null,null,[[["option",4,[["str",15]]]]],[[["option",4,[["str",15]]]]],[[["option",4,[["framebuffertable",3]]]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4,[["symboltype",4]]]]],null,null,[[],["option",4,[["symboltype",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4,[["u32",15]]]],null,null,null,null,null],"p":[[4,"VideoModeType"],[3,"Header"],[3,"MultibootAddresses"],[3,"MultibootVideoMode"],[4,"MemoryType"],[4,"SymbolType"],[4,"ColorInfoType"],[3,"FramebufferTable"],[8,"MemoryManagement"],[3,"MemoryEntry"],[3,"ColorInfoRgb"],[3,"Multiboot"],[3,"MemoryMapIter"],[3,"ModuleIter"],[3,"MultibootInfo"],[3,"BootDevice"],[3,"Module"],[3,"AOutSymbols"],[3,"ElfSymbols"],[3,"ColorInfoPalette"],[13,"Palette"],[13,"Rgb"],[13,"AOut"],[13,"Elf"]]},\
"num":{"doc":"A collection of numeric types and traits for Rust.","t":[8,8,8,8,8,3,8,16,8,8,8,8,8,6,6,6,8,8,8,8,8,5,10,5,10,11,11,11,11,11,11,11,11,11,11,11,0,5,10,10,10,5,10,5,11,0,11,10,10,11,11,11,11,11,11,11,11,11,11,10,11,10,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,12,0,11,11,11,10,11,11,10,11,10,11,10,11,11,10,10,11,0,11,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,10,11,0,5,10,11,11,11,11,11,5,5,5,5,0,12,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,10,10,5,10,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,10,0,11,11,11,11,10,10,5,10,11,8,8,8,8,10,5,10,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,3,6,6,3,11,11,11,11,11,11,12,11,11,12,11,11,11,8,3,8,3,8,5,10,5,10,5,11,11,11,11,5,11,11,5,11,5,10,5,11,5,10,10,11,11,11,11,11,11,5,10,12,5,11,11,11,11,10,10,10,5,10,5,10,5,11,11,11,11,5,10,11,5,11,11,11,11,11,11,11,12,12,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,8,5,5,10,3,3,6,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,8,8,8,8,8,8,8,8,10,13,10,10,10,10,10,10,10,10,10,8,4,8,16,8,13,10,10,11,10,11,10,8,8,8,8,8,8,8,8,8,8,16,16,16,10,3,8,8,8,10,8,8,8,8,8,11,8,8,8,8,8,8,8,8,8,5,10,5,10,10,11,11,11,11,0,0,5,10,10,10,10,5,10,10,10,10,5,5,5,10,10,0,11,11,11,10,11,11,10,11,11,11,11,11,10,11,11,10,10,11,11,11,10,11,11,0,0,11,11,10,10,11,10,10,12,10,10,10,10,10,5,10,0,0,5,10,10,10,10,10,10,10,10,10,11,11,0,10,10,5,10,10,10,11,11,11,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,11,11,11,11,10,10,10,10,10,10,10,10,5,10,8,10,10,8,8,8,8,10,5,10,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,10,10,10,10,10,10,10,10,10,10,8,8,10,10,11,10,11,10,10,10,11,11,11,10,10,11,11,10,10,11,11,11,11,11,11,11,10,11,10,10,10,10,10,11,11,11,11,10,10,11,8,8,11,10,5,10,11,11,5,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,8,8,8,8,8,8,8,8,10,10,10,10,10,10,10,10,8,16,10,8,8,16,10,10,8,8,8,10,10,10,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,10,16,8,5,5,10,8,8,5,10,5,10,10,10,5,10],"n":["Bounded","CheckedAdd","CheckedDiv","CheckedMul","CheckedSub","Complex","FromPrimitive","FromStrRadixErr","Integer","Num","NumCast","One","PrimInt","Rational","Rational32","Rational64","Saturating","Signed","ToPrimitive","Unsigned","Zero","abs","abs","abs_sub","abs_sub","add","add","add","add","add_assign","add_assign","add_assign","add_assign","as_","borrow","borrow_mut","cast","cast","checked_add","checked_div","checked_mul","checked_pow","checked_sub","clamp","clone","complex","conj","count_ones","count_zeros","default","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_ceil","div_floor","div_mod_floor","div_rem","divides","eq","extended_gcd","extended_gcd_lcm","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_be","from_f32","from_f32","from_f64","from_f64","from_i128","from_i128","from_i16","from_i16","from_i32","from_i32","from_i64","from_i64","from_i8","from_i8","from_isize","from_isize","from_le","from_str","from_str_radix","from_str_radix","from_u128","from_u128","from_u16","from_u16","from_u32","from_u32","from_u64","from_u64","from_u8","from_u8","from_usize","from_usize","gcd","gcd_lcm","hash","i","im","integer","into","inv","inv","is_even","is_finite","is_infinite","is_multiple_of","is_nan","is_negative","is_normal","is_odd","is_one","is_one","is_positive","is_zero","is_zero","iter","l1_norm","lcm","leading_zeros","max_value","min_value","mod_floor","mul","mul","mul","mul","mul_add","mul_add_assign","mul_add_assign","mul_assign","mul_assign","mul_assign","mul_assign","ne","neg","new","next_multiple_of","norm_sqr","one","one","one","pow","pow","pow","powi","powu","prev_multiple_of","product","product","range","range_inclusive","range_step","range_step_inclusive","rational","re","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rotate_left","rotate_right","saturating_add","saturating_sub","scale","set_one","set_one","set_zero","set_zero","signed_shl","signed_shr","signum","signum","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","swap_bytes","to_be","to_f32","to_f32","to_f64","to_f64","to_i128","to_i128","to_i16","to_i16","to_i32","to_i32","to_i64","to_i64","to_i8","to_i8","to_isize","to_isize","to_le","to_u128","to_u128","to_u16","to_u16","to_u32","to_u32","to_u64","to_u64","to_u8","to_u8","to_usize","to_usize","trailing_zeros","traits","try_from","try_into","type_id","unscale","unsigned_shl","unsigned_shr","zero","zero","zero","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","Complex","Complex32","Complex64","ParseComplexError","borrow","borrow_mut","eq","fmt","fmt","from","im","into","ne","re","try_from","try_into","type_id","Average","ExtendedGcd","Integer","IterBinomial","Roots","average_ceil","average_ceil","average_floor","average_floor","binomial","borrow","borrow","borrow_mut","borrow_mut","cbrt","cbrt","clone","div_ceil","div_ceil","div_floor","div_floor","div_mod_floor","div_mod_floor","div_rem","div_rem","divides","eq","extended_gcd","extended_gcd_lcm","fmt","from","from","gcd","gcd","gcd","gcd_lcm","gcd_lcm","into","into","into_iter","is_even","is_multiple_of","is_odd","lcm","lcm","mod_floor","mod_floor","multinomial","ne","new","next","next_multiple_of","nth_root","nth_root","prev_multiple_of","sqrt","sqrt","try_from","try_from","try_into","try_into","type_id","type_id","x","y","Range","RangeFrom","RangeInclusive","RangeStep","RangeStepFrom","RangeStepInclusive","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","next","next","next","next","next","next","next_back","next_back","range","range_from","range_inclusive","range_step","range_step_from","range_step_inclusive","size_hint","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Output","Pow","checked_pow","pow","pow","ParseRatioError","Ratio","Rational","Rational32","Rational64","abs","abs_sub","add","add","add","add","add_assign","add_assign","add_assign","add_assign","approximate_float","borrow","borrow","borrow_mut","borrow_mut","ceil","checked_add","checked_div","checked_mul","checked_sub","clone","clone","cmp","denom","div","div","div","div","div_assign","div_assign","div_assign","div_assign","eq","eq","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","from","from","from","from","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_integer","from_str","from_str_radix","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","hash","into","into","into","inv","is_integer","is_negative","is_one","is_positive","is_zero","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","ne","neg","new","new_raw","numer","one","partial_cmp","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","product","product","recip","reduced","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","round","set_one","set_zero","signum","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_integer","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","trunc","try_from","try_from","try_into","try_into","type_id","type_id","zero","AsPrimitive","Bounded","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","E","Empty","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","FloatConst","FloatErrorKind","FromPrimitive","FromStrRadixErr","Inv","Invalid","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","MulAdd","MulAddAssign","Num","NumAssign","NumAssignOps","NumAssignRef","NumCast","NumOps","NumRef","One","Output","Output","Output","PI","ParseFloatError","Pow","PrimInt","RefNum","SQRT_2","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","Signed","TAU","ToPrimitive","Unsigned","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","Zero","abs","abs","abs_sub","abs_sub","as_","borrow","borrow","borrow_mut","borrow_mut","bounds","cast","cast","checked_add","checked_div","checked_mul","checked_neg","checked_pow","checked_rem","checked_shl","checked_shr","checked_sub","clamp","clamp_max","clamp_min","count_ones","count_zeros","float","fmt","fmt","fmt","from","from","from","from_be","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_le","from_str_radix","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","identities","int","into","into","inv","is_negative","is_one","is_positive","is_zero","kind","leading_zeros","max_value","min_value","mul_add","mul_add_assign","one","one","ops","pow","pow","pow","pow","rotate_left","rotate_right","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","set_one","set_zero","sign","signed_shl","signed_shr","signum","signum","swap_bytes","to_be","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_le","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","trailing_zeros","try_from","try_from","try_into","try_into","type_id","type_id","unsigned_shl","unsigned_shr","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","zero","zero","Bounded","max_value","min_value","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","FloatConst","FloatCore","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","PI","SQRT_2","TAU","abs","ceil","classify","epsilon","floor","fract","infinity","integer_decode","is_finite","is_infinite","is_nan","is_normal","is_sign_negative","is_sign_positive","max","max_value","min","min_positive_value","min_value","nan","neg_infinity","neg_zero","powi","recip","round","signum","to_degrees","to_radians","trunc","One","Zero","is_one","is_zero","one","one","set_one","set_zero","zero","zero","PrimInt","count_ones","count_zeros","from_be","from_le","leading_zeros","pow","rotate_left","rotate_right","signed_shl","signed_shr","swap_bytes","to_be","to_le","trailing_zeros","unsigned_shl","unsigned_shr","checked","inv","mul_add","overflowing","saturating","wrapping","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","checked_add","checked_div","checked_mul","checked_neg","checked_rem","checked_shl","checked_shr","checked_sub","Inv","Output","inv","MulAdd","MulAddAssign","Output","mul_add","mul_add_assign","OverflowingAdd","OverflowingMul","OverflowingSub","overflowing_add","overflowing_mul","overflowing_sub","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","Output","Pow","checked_pow","pow","pow","Signed","Unsigned","abs","abs","abs_sub","abs_sub","is_negative","is_positive","signum","signum"],"q":["numnum::cast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::complex","","","","","","","","","","","","","","","","","num::integer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::pow","","","","","num::rationalnum::traitsnum::traits::bounds","","","num::traits::cast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::traits::float","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::traits::identities","","","","","","","","","","num::traits::int","","","","","","","","","","","","","","","","","num::traits::ops","","","","","","num::traits::ops::checked","","","","","","","","","","","","","","","","num::traits::ops::inv","","","num::traits::ops::mul_add","","","","","num::traits::ops::overflowing","","","","","","num::traits::ops::saturating","","","","","","","","","num::traits::ops::wrapping","","","","","","","","","","","","num::traits::pow","","","","","num::traits::sign","","","","","","","","",""],"d":["Numbers which have upper and lower bounds","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs subtraction that returns <code>None</code> instead of wrapping …","A complex number in Cartesian form.","A generic trait for converting a number to a value.","","","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","An interface for casting between machine scalars.","Defines a multiplicative identity element for <code>Self</code>.","Generic trait for primitive integers.","Alias for a <code>Ratio</code> of machine-sized integers.","Alias for a <code>Ratio</code> of 32-bit-sized integers.","Alias for a <code>Ratio</code> of 64-bit-sized integers.","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Useful functions for signed numbers (i.e. numbers that can …","A generic trait for converting a value to a number.","A trait for values which cannot be negative","Defines an additive identity element for <code>Self</code>.","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","","","","","","","","","","","","","Cast from one machine scalar to another.","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Raises a value to the power of exp, returning <code>None</code> if an …","Subtracts two numbers, checking for underflow. If …","A value bounded by a minimum and a maximum","","","Returns the complex conjugate. i.e. <code>re - i im</code>","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","","","","","","","","","","Ceiled integer division.","Floored integer division.","Simultaneous floored integer division and modulus. Returns …","Simultaneous truncated integer division and modulus. …","Deprecated, use <code>is_multiple_of</code> instead.","","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","","","","","","","","","Creates a number from another value that can be converted …","","","","","Convert an integer from big endian to the target’s …","","Converts a <code>f32</code> to return an optional value of this type. …","","Converts a <code>f64</code> to return an optional value of this type. …","","Converts an <code>i128</code> to return an optional value of this type. …","","Converts an <code>i16</code> to return an optional value of this type. …","","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","","","Converts an <code>i8</code> to return an optional value of this type. …","","Converts an <code>isize</code> to return an optional value of this …","Convert an integer from little endian to the target’s …","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","Convert from a string and radix (typically <code>2..=36</code>).","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","","Converts an <code>u128</code> to return an optional value of this type. …","","Converts an <code>u16</code> to return an optional value of this type. …","","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","","","Converts an <code>u8</code> to return an optional value of this type. …","","Converts a <code>usize</code> to return an optional value of this type. …","Greatest Common Divisor (GCD).","Greatest Common Divisor (GCD) and Lowest Common Multiple …","","Returns imaginary unit","Imaginary portion of the complex number","","","Returns <code>1/self</code>","","Returns <code>true</code> if the number is even.","Checks if the given complex number is finite","Checks if the given complex number is infinite","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Checks if the given complex number is NaN","Returns true if the number is negative and false if the …","Checks if the given complex number is normal","Returns <code>true</code> if the number is odd.","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns true if the number is positive and false if the …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","","","Returns the L1 norm <code>|re| + |im|</code> – the Manhattan distance …","Lowest Common Multiple (LCM).","Returns the number of leading zeros in the binary …","returns the largest finite number this type can represent","returns the smallest finite number this type can represent","Floored integer modulo, satisfying:","","","","","","","","","","","","","","Create a new Complex","Rounds up to nearest multiple of argument.","Returns the square of the norm (since <code>T</code> doesn’t …","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","","","Raises a value to the power of exp, using exponentiation …","Raises self to the power of <code>exp</code>, using exponentiation by …","Raises <code>self</code> to a signed integer power.","Raises <code>self</code> to an unsigned integer power.","Rounds down to nearest multiple of argument.","","","Returns an iterator over the given range [start, stop) …","Return an iterator over the range [start, stop]","Return an iterator over the range [start, stop) by <code>step</code>. …","Return an iterator over the range [start, stop] by <code>step</code>. …","","Real portion of the complex number","","","","","","","","","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Saturating addition operator. Returns a+b, saturating at …","Saturating subtraction operator. Returns a-b, saturating …","Multiplies <code>self</code> by the scalar <code>t</code>.","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Returns the sign of the number.","Returns the sign of the number.","","","","","","","","","","","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Convert <code>self</code> to little endian from the target’s …","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Returns the number of trailing zeros in the binary …","","","","","Divides <code>self</code> by the scalar <code>t</code>.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","A complex number in Cartesian form.","","","","","","","","","","Imaginary portion of the complex number","","","Real portion of the complex number","","","","Provides methods to compute the average of two integers, …","Greatest common divisor and Bézout coefficients","","An iterator over binomial coefficients.","Provides methods to compute an integer’s square root, …","Returns the ceiling value of the average of <code>x</code> and <code>y</code> – …","Returns the ceiling value of the average of <code>self</code> and <code>other</code>.","Returns the floor value of the average of <code>x</code> and <code>y</code> – see …","Returns the floor value of the average of <code>self</code> and <code>other</code>. …","Calculate the binomial coefficient.","","","","","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","","Ceiled integer division","Ceiled integer division.","Floored integer division","Floored integer division.","Simultaneous floored integer division and modulus","Simultaneous floored integer division and modulus. Returns …","Simultaneous integer division and modulus","Simultaneous truncated integer division and modulus. …","Deprecated, use <code>is_multiple_of</code> instead.","","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","","","","Calculates the Greatest Common Divisor (GCD) of the number …","Greatest Common Divisor (GCD).","","Calculates the Greatest Common Divisor (GCD) and Lowest …","Greatest Common Divisor (GCD) and Lowest Common Multiple …","","","","Returns <code>true</code> if the number is even.","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Returns <code>true</code> if the number is odd.","Calculates the Lowest Common Multiple (LCM) of the number …","Lowest Common Multiple (LCM).","Floored integer modulus","Floored integer modulo, satisfying:","Calculate the multinomial coefficient.","","For a given n, iterate over all binomial coefficients …","","Rounds up to nearest multiple of argument.","Returns the truncated principal <code>n</code>th root of an integer – …","Returns the truncated principal <code>n</code>th root of an integer – …","Rounds down to nearest multiple of argument.","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","","","","","","","","","An iterator over the range [start, stop)","An iterator over the infinite range starting at <code>start</code>","An iterator over the range [start, stop]","An iterator over the range [start, stop) by <code>step</code>. It …","An iterator over the infinite range starting at <code>start</code> by …","An iterator over the range [start, stop] by <code>step</code>. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over the given range [start, stop) …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop]","Return an iterator over the range [start, stop) by <code>step</code>. …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop] by <code>step</code>. …","","","","","","","","","","","","","","","","","","","","","","","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","","Represents the ratio between two numbers.","Alias for a <code>Ratio</code> of machine-sized integers.","Alias for a <code>Ratio</code> of 32-bit-sized integers.","Alias for a <code>Ratio</code> of 64-bit-sized integers.","","","","","","","","","","","","","","","","Rounds towards plus infinity.","","","","","","","","Gets an immutable reference to the denominator.","","","","","","","","","","","Rounds towards minus infinity.","","","","","","","","","","","Returns the fractional part of a number, with division …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Ratio</code> representing the integer <code>t</code>.","Parses <code>numer/denom</code> or just <code>numer</code>.","Parses <code>numer/denom</code> where the numbers are in base <code>radix</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the rational number is an integer …","","","","","","","","","","","","","","","Creates a new <code>Ratio</code>.","Creates a <code>Ratio</code> without checking for <code>denom == 0</code> or …","Gets an immutable reference to the numerator.","","","","","","","","","","","","","","","","","","Raises the <code>Ratio</code> to the power of an exponent.","","","","","","","","","","","","Returns the reciprocal.","Returns a reduced copy of self.","","","","","","","","","Rounds to the nearest integer. Rounds half-way cases away …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts to an integer, rounding towards zero.","","","","","","","","","","","","","","","","","","","","","Rounds towards zero.","","","","","","","","A generic interface for casting between machine scalars …","Numbers which have upper and lower bounds","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Return Euler’s number.","","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","","","A generic trait for converting a number to a value.","","Unary operator for retrieving the multiplicative inverse, …","","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation.","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","The trait for <code>Num</code> types which also implement assignment …","The trait for types implementing numeric assignment …","The trait for <code>NumAssign</code> types which also implement …","An interface for casting between machine scalars.","The trait for types implementing basic numeric operations","The trait for <code>Num</code> types which also implement numeric …","Defines a multiplicative identity element for <code>Self</code>.","The result after applying the operator.","The resulting type after applying the fused multiply-add.","The result after applying the operator.","Return Archimedes’ constant <code>π</code>.","","Binary operator for raising a value to a power.","Generic trait for primitive integers.","The trait for references which implement numeric …","Return <code>sqrt(2.0)</code>.","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Useful functions for signed numbers (i.e. numbers that can …","Return the full circle constant <code>τ</code>.","A generic trait for converting a value to a number.","A trait for values which cannot be negative","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Defines an additive identity element for <code>Self</code>.","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Convert a value to another, using the <code>as</code> operator.","","","","","","","Cast from one machine scalar to another.","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Raises a value to the power of exp, returning <code>None</code> if an …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","A value bounded by a minimum and a maximum","A value bounded by a maximum value","A value bounded by a minimum value","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","","","","","Creates a number from another value that can be converted …","","","Convert an integer from big endian to the target’s …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Convert an integer from little endian to the target’s …","Convert from a string and radix (typically <code>2..=36</code>).","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","","","","","Returns the multiplicative inverse of <code>self</code>.","Returns true if the number is negative and false if the …","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns true if the number is positive and false if the …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","","Returns the number of leading zeros in the binary …","returns the largest finite number this type can represent","returns the smallest finite number this type can represent","Performs the fused multiply-add operation.","Performs the fused multiply-add operation.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","","","Raises a value to the power of exp, using exponentiation …","Raises self to the power of <code>exp</code>, using exponentiation by …","Returns <code>self</code> to the power <code>rhs</code>.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Returns the sign of the number.","Returns the sign of the number.","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Convert <code>self</code> to little endian from the target’s …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Returns the number of trailing zeros in the binary …","","","","","","","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Numbers which have upper and lower bounds","returns the largest finite number this type can represent","returns the smallest finite number this type can represent","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","","Generic trait for floating point numbers that works with …","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Computes the absolute value of <code>self</code>. Returns …","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Returns epsilon, a small positive value.","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Returns positive infinity.","Returns the mantissa, base 2 exponent, and sign as …","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Returns NaN.","Returns negative infinity.","Returns <code>-0.0</code>.","Raise a number to an integer power.","Returns the reciprocal (multiplicative inverse) of the …","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Converts to degrees, assuming the number is in radians.","Converts to radians, assuming the number is in degrees.","Return the integer part of a number.","Defines a multiplicative identity element for <code>Self</code>.","Defines an additive identity element for <code>Self</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Returns the number of leading zeros in the binary …","Raises self to the power of <code>exp</code>, using exponentiation by …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","","","","","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation.","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation.","Performs the fused multiply-add operation.","Performs addition with a flag for overflow.","Performs multiplication with a flag for overflow.","Performs substraction with a flag for overflow.","Returns a tuple of the sum along with a boolean indicating …","Returns a tuple of the product along with a boolean …","Returns a tuple of the difference along with a boolean …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","Useful functions for signed numbers (i.e. numbers that can …","A trait for values which cannot be negative","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Returns true if the number is negative and false if the …","Returns true if the number is positive and false if the …","Returns the sign of the number.","Returns the sign of the number."],"i":[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,3,3,3,3,3,3,3,3,3,3,3,0,0,4,5,6,0,7,0,3,0,3,8,8,3,3,3,3,3,3,3,3,3,9,9,9,9,9,3,9,9,3,3,3,3,3,3,3,3,10,3,3,3,3,8,3,11,3,11,3,11,3,11,3,11,11,3,3,11,3,11,8,3,1,3,3,11,3,11,3,11,11,3,3,11,3,11,9,9,3,3,3,0,3,3,3,9,3,3,9,3,2,3,9,3,12,2,13,3,0,3,9,8,14,14,9,3,3,3,3,3,3,3,3,3,3,3,3,3,3,9,3,0,12,3,0,0,8,3,3,9,3,3,0,0,0,0,0,3,3,3,3,3,3,3,3,3,8,8,15,15,3,3,12,3,13,8,8,0,2,3,3,3,3,3,3,3,3,3,3,8,8,3,16,3,16,3,16,3,16,3,16,16,3,3,16,3,16,8,3,16,3,16,3,16,16,3,3,16,3,16,8,0,3,3,3,3,8,8,0,13,3,0,0,0,0,17,0,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,18,18,18,18,18,18,3,18,18,3,18,18,18,0,0,0,0,0,0,19,0,19,0,20,21,20,21,0,22,21,0,9,0,9,0,9,0,9,9,21,9,9,21,20,21,0,9,21,0,9,20,21,20,9,9,9,0,9,0,9,0,21,20,20,9,0,22,9,0,22,20,21,20,21,20,21,21,21,0,0,0,0,0,0,23,24,25,26,27,28,23,24,25,26,27,28,23,24,25,26,27,28,23,24,25,26,27,28,23,24,25,26,27,28,23,24,25,26,27,28,23,24,25,26,27,28,23,24,0,0,0,0,0,0,23,24,27,28,23,24,25,26,27,28,23,24,25,26,27,28,23,24,25,26,27,28,29,0,0,0,29,0,0,0,0,0,30,30,30,30,30,30,30,30,30,30,30,30,31,30,31,30,30,30,30,30,30,31,30,30,30,30,30,30,30,30,30,30,30,31,30,30,30,30,30,30,30,30,30,31,31,30,30,30,30,31,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,31,30,30,30,30,30,30,30,30,30,30,30,30,30,30,31,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,31,30,31,30,31,30,0,0,0,0,0,0,0,0,0,0,32,33,32,32,32,32,32,32,32,32,32,0,0,0,1,0,33,32,32,32,32,32,32,0,0,0,0,0,0,0,0,0,0,34,35,29,32,0,0,0,0,32,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,2,0,2,17,33,36,33,36,0,0,0,4,5,6,37,0,38,39,40,7,0,0,0,8,8,0,33,36,36,10,33,36,8,11,11,11,11,11,11,11,11,8,1,11,11,11,11,11,11,0,0,33,36,34,2,12,2,13,36,8,14,14,35,41,0,12,0,0,0,8,29,8,8,15,42,43,15,44,12,13,0,8,8,0,2,8,8,16,16,16,16,16,16,16,16,8,16,16,16,16,16,16,8,33,36,33,36,33,36,8,8,45,46,47,48,49,50,0,13,0,14,14,0,0,0,0,17,0,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,16,16,16,16,16,16,16,16,16,16,16,16,16,32,32,32,32,32,32,32,32,32,32,0,0,32,32,32,32,32,32,32,32,32,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,12,13,0,12,12,13,0,13,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,6,37,38,39,40,7,0,34,34,0,0,35,35,41,0,0,0,52,53,54,0,0,0,0,15,42,43,15,44,0,0,0,0,0,0,45,46,47,48,49,50,29,0,0,0,29,0,0,0,2,0,2,2,2,0,2],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["complex",3]]],[[]],[[["complex",3]]],[[]],[[]],[[]],[[["complex",3]]],[[["complex",3]]],[[]],[[]],[[]],null,[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["usize",15]],["option",4]],[[],["option",4]],[[]],[[],["complex",3]],null,[[],["complex",3]],[[],["u32",15]],[[],["u32",15]],[[],["complex",3]],[[["complex",3]]],[[]],[[]],[[["complex",3]]],[[["complex",3]]],[[["complex",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["complex",3]],["bool",15]],[[],["extendedgcd",3]],[[]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[],["option",4]],[[]],[[],["complex",3]],[[],["option",4,[["complex",3]]]],[[],["complex",3]],[[]],[[["f32",15]],["option",4,[["complex",3]]]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4,[["complex",3]]]],[[["f64",15]],["option",4]],[[["i128",15]],["option",4,[["complex",3]]]],[[["i128",15]],["option",4]],[[["i16",15]],["option",4,[["complex",3]]]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4,[["complex",3]]]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["i64",15]],["option",4,[["complex",3]]]],[[["i8",15]],["option",4,[["complex",3]]]],[[["i8",15]],["option",4]],[[["isize",15]],["option",4,[["complex",3]]]],[[["isize",15]],["option",4]],[[]],[[["str",15]],["result",4,[["complex",3]]]],[[["str",15],["u32",15]],["result",4]],[[["str",15],["u32",15]],["result",4,[["complex",3]]]],[[["u128",15]],["option",4,[["complex",3]]]],[[["u128",15]],["option",4]],[[["u16",15]],["option",4,[["complex",3]]]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4,[["complex",3]]]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4,[["complex",3]]]],[[["u8",15]],["option",4,[["complex",3]]]],[[["u8",15]],["option",4]],[[["usize",15]],["option",4,[["complex",3]]]],[[["usize",15]],["option",4]],[[]],[[]],[[]],[[],["complex",3]],null,null,[[]],[[],["complex",3]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[["complex",3]]],[[]],[[["complex",3]]],[[]],[[["complex",3],["complex",3]],["complex",3]],[[["complex",3],["complex",3]]],[[["complex",3],["complex",3]]],[[["complex",3]]],[[]],[[["complex",3]]],[[]],[[["complex",3]],["bool",15]],[[]],[[],["complex",3]],[[]],[[]],[[]],[[]],[[],["complex",3]],null,[[["usize",15]]],[[["u32",15]]],[[["i32",15]],["complex",3]],[[["u32",15]],["complex",3]],[[]],[[],["complex",3]],[[],["complex",3]],[[],["range",3]],[[],["rangeinclusive",3]],[[],["rangestep",3]],[[],["rangestepinclusive",3]],null,null,[[]],[[]],[[["complex",3]]],[[["complex",3]]],[[["complex",3]]],[[]],[[["complex",3]]],[[]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[],["complex",3]],[[]],[[]],[[]],[[]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[["complex",3]]],[[]],[[["complex",3]]],[[["complex",3]]],[[]],[[["complex",3]]],[[]],[[],["complex",3]],[[],["complex",3]],[[]],[[]],[[],["option",4,[["f32",15]]]],[[],["option",4,[["f32",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i16",15]]]],[[],["option",4,[["i16",15]]]],[[],["option",4,[["i32",15]]]],[[],["option",4,[["i32",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i8",15]]]],[[],["option",4,[["i8",15]]]],[[],["option",4,[["isize",15]]]],[[],["option",4,[["isize",15]]]],[[]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u16",15]]]],[[],["option",4,[["u16",15]]]],[[],["option",4,[["u32",15]]]],[[],["option",4,[["u32",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u8",15]]]],[[],["option",4,[["u8",15]]]],[[],["option",4,[["usize",15]]]],[[],["option",4,[["usize",15]]]],[[],["u32",15]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["complex",3]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[],["complex",3]],null,null,null,null,[[]],[[],["option",4]],[[],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i128",15]],["option",4]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["i8",15]],["option",4]],[[["isize",15]],["option",4]],[[["u128",15]],["option",4]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u8",15]],["option",4]],[[["usize",15]],["option",4]],[[],["option",4,[["f32",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i16",15]]]],[[],["option",4,[["i32",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i8",15]]]],[[],["option",4,[["isize",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u16",15]]]],[[],["option",4,[["u32",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u8",15]]]],[[],["option",4,[["usize",15]]]],null,null,null,null,[[]],[[]],[[["parsecomplexerror",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],null,[[]],[[["parsecomplexerror",3]],["bool",15]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["extendedgcd",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["extendedgcd",3]],["bool",15]],[[],["extendedgcd",3]],[[]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[["extendedgcd",3]],["bool",15]],[[],["iterbinomial",3]],[[],["option",4]],[[]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["range",3]],[[],["rangeinclusive",3]],[[],["rangestep",3]],[[],["rangestepinclusive",3]],[[],["rangefrom",3]],[[],["rangestepfrom",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["range",3]],[[],["rangefrom",3]],[[],["rangeinclusive",3]],[[],["rangestep",3]],[[],["rangestepfrom",3]],[[],["rangestepinclusive",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[["usize",15]],["option",4]],[[["usize",15]]],[[]],null,null,null,null,null,[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[["ratio",3]]],[[["ratio",3]]],[[]],[[]],[[],["option",4,[["ratio",3]]]],[[]],[[]],[[]],[[]],[[],["ratio",3]],[[["ratio",3]],["option",4,[["ratio",3]]]],[[["ratio",3]],["option",4,[["ratio",3]]]],[[["ratio",3]],["option",4,[["ratio",3]]]],[[["ratio",3]],["option",4,[["ratio",3]]]],[[],["ratio",3]],[[],["parseratioerror",3]],[[["ratio",3]],["ordering",4]],[[]],[[["ratio",3]],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[["ratio",3]],["bool",15]],[[["parseratioerror",3]],["bool",15]],[[],["ratio",3]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[],["ratio",3]],[[]],[[],["ratio",3]],[[],["ratio",3]],[[]],[[["f32",15]],["option",4,[["ratio",3,[["u8",15]]]]]],[[["f32",15]],["option",4,[["ratio",3,[["u128",15]]]]]],[[["f32",15]],["option",4,[["ratio",3,[["i8",15]]]]]],[[["f32",15]],["option",4,[["ratio",3,[["i16",15]]]]]],[[["f32",15]],["option",4,[["ratio",3,[["u16",15]]]]]],[[["f32",15]],["option",4,[["ratio",3,[["u64",15]]]]]],[[["f32",15]],["option",4,[["ratio",3,[["u32",15]]]]]],[[["f32",15]],["option",4,[["ratio",3,[["usize",15]]]]]],[[["f32",15]],["option",4,[["ratio",3,[["isize",15]]]]]],[[["f32",15]],["option",4,[["ratio",3,[["i128",15]]]]]],[[["f32",15]],["option",4,[["ratio",3,[["i64",15]]]]]],[[["f32",15]],["option",4,[["ratio",3,[["i32",15]]]]]],[[["f64",15]],["option",4,[["ratio",3,[["usize",15]]]]]],[[["f64",15]],["option",4,[["ratio",3,[["i32",15]]]]]],[[["f64",15]],["option",4,[["ratio",3,[["isize",15]]]]]],[[["f64",15]],["option",4,[["ratio",3,[["u32",15]]]]]],[[["f64",15]],["option",4,[["ratio",3,[["u8",15]]]]]],[[["f64",15]],["option",4,[["ratio",3,[["i64",15]]]]]],[[["f64",15]],["option",4,[["ratio",3,[["u128",15]]]]]],[[["f64",15]],["option",4,[["ratio",3,[["i8",15]]]]]],[[["f64",15]],["option",4,[["ratio",3,[["i128",15]]]]]],[[["f64",15]],["option",4,[["ratio",3,[["u64",15]]]]]],[[["f64",15]],["option",4,[["ratio",3,[["i16",15]]]]]],[[["f64",15]],["option",4,[["ratio",3,[["u16",15]]]]]],[[["i128",15]],["option",4,[["ratio",3,[["i128",15]]]]]],[[["i128",15]],["option",4,[["ratio",3,[["u16",15]]]]]],[[["i128",15]],["option",4,[["ratio",3,[["u8",15]]]]]],[[["i128",15]],["option",4,[["ratio",3,[["u64",15]]]]]],[[["i128",15]],["option",4,[["ratio",3,[["usize",15]]]]]],[[["i128",15]],["option",4,[["ratio",3,[["i64",15]]]]]],[[["i128",15]],["option",4,[["ratio",3,[["u32",15]]]]]],[[["i128",15]],["option",4,[["ratio",3,[["isize",15]]]]]],[[["i128",15]],["option",4,[["ratio",3,[["u128",15]]]]]],[[["i128",15]],["option",4,[["ratio",3,[["i16",15]]]]]],[[["i128",15]],["option",4,[["ratio",3,[["i32",15]]]]]],[[["i128",15]],["option",4,[["ratio",3,[["i8",15]]]]]],[[["i64",15]],["option",4,[["ratio",3,[["i16",15]]]]]],[[["i64",15]],["option",4,[["ratio",3,[["u8",15]]]]]],[[["i64",15]],["option",4,[["ratio",3,[["usize",15]]]]]],[[["i64",15]],["option",4,[["ratio",3,[["i128",15]]]]]],[[["i64",15]],["option",4,[["ratio",3,[["u16",15]]]]]],[[["i64",15]],["option",4,[["ratio",3,[["i8",15]]]]]],[[["i64",15]],["option",4,[["ratio",3,[["i32",15]]]]]],[[["i64",15]],["option",4,[["ratio",3,[["u128",15]]]]]],[[["i64",15]],["option",4,[["ratio",3,[["u64",15]]]]]],[[["i64",15]],["option",4,[["ratio",3,[["isize",15]]]]]],[[["i64",15]],["option",4,[["ratio",3,[["i64",15]]]]]],[[["i64",15]],["option",4,[["ratio",3,[["u32",15]]]]]],[[],["ratio",3]],[[["str",15]],["result",4,[["ratio",3],["parseratioerror",3]]]],[[["str",15],["u32",15]],["result",4,[["ratio",3],["parseratioerror",3]]]],[[["u128",15]],["option",4,[["ratio",3,[["u64",15]]]]]],[[["u128",15]],["option",4,[["ratio",3,[["usize",15]]]]]],[[["u128",15]],["option",4,[["ratio",3,[["i32",15]]]]]],[[["u128",15]],["option",4,[["ratio",3,[["i8",15]]]]]],[[["u128",15]],["option",4,[["ratio",3,[["u128",15]]]]]],[[["u128",15]],["option",4,[["ratio",3,[["i16",15]]]]]],[[["u128",15]],["option",4,[["ratio",3,[["u16",15]]]]]],[[["u128",15]],["option",4,[["ratio",3,[["i64",15]]]]]],[[["u128",15]],["option",4,[["ratio",3,[["u8",15]]]]]],[[["u128",15]],["option",4,[["ratio",3,[["isize",15]]]]]],[[["u128",15]],["option",4,[["ratio",3,[["u32",15]]]]]],[[["u128",15]],["option",4,[["ratio",3,[["i128",15]]]]]],[[["u64",15]],["option",4,[["ratio",3,[["u128",15]]]]]],[[["u64",15]],["option",4,[["ratio",3,[["u16",15]]]]]],[[["u64",15]],["option",4,[["ratio",3,[["isize",15]]]]]],[[["u64",15]],["option",4,[["ratio",3,[["i128",15]]]]]],[[["u64",15]],["option",4,[["ratio",3,[["u8",15]]]]]],[[["u64",15]],["option",4,[["ratio",3,[["usize",15]]]]]],[[["u64",15]],["option",4,[["ratio",3,[["u32",15]]]]]],[[["u64",15]],["option",4,[["ratio",3,[["i16",15]]]]]],[[["u64",15]],["option",4,[["ratio",3,[["i8",15]]]]]],[[["u64",15]],["option",4,[["ratio",3,[["i64",15]]]]]],[[["u64",15]],["option",4,[["ratio",3,[["u64",15]]]]]],[[["u64",15]],["option",4,[["ratio",3,[["i32",15]]]]]],[[]],[[]],[[]],[[]],[[],["ratio",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[]],[[["parseratioerror",3]],["bool",15]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[]],[[],["ratio",3]],[[["ratio",3]],["option",4,[["ordering",4]]]],[[["u64",15]],["ratio",3]],[[["u32",15]],["ratio",3]],[[["i64",15]],["ratio",3]],[[["u64",15]],["ratio",3]],[[["isize",15]],["ratio",3]],[[["i32",15]],["ratio",3]],[[["u128",15]],["ratio",3]],[[["isize",15]],["ratio",3]],[[["usize",15]],["ratio",3]],[[["u8",15]],["ratio",3]],[[["u16",15]],["ratio",3]],[[["usize",15]],["ratio",3]],[[["i16",15]],["ratio",3]],[[["u128",15]],["ratio",3]],[[["i8",15]],["ratio",3]],[[["i32",15]],["ratio",3]],[[["i8",15]],["ratio",3]],[[["i128",15]],["ratio",3]],[[["u16",15]],["ratio",3]],[[["i64",15]],["ratio",3]],[[["i32",15]],["ratio",3]],[[["u32",15]],["ratio",3]],[[["i128",15]],["ratio",3]],[[["i16",15]],["ratio",3]],[[["u8",15]],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[["ratio",3]],["ratio",3]],[[["ratio",3]]],[[]],[[]],[[["ratio",3]]],[[],["ratio",3]],[[]],[[]],[[],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[]],[[]],[[["ratio",3]]],[[["ratio",3]]],[[],["ratio",3]],[[],["ratio",3]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i64",15]]]],[[]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u64",15]]]],[[],["ratio",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["ratio",3]],null,null,null,null,null,null,null,null,null,null,[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,[[]],null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["usize",15]],["option",4]],[[],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],null,[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[],["option",4]],[[]],[[]],[[]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i128",15]],["option",4]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["i8",15]],["option",4]],[[["isize",15]],["option",4]],[[]],[[["str",15],["u32",15]],["result",4]],[[["u128",15]],["option",4]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u8",15]],["option",4]],[[["usize",15]],["option",4]],null,null,[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["usize",15]]],[[["u32",15]]],[[]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[],["option",4,[["f32",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i16",15]]]],[[],["option",4,[["i32",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i8",15]]]],[[],["option",4,[["isize",15]]]],[[]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u16",15]]]],[[],["option",4,[["u32",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u8",15]]]],[[],["option",4,[["usize",15]]]],[[],["u32",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],null,[[]],[[]],null,null,null,null,[[]],[[],["option",4]],[[],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i128",15]],["option",4]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["i8",15]],["option",4]],[[["isize",15]],["option",4]],[[["u128",15]],["option",4]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u8",15]],["option",4]],[[["usize",15]],["option",4]],[[],["option",4,[["f32",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i16",15]]]],[[],["option",4,[["i32",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i8",15]]]],[[],["option",4,[["isize",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u16",15]]]],[[],["option",4,[["u32",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u8",15]]]],[[],["option",4,[["usize",15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["fpcategory",4]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[],["u32",15]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[],["u32",15]],[[["u32",15]]],[[["u32",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[],["option",4]],null,null,[[]],null,null,null,[[]],[[]],null,null,null,[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[["u32",15]]],[[["u32",15]]],[[]],null,null,[[["usize",15]],["option",4]],[[["usize",15]]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]]],"p":[[8,"Num"],[8,"Signed"],[3,"Complex"],[8,"CheckedAdd"],[8,"CheckedDiv"],[8,"CheckedMul"],[8,"CheckedSub"],[8,"PrimInt"],[8,"Integer"],[8,"NumCast"],[8,"FromPrimitive"],[8,"One"],[8,"Zero"],[8,"Bounded"],[8,"Saturating"],[8,"ToPrimitive"],[8,"AsPrimitive"],[3,"ParseComplexError"],[8,"Average"],[3,"IterBinomial"],[3,"ExtendedGcd"],[8,"Roots"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"RangeFrom"],[3,"RangeStepFrom"],[8,"Pow"],[3,"Ratio"],[3,"ParseRatioError"],[8,"FloatConst"],[4,"FloatErrorKind"],[8,"Inv"],[8,"MulAdd"],[3,"ParseFloatError"],[8,"CheckedNeg"],[8,"CheckedRem"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"MulAddAssign"],[8,"SaturatingAdd"],[8,"SaturatingMul"],[8,"SaturatingSub"],[8,"WrappingAdd"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"WrappingSub"],[8,"FloatCore"],[8,"OverflowingAdd"],[8,"OverflowingMul"],[8,"OverflowingSub"]]},\
"num_complex":{"doc":"Complex numbers.","t":[3,6,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Complex","Complex32","Complex64","ParseComplexError","add","add","add","add","add_assign","add_assign","add_assign","add_assign","as_","borrow","borrow","borrow_mut","borrow_mut","clone","conj","default","div","div","div","div","div_assign","div_assign","div_assign","div_assign","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_str","from_str_radix","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","hash","i","im","into","into","inv","inv","is_finite","is_infinite","is_nan","is_normal","is_one","is_zero","l1_norm","mul","mul","mul","mul","mul_add","mul_add_assign","mul_add_assign","mul_assign","mul_assign","mul_assign","mul_assign","ne","ne","neg","new","norm_sqr","one","powi","powu","product","product","re","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","scale","set_one","set_zero","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","try_from","try_from","try_into","try_into","type_id","type_id","unscale","zero"],"q":["num_complex","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A complex number in Cartesian form.","","","","","","","","","","","","","","","","","","Returns the complex conjugate. i.e. <code>re - i im</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","","","","","","","","Returns imaginary unit","Imaginary portion of the complex number","","","Returns <code>1/self</code>","","Checks if the given complex number is finite","Checks if the given complex number is infinite","Checks if the given complex number is NaN","Checks if the given complex number is normal","","","Returns the L1 norm <code>|re| + |im|</code> – the Manhattan distance …","","","","","","","","","","","","","","","Create a new Complex","Returns the square of the norm (since <code>T</code> doesn’t …","","Raises <code>self</code> to a signed integer power.","Raises <code>self</code> to an unsigned integer power.","","","Real portion of the complex number","","","","","","","","","Multiplies <code>self</code> by the scalar <code>t</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Divides <code>self</code> by the scalar <code>t</code>.",""],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,2,2,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,1],"f":[null,null,null,null,[[]],[[]],[[]],[[["complex",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["complex",3]],[[]],[[],["complex",3]],[[["complex",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["complex",3]],["bool",15]],[[["parsecomplexerror",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["toprimitive",8]],["option",4]],[[]],[[]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i128",15]],["option",4]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["i8",15]],["option",4]],[[["isize",15]],["option",4]],[[["str",15]],["result",4]],[[["str",15],["u32",15]],["result",4]],[[["u128",15]],["option",4]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u8",15]],["option",4]],[[["usize",15]],["option",4]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[["complex",3]]],[[["complex",3],["complex",3]],["complex",3]],[[["complex",3],["complex",3]]],[[["complex",3],["complex",3]]],[[]],[[]],[[]],[[]],[[["complex",3]],["bool",15]],[[["parsecomplexerror",3]],["bool",15]],[[]],[[]],[[]],[[]],[[["i32",15]]],[[["u32",15]]],[[]],[[]],null,[[["complex",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["complex",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4,[["f32",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i16",15]]]],[[],["option",4,[["i32",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i8",15]]]],[[],["option",4,[["isize",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u16",15]]]],[[],["option",4,[["u32",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u8",15]]]],[[],["option",4,[["usize",15]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"Complex"],[3,"ParseComplexError"]]},\
"num_integer":{"doc":"Integer trait and functions.","t":[8,3,8,3,8,5,10,5,10,5,11,11,11,11,5,11,11,11,5,11,5,10,5,11,5,10,10,11,11,11,11,11,11,5,10,12,5,11,11,11,11,10,10,10,5,10,5,10,5,11,11,11,11,5,10,11,5,11,11,11,11,11,11,11,11,12,12],"n":["Average","ExtendedGcd","Integer","IterBinomial","Roots","average_ceil","average_ceil","average_floor","average_floor","binomial","borrow","borrow","borrow_mut","borrow_mut","cbrt","cbrt","cbrt","clone","div_ceil","div_ceil","div_floor","div_floor","div_mod_floor","div_mod_floor","div_rem","div_rem","divides","eq","extended_gcd","extended_gcd_lcm","fmt","from","from","gcd","gcd","gcd","gcd_lcm","gcd_lcm","into","into","into_iter","is_even","is_multiple_of","is_odd","lcm","lcm","mod_floor","mod_floor","multinomial","ne","new","next","next_multiple_of","nth_root","nth_root","prev_multiple_of","sqrt","sqrt","sqrt","try_from","try_from","try_into","try_into","type_id","type_id","x","y"],"q":["num_integer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Provides methods to compute the average of two integers, …","Greatest common divisor and Bézout coefficients","","An iterator over binomial coefficients.","Provides methods to compute an integer’s square root, …","Returns the ceiling value of the average of <code>x</code> and <code>y</code> – …","Returns the ceiling value of the average of <code>self</code> and <code>other</code>.","Returns the floor value of the average of <code>x</code> and <code>y</code> – see …","Returns the floor value of the average of <code>self</code> and <code>other</code>. …","Calculate the binomial coefficient.","","","","","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","","Ceiled integer division","Ceiled integer division.","Floored integer division","Floored integer division.","Simultaneous floored integer division and modulus","Simultaneous floored integer division and modulus. Returns …","Simultaneous integer division and modulus","Simultaneous truncated integer division and modulus. …","Deprecated, use <code>is_multiple_of</code> instead.","","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","","","","Calculates the Greatest Common Divisor (GCD) of the number …","Greatest Common Divisor (GCD).","","Calculates the Greatest Common Divisor (GCD) and Lowest …","Greatest Common Divisor (GCD) and Lowest Common Multiple …","","","","Returns <code>true</code> if the number is even.","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Returns <code>true</code> if the number is odd.","Calculates the Lowest Common Multiple (LCM) of the number …","Lowest Common Multiple (LCM).","Floored integer modulus","Floored integer modulo, satisfying:","Calculate the multinomial coefficient.","","For a given n, iterate over all binomial coefficients …","","Rounds up to nearest multiple of argument.","Returns the truncated principal <code>n</code>th root of an integer – …","Returns the truncated principal <code>n</code>th root of an integer – …","Rounds down to nearest multiple of argument.","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","","","","","","","",""],"i":[0,0,0,0,0,0,1,0,1,0,2,3,2,3,0,4,4,3,0,5,0,5,0,5,0,5,5,3,5,5,3,2,3,0,5,3,0,5,2,3,2,5,5,5,0,5,0,5,0,3,2,2,5,0,4,5,0,4,4,2,3,2,3,2,3,3,3],"f":[null,null,null,null,null,[[["average",8],["average",8]],["average",8]],[[]],[[["average",8],["average",8]],["average",8]],[[]],[[["",26,[["integer",8],["clone",8]]],["",26,[["integer",8],["clone",8]]]],["",26,[["integer",8],["clone",8]]]],[[]],[[]],[[]],[[]],[[["roots",8]],["roots",8]],[[]],[[]],[[],["extendedgcd",3]],[[["integer",8],["integer",8]],["integer",8]],[[]],[[["integer",8],["integer",8]],["integer",8]],[[]],[[["integer",8],["integer",8]]],[[]],[[["integer",8],["integer",8]]],[[]],[[],["bool",15]],[[["extendedgcd",3]],["bool",15]],[[],["extendedgcd",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["integer",8],["integer",8]],["integer",8]],[[]],null,[[["integer",8],["integer",8]]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["integer",8],["integer",8]],["integer",8]],[[]],[[["integer",8],["integer",8]],["integer",8]],[[]],[[],["",26,[["integer",8],["clone",8]]]],[[["extendedgcd",3]],["bool",15]],[[],["iterbinomial",3]],[[],["option",4]],[[]],[[["roots",8],["u32",15]],["roots",8]],[[["u32",15]]],[[]],[[["roots",8]],["roots",8]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null],"p":[[8,"Average"],[3,"IterBinomial"],[3,"ExtendedGcd"],[8,"Roots"],[8,"Integer"]]},\
"num_iter":{"doc":"External iterators for generic mathematics","t":[3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Range","RangeFrom","RangeInclusive","RangeStep","RangeStepFrom","RangeStepInclusive","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","next","next","next","next","next","next","next_back","next_back","range","range_from","range_inclusive","range_step","range_step_from","range_step_inclusive","size_hint","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["num_iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An iterator over the range [start, stop)","An iterator over the infinite range starting at <code>start</code>","An iterator over the range [start, stop]","An iterator over the range [start, stop) by <code>step</code>. It …","An iterator over the infinite range starting at <code>start</code> by …","An iterator over the range [start, stop] by <code>step</code>. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over the given range [start, stop) …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop]","Return an iterator over the range [start, stop) by <code>step</code>. …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop] by <code>step</code>. …","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,0,0,0,0,0,0,1,2,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6],"f":[null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["range",3]],[[],["rangeinclusive",3]],[[],["rangestep",3]],[[],["rangestepinclusive",3]],[[],["rangefrom",3]],[[],["rangestepfrom",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["range",3]],[[],["rangefrom",3]],[[],["rangeinclusive",3]],[[],["rangestep",3]],[[],["rangestepfrom",3]],[[],["rangestepinclusive",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"RangeFrom"],[3,"RangeStepFrom"]]},\
"num_rational":{"doc":"Rational numbers","tn":["ParseRatioError","Ratio","Rational","Rational32","Rational64","abs","abs_sub","add","add","add","add","add_assign","add_assign","add_assign","add_assign","approximate_float","borrow","borrow","borrow_mut","borrow_mut","ceil","checked_add","checked_div","checked_mul","checked_sub","clone","clone","cmp","denom","div","div","div","div","div_assign","div_assign","div_assign","div_assign","eq","eq","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","from","from","from","from","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_integer","from_str","from_str_radix","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","hash","into","into","into","inv","is_integer","is_negative","is_one","is_positive","is_zero","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","ne","neg","new","new_raw","numer","one","partial_cmp","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","product","product","recip","reduced","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","round","set_one","set_zero","signum","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_integer","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","trunc","try_from","try_from","try_into","try_into","type_id","type_id","zero"],"q":["num_rationald":["","Represents the ratio between two numbers.","Alias for a <code>Ratio</code> of machine-sized integers.","Alias for a <code>Ratio</code> of 32-bit-sized integers.","Alias for a <code>Ratio</code> of 64-bit-sized integers.","","","","","","","","","","","","","","","","Rounds towards plus infinity.","","","","","","","","Gets an immutable reference to the denominator.","","","","","","","","","","","Rounds towards minus infinity.","","","","","","","","","","","Returns the fractional part of a number, with division …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Ratio</code> representing the integer <code>t</code>.","Parses <code>numer/denom</code> or just <code>numer</code>.","Parses <code>numer/denom</code> where the numbers are in base <code>radix</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the rational number is an integer …","","","","","","","","","","","","","","","Creates a new <code>Ratio</code>.","Creates a <code>Ratio</code> without checking for <code>denom == 0</code> or …","Gets an immutable reference to the numerator.","","","","","","","","","","","","","","","","","","","Raises the <code>Ratio</code> to the power of an exponent.","","","","","","","","","","","Returns the reciprocal.","Returns a reduced copy of self.","","","","","","","","","Rounds to the nearest integer. Rounds half-way cases away …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts to an integer, rounding towards zero.","","","","","","","","","","","","","","","","","","","","","Rounds towards zero.","","","","","","",""],"i":[0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1],"f":[null,null,null,null,null,[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[]],[[["ratio",3]]],[[["ratio",3]]],[[]],[[["",26,[["floatcore",8],["numcast",8]]]],["option",4,[["ratio",3]]]],[[]],[[]],[[]],[[]],[[],["ratio",3]],[[["ratio",3]],["option",4,[["ratio",3]]]],[[["ratio",3]],["option",4,[["ratio",3]]]],[[["ratio",3]],["option",4,[["ratio",3]]]],[[["ratio",3]],["option",4,[["ratio",3]]]],[[],["ratio",3]],[[],["parseratioerror",3]],[[],["ordering",4]],[[]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]]],[[]],[[]],[[["ratio",3]]],[[],["bool",15]],[[["parseratioerror",3]],["bool",15]],[[],["ratio",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["ratio",3]],[[]],[[],["ratio",3]],[[],["ratio",3]],[[]],[[["f32",15]],["option",4]],[[["f32",15]],["option",4]],[[["f32",15]],["option",4]],[[["f32",15]],["option",4]],[[["f32",15]],["option",4]],[[["f32",15]],["option",4]],[[["f32",15]],["option",4]],[[["f32",15]],["option",4]],[[["f32",15]],["option",4]],[[["f32",15]],["option",4]],[[["f32",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["f64",15]],["option",4]],[[["f64",15]],["option",4]],[[["f64",15]],["option",4]],[[["f64",15]],["option",4]],[[["f64",15]],["option",4]],[[["f64",15]],["option",4]],[[["f64",15]],["option",4]],[[["f64",15]],["option",4]],[[["f64",15]],["option",4]],[[["f64",15]],["option",4]],[[["f64",15]],["option",4]],[[["i128",15]],["option",4]],[[["i128",15]],["option",4]],[[["i128",15]],["option",4]],[[["i128",15]],["option",4]],[[["i128",15]],["option",4]],[[["i128",15]],["option",4]],[[["i128",15]],["option",4]],[[["i128",15]],["option",4]],[[["i128",15]],["option",4]],[[["i128",15]],["option",4]],[[["i128",15]],["option",4]],[[["i128",15]],["option",4]],[[["i64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i64",15]],["option",4]],[[["i64",15]],["option",4]],[[],["ratio",3]],[[["str",15]],["result",4,[["ratio",3],["parseratioerror",3]]]],[[["str",15],["u32",15]],["result",4,[["ratio",3],["parseratioerror",3]]]],[[["u128",15]],["option",4]],[[["u128",15]],["option",4]],[[["u128",15]],["option",4]],[[["u128",15]],["option",4]],[[["u128",15]],["option",4]],[[["u128",15]],["option",4]],[[["u128",15]],["option",4]],[[["u128",15]],["option",4]],[[["u128",15]],["option",4]],[[["u128",15]],["option",4]],[[["u128",15]],["option",4]],[[["u128",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[]],[[]],[[]],[[]],[[],["ratio",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[]],[[]],[[["ratio",3]]],[[["ratio",3]]],[[["parseratioerror",3]],["bool",15]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[]],[[],["ratio",3]],[[],["option",4,[["ordering",4]]]],[[["i16",15]],["ratio",3]],[[["i128",15]],["ratio",3]],[[["i8",15]],["ratio",3]],[[["usize",15]],["ratio",3]],[[["usize",15]],["ratio",3]],[[["u128",15]],["ratio",3]],[[["u128",15]],["ratio",3]],[[["u64",15]],["ratio",3]],[[["u64",15]],["ratio",3]],[[["u32",15]],["ratio",3]],[[["u32",15]],["ratio",3]],[[["u16",15]],["ratio",3]],[[["u16",15]],["ratio",3]],[[["u8",15]],["ratio",3]],[[["u8",15]],["ratio",3]],[[["isize",15]],["ratio",3]],[[["i32",15]],["ratio",3]],[[["isize",15]],["ratio",3]],[[["i128",15]],["ratio",3]],[[["i8",15]],["ratio",3]],[[["i64",15]],["ratio",3]],[[["i64",15]],["ratio",3]],[[["i16",15]],["ratio",3]],[[["i32",15]],["ratio",3]],[[["i32",15]],["ratio",3]],[[]],[[]],[[],["ratio",3]],[[],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[]],[[["ratio",3]]],[[]],[[["ratio",3]]],[[],["ratio",3]],[[]],[[]],[[],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[],["ratio",3]],[[["ratio",3]],["ratio",3]],[[]],[[]],[[["ratio",3]]],[[["ratio",3]]],[[]],[[]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i64",15]]]],[[]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u64",15]]]],[[],["ratio",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["ratio",3]]],"p":[[3,"Ratio"],[3,"ParseRatioError"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","t":[13,4,16,13,8,8,8,8,8,8,3,8,11,11,11,11,0,0,5,5,5,0,11,11,11,11,11,10,0,0,11,11,12,0,0,0,11,11,11,11,11,11,8,10,10,8,8,8,8,10,5,10,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,10,10,10,10,10,10,10,10,10,10,8,8,10,10,11,10,11,10,10,10,11,11,11,10,10,11,11,10,10,11,11,11,11,11,11,11,10,11,10,10,10,10,10,11,11,11,11,10,10,11,8,8,11,10,5,10,11,11,5,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,8,8,8,8,8,8,8,8,10,10,10,10,10,10,10,10,8,16,10,8,8,16,10,10,8,8,8,10,10,10,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,10,16,8,5,5,10,8,8,5,10,5,10,10,10,5,10],"n":["Empty","FloatErrorKind","FromStrRadixErr","Invalid","Num","NumAssign","NumAssignOps","NumAssignRef","NumOps","NumRef","ParseFloatError","RefNum","borrow","borrow","borrow_mut","borrow_mut","bounds","cast","clamp","clamp_max","clamp_min","float","fmt","fmt","fmt","from","from","from_str_radix","identities","int","into","into","kind","ops","pow","sign","try_from","try_from","try_into","try_into","type_id","type_id","Bounded","max_value","min_value","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","FloatConst","FloatCore","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","PI","SQRT_2","TAU","abs","ceil","classify","epsilon","floor","fract","infinity","integer_decode","is_finite","is_infinite","is_nan","is_normal","is_sign_negative","is_sign_positive","max","max_value","min","min_positive_value","min_value","nan","neg_infinity","neg_zero","powi","recip","round","signum","to_degrees","to_radians","trunc","One","Zero","is_one","is_zero","one","one","set_one","set_zero","zero","zero","PrimInt","count_ones","count_zeros","from_be","from_le","leading_zeros","pow","rotate_left","rotate_right","signed_shl","signed_shr","swap_bytes","to_be","to_le","trailing_zeros","unsigned_shl","unsigned_shr","checked","inv","mul_add","overflowing","saturating","wrapping","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","checked_add","checked_div","checked_mul","checked_neg","checked_rem","checked_shl","checked_shr","checked_sub","Inv","Output","inv","MulAdd","MulAddAssign","Output","mul_add","mul_add_assign","OverflowingAdd","OverflowingMul","OverflowingSub","overflowing_add","overflowing_mul","overflowing_sub","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","Output","Pow","checked_pow","pow","pow","Signed","Unsigned","abs","abs","abs_sub","abs_sub","is_negative","is_positive","signum","signum"],"q":["num_traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits::bounds","","","num_traits::cast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits::float","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits::identities","","","","","","","","","","num_traits::int","","","","","","","","","","","","","","","","","num_traits::ops","","","","","","num_traits::ops::checked","","","","","","","","","","","","","","","","num_traits::ops::inv","","","num_traits::ops::mul_add","","","","","num_traits::ops::overflowing","","","","","","num_traits::ops::saturating","","","","","","","","","num_traits::ops::wrapping","","","","","","","","","","","","num_traits::pow","","","","","num_traits::sign","","","","","","","","",""],"d":["","","","","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","The trait for <code>Num</code> types which also implement assignment …","The trait for types implementing numeric assignment …","The trait for <code>NumAssign</code> types which also implement …","The trait for types implementing basic numeric operations","The trait for <code>Num</code> types which also implement numeric …","","The trait for references which implement numeric …","","","","","","","A value bounded by a minimum and a maximum","A value bounded by a maximum value","A value bounded by a minimum value","","","","","","","Convert from a string and radix (typically <code>2..=36</code>).","","","","","","","","","","","","","","","Numbers which have upper and lower bounds","returns the largest finite number this type can represent","returns the smallest finite number this type can represent","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","","Generic trait for floating point numbers that works with …","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Computes the absolute value of <code>self</code>. Returns …","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Returns epsilon, a small positive value.","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Returns positive infinity.","Returns the mantissa, base 2 exponent, and sign as …","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Returns NaN.","Returns negative infinity.","Returns <code>-0.0</code>.","Raise a number to an integer power.","Returns the reciprocal (multiplicative inverse) of the …","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Converts to degrees, assuming the number is in radians.","Converts to radians, assuming the number is in degrees.","Return the integer part of a number.","Defines a multiplicative identity element for <code>Self</code>.","Defines an additive identity element for <code>Self</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Returns the number of leading zeros in the binary …","Raises self to the power of <code>exp</code>, using exponentiation by …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","","","","","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation.","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation.","Performs the fused multiply-add operation.","Performs addition with a flag for overflow.","Performs multiplication with a flag for overflow.","Performs substraction with a flag for overflow.","Returns a tuple of the sum along with a boolean indicating …","Returns a tuple of the product along with a boolean …","Returns a tuple of the difference along with a boolean …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","Useful functions for signed numbers (i.e. numbers that can …","A trait for values which cannot be negative","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Returns true if the number is negative and false if the …","Returns true if the number is positive and false if the …","Returns the sign of the number.","Returns the sign of the number."],"i":[1,0,2,1,0,0,0,0,0,0,0,0,1,3,1,3,0,0,0,0,0,0,1,3,3,1,3,2,0,0,1,3,3,0,0,0,1,3,1,3,1,3,0,4,4,0,0,0,0,5,0,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,11,12,0,11,11,12,0,12,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,15,16,17,18,19,20,21,0,22,22,0,0,23,23,24,0,0,0,25,26,27,0,0,0,0,28,29,30,28,31,0,0,0,0,0,0,32,33,34,35,36,37,38,0,0,0,38,0,0,0,39,0,39,39,39,0,39],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,null,[[["partialord",8],["partialord",8],["partialord",8]],["partialord",8]],[[["partialord",8],["partialord",8]],["partialord",8]],[[["partialord",8],["partialord",8]],["partialord",8]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15],["u32",15]],["result",4]],null,null,[[]],[[]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,null,null,[[]],[[["numcast",8]],["option",4,[["numcast",8]]]],[[["toprimitive",8]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i128",15]],["option",4]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["i8",15]],["option",4]],[[["isize",15]],["option",4]],[[["u128",15]],["option",4]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u8",15]],["option",4]],[[["usize",15]],["option",4]],[[],["option",4,[["f32",15]]]],[[],["option",4,[["f64",15]]]],[[],["option",4,[["i128",15]]]],[[],["option",4,[["i16",15]]]],[[],["option",4,[["i32",15]]]],[[],["option",4,[["i64",15]]]],[[],["option",4,[["i8",15]]]],[[],["option",4,[["isize",15]]]],[[],["option",4,[["u128",15]]]],[[],["option",4,[["u16",15]]]],[[],["option",4,[["u32",15]]]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u8",15]]]],[[],["option",4,[["usize",15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["fpcategory",4]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["bool",15]],[[],["bool",15]],[[],["one",8]],[[]],[[]],[[]],[[],["zero",8]],[[]],null,[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[],["u32",15]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[],["u32",15]],[[["u32",15]]],[[["u32",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[],["option",4]],null,null,[[]],null,null,null,[[]],[[]],null,null,null,[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[["u32",15]]],[[["u32",15]]],[[]],null,null,[[["",26,[["clone",8],["one",8],["checkedmul",8]]],["usize",15]],["option",4,[["",26,[["clone",8],["one",8],["checkedmul",8]]]]]],[[["",26,[["clone",8],["one",8],["mul",8,[["",26,[["clone",8],["one",8],["mul",8,[["",26,[["clone",8],["one",8],["mul",8,[["",26,[["clone",8],["one",8],["mul",8,[["",26,[["clone",8],["one",8],["mul",8]]]]]]]]]]]]]]]]]]],["usize",15]],["",26,[["clone",8],["one",8],["mul",8,[["",26,[["clone",8],["one",8],["mul",8,[["",26,[["clone",8],["one",8],["mul",8,[["",26,[["clone",8],["one",8],["mul",8,[["",26,[["clone",8],["one",8],["mul",8]]]]]]]]]]]]]]]]]]]],[[]],null,null,[[["signed",8]],["signed",8]],[[]],[[["signed",8],["signed",8]],["signed",8]],[[]],[[],["bool",15]],[[],["bool",15]],[[["signed",8]],["signed",8]],[[]]],"p":[[4,"FloatErrorKind"],[8,"Num"],[3,"ParseFloatError"],[8,"Bounded"],[8,"AsPrimitive"],[8,"NumCast"],[8,"FromPrimitive"],[8,"ToPrimitive"],[8,"FloatConst"],[8,"FloatCore"],[8,"One"],[8,"Zero"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedDiv"],[8,"CheckedMul"],[8,"CheckedNeg"],[8,"CheckedRem"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"CheckedSub"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingMul"],[8,"OverflowingSub"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingMul"],[8,"SaturatingSub"],[8,"WrappingAdd"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"WrappingSub"],[8,"Pow"],[8,"Signed"]]},\
"qemu_exit":{"doc":"Exit QEMU with user-defined code.","t":[8,10,10,10,0,3,11,11,11,11,11,11,11,11,11,11,11],"n":["QEMUExit","exit","exit_failure","exit_success","x86","X86","borrow","borrow_mut","exit","exit_failure","exit_success","from","into","new","try_from","try_into","type_id"],"q":["qemu_exit","","","","","qemu_exit::x86","","","","","","","","","","",""],"d":["Generic interface for exiting QEMU.","Exit with specified return code.","Exit QEMU using <code>EXIT_FAILURE</code>, aka <code>1</code>.","Exit QEMU using <code>EXIT_SUCCESS</code>, aka <code>0</code>, if possible.","x86.","x86 configuration.","","","","","","","","Create an instance.","","",""],"i":[0,1,1,1,0,0,2,2,2,2,2,2,2,2,2,2,2],"f":[null,[[["u32",15]],["never",15]],[[],["never",15]],[[],["never",15]],null,null,[[]],[[]],[[["u32",15]],["never",15]],[[],["never",15]],[[],["never",15]],[[]],[[]],[[["u16",15],["u32",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[8,"QEMUExit"],[3,"X86"]]},\
"raw_cpuid":{"doc":"A library to parse the x86 CPUID instruction, written in …","t":[13,3,4,13,13,13,13,13,17,13,3,3,4,3,3,4,13,3,3,13,3,3,4,13,13,3,13,13,13,3,3,3,4,4,3,3,3,3,3,3,13,13,13,13,4,3,13,13,13,13,13,3,3,3,3,3,3,3,3,13,13,13,13,13,3,13,13,3,3,3,3,3,13,13,13,3,3,13,13,13,3,4,3,3,3,3,3,13,3,4,3,13,13,13,13,13,13,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,5],"n":["ACRN","ApmInfo","Associativity","Avx","Avx512Opmask","Avx512ZmmHi16","Avx512ZmmHi256","Bhyve","CACHE_INFO_TABLE","Cache","CacheInfo","CacheInfoIter","CacheInfoType","CacheParameter","CacheParametersIter","CacheType","Core","CpuId","CpuIdResult","DTLB","DatInfo","DatIter","DatType","Data","DataTLB","DirectCacheAccessInfo","DirectMapped","Disabled","Epc","EpcSection","ExtendedFeatures","ExtendedProcessorFeatureIdentifiers","ExtendedRegisterStateLocation","ExtendedRegisterType","ExtendedState","ExtendedStateInfo","ExtendedStateIter","ExtendedTopologyIter","ExtendedTopologyLevel","FeatureInfo","FullyAssociative","General","Hdc","HyperV","Hypervisor","HypervisorInfo","Ia32Xss","Instruction","InstructionTLB","Invalid","KVM","L1CacheTlbInfo","L2And3CacheTlbInfo","L2CatInfo","L3CatInfo","L3MonitoringInfo","MemBwAllocationInfo","MemoryEncryptionInfo","MonitorMwaitInfo","MpxBndcsr","MpxBndregs","NWay","Null","Null","PerformanceMonitoringInfo","Pkru","Prefetch","ProcessorBrandString","ProcessorCapacityAndFeatureInfo","ProcessorFrequencyInfo","ProcessorSerial","ProcessorTraceInfo","Pt","QEMU","QNX","RdtAllocationInfo","RdtMonitoringInfo","Reserved","SMT","STLB","SgxInfo","SgxSectionInfo","SgxSectionIter","SoCVendorAttributesIter","SoCVendorBrand","SoCVendorInfo","SvmFeatures","TLB","ThermalPowerInfo","TopologyType","TscInfo","Unified","UnifiedTLB","Unknown","Unknown","Unknown","Unknown","VMware","VendorInfo","Xcr0","Xen","all_zero","apic_frequency","apic_id_size","as_str","as_str","as_str","as_string","as_string","associativity","base_family_id","base_model_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brand_id","brand_index","bus_frequency","c_bit_position","cache_level","cache_type","cache_type","capacity_mask_length","capacity_mask_length","cflush_cache_line_size","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","coherency_line_size","configurable_address_ranges","conversion_factor","counter_bit_width","cpu_pwr_sample_time_ratio","cpuid","dcache_associativity","dcache_line_size","dcache_lines_per_tag","dcache_size","default","denominator","desc","dtlb_2m_4m_associativity","dtlb_2m_4m_associativity","dtlb_2m_4m_size","dtlb_2m_4m_size","dtlb_4k_associativity","dtlb_4k_associativity","dtlb_4k_size","dtlb_4k_size","dts_irq_threshold","eax","ebx","ebx_length","ecx","edx","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extended_family_id","extended_model_id","extended_signature","extensions_supported","family_id","fixed_function_counters","fixed_function_counters_bit_width","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_advanced_power_mgmt_info","get_cache_info","get_cache_parameters","get_dca_cap_value","get_deterministic_address_translation_info","get_direct_cache_access_info","get_extended_feature_info","get_extended_processor_and_feature_identifiers","get_extended_state_info","get_extended_topology_info","get_feature_info","get_hypervisor_info","get_l1_cache_and_tlb_info","get_l2_l3_cache_and_tlb_info","get_memory_encryption_info","get_monitor_mwait_info","get_performance_monitoring_info","get_processor_brand_string","get_processor_capacity_feature_info","get_processor_frequency_info","get_processor_serial","get_processor_trace_info","get_project_id","get_rdt_allocation_info","get_rdt_monitoring_info","get_sgx_info","get_soc_vendor_id","get_soc_vendor_info","get_stepping_id","get_svm_info","get_thermal_power_info","get_tsc_info","get_vendor_attributes","get_vendor_brand","get_vendor_info","guest_physical_address_bits","has_100mhz_steps","has_1gb_entries","has_1gib_pages","has_2mb_entries","has_3dnow","has_4k_entries","has_4mb_entries","has_64bit_mode","has_64bit_mode","has_acpi","has_addr_mask_extension","has_adx","has_aesni","has_alt_mov_cr8","has_alternate_injection","has_amd_3dnow_extensions","has_any_thread_deprecation","has_apic","has_arat","has_avic","has_avx","has_avx2","has_avx512_ifma","has_avx512bw","has_avx512cd","has_avx512dq","has_avx512er","has_avx512f","has_avx512pf","has_avx512vl","has_bmi1","has_bmi2","has_cl_zero","has_clflush","has_clflushopt","has_clwb","has_cmov","has_cmp_legacy","has_cmpxchg16b","has_cmpxchg8b","has_cnxtid","has_code_data_prioritization","has_complex_indexing","has_configurable_psb_and_cycle_accurate_mode","has_cpb","has_cpl","has_data_access_bkpt_extension","has_dca","has_de","has_debug_swap","has_decode_assists","has_ds","has_ds_area","has_dts","has_ecmd","has_eist","has_encls_leaves_etrackc_erdinfo_eldbc_elduc","has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","has_energy_bias_pref","has_execute_disable","has_ext_apic_space","has_f16c","has_fast_fxsave_fxstor","has_fdp","has_feedback_iface","has_flexible_hwp","has_flush_by_asid","has_fma","has_fma4","has_fpu","has_fpu_cs_ds_deprecated","has_freq_id_ctrl","has_fsgsbase","has_fxsave_fxstor","has_gif","has_gmet","has_hdc","has_hle","has_host_mce_override","has_htt","has_hw_coord_feedback","has_hw_enforced_cache_coh","has_hw_pstate","has_hwa","has_hwp","has_hwp_activity_window","has_hwp_capabilities","has_hwp_energy_performance_preference","has_hwp_fast_access_mode","has_hwp_notification","has_hwp_package_level_request","has_hwp_peci_override","has_hypervisor","has_ibs","has_ignore_idle_processor_hwp_request","has_inst_ret_cntr_msr","has_int_wbinvd","has_invariant_tsc","has_invlpgb","has_invlpgb_nested","has_invpcid","has_ip_tracestop_filtering","has_l2_cat","has_l3_cat","has_l3_monitoring","has_lahf_sahf","has_lbr_virtualization","has_linear_response_delay","has_lip_with_cs_base","has_local_bandwidth_monitoring","has_lwp","has_lzcnt","has_mca","has_mca_overflow_recovery","has_mce","has_mcommit","has_memory_bandwidth_allocation","has_misaligned_sse_mode","has_mmx","has_mmx_extensions","has_monitor_mwait","has_monitorx_mwaitx","has_movbe","has_mpx","has_msr","has_mtc_timing_packet_coefi_suppression","has_mtrr","has_nb_perf_cntr_extensions","has_nested_paging","has_nrip","has_occupancy_monitoring","has_ospke","has_osvw","has_oxsave","has_pae","has_page_flush_msr","has_pat","has_pause_filter","has_pause_filter_threshold","has_pbe","has_pcid","has_pclmulqdq","has_pdcm","has_perf_cntr_extensions","has_perf_cntr_llc_extensions","has_perf_tsc","has_pge","has_pku","has_pln","has_popcnt","has_power_event_trace","has_power_reporting_iface","has_prefetchw","has_prefetchwt1","has_prevent_host_ibs","has_processor_trace","has_pse","has_pse36","has_psn","has_ptm","has_ptwrite","has_rdpid","has_rdpru","has_rdrand","has_rdseed","has_rdta","has_rdtm","has_rdtscp","has_rep_movsb_stosb","has_restore_fp_error_ptrs","has_restricted_injection","has_ro_effective_freq_iface","has_rtit_cr3_match","has_rtm","has_sev","has_sev_es","has_sev_snp","has_sgx","has_sgx1","has_sgx2","has_sgx_lc","has_sha","has_single_range_output_scheme","has_skinit","has_smap","has_sme","has_smep","has_smx","has_spec_ctrl","has_ss","has_sse","has_sse2","has_sse3","has_sse41","has_sse42","has_sse4a","has_sss_check","has_ssse3","has_succor","has_svm","has_svm_lock","has_syscall_sysret","has_sysenter_sysexit","has_tbm","has_thermtrip","has_tlb_ctrl","has_tm","has_tm","has_tm2","has_topa","has_topa_maximum_entries","has_topology_extensions","has_total_bandwidth_monitoring","has_trace_transport_subsystem","has_ts","has_tsc","has_tsc_adjust_msr","has_tsc_deadline","has_tsc_rate_msr","has_turbo_boost","has_turbo_boost3","has_umip","has_unsupported_efer_lmsle","has_vmcb_clean_bits","has_vme","has_vmpl","has_vmsave_virtualization","has_vmx","has_volt_id_ctrl","has_vte","has_wbnoinvd","has_wdt","has_x2apic","has_xgetbv","has_xop","has_xsave","has_xsavec","has_xsaveopt","has_xsaves_xrstors","highest_cos","highest_cos","highest_cos","ia32_xss_supports_hdc","ia32_xss_supports_pt","icache_associativity","icache_line_size","icache_lines_per_tag","icache_size","identify","initial_local_apic_id","interrupts_as_break_event","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","invlpgb_max_pages","is_branch_inst_ret_ev_unavailable","is_branch_midpred_ev_unavailable","is_cache_ref_ev_unavailable","is_compacted_format","is_core_cyc_ev_unavailable","is_fully_associative","is_fully_associative","is_in_ia32_xss","is_in_xcr0","is_inclusive","is_inst_ret_ev_unavailable","is_ll_cache_miss_ev_unavailable","is_ref_cycle_ev_unavailable","is_self_initializing","is_write_back_invalidate","isolation_bitmap","isolation_bitmap","iter","iter","itlb_2m_4m_associativity","itlb_2m_4m_associativity","itlb_2m_4m_size","itlb_2m_4m_size","itlb_4k_associativity","itlb_4k_associativity","itlb_4k_size","itlb_4k_size","l2_cat","l2cache_associativity","l2cache_line_size","l2cache_lines_per_tag","l2cache_size","l3_cat","l3_monitoring","l3cache_associativity","l3cache_line_size","l3cache_lines_per_tag","l3cache_size","largest_monitor_line","level","level_number","level_type","linear_address_bits","location","mawau_value","max_addressable_ids","max_cores_for_cache","max_cores_for_package","max_enclave_size_64bit","max_enclave_size_non_64bit","max_encrypted_guests","max_hba_throttling","max_logical_processor_ids","max_rdpru_id","maximum_logical_processors","maximum_rmid_range","memory_bandwidth_allocation","min_sev_no_es_asid","miscselect","model_id","native_cpuid","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","next","next","next","next","next","next","next","nominal_frequency","num","num_phys_threads","number_of_counters","numerator","offset","partitioning","perf_tsc_size","physical_address_bits","physical_address_reduction","physical_base","physical_line_partitions","pkg_type","processor_base_frequency","processor_max_frequency","processors","register","revision","rmid_range","secs_attributes","serial","serial_all","serial_lower","serial_middle","serial_upper","sets","sets","shift_right_for_next_apic_id","size","size","smallest_monitor_line","stepping_id","subleaf","supported_asids","supported_c0_states","supported_c1_states","supported_c2_states","supported_c3_states","supported_c4_states","supported_c5_states","supported_c6_states","supported_c7_states","supported_cycle_threshold_value_encodings","supported_mtc_period_encodings","supported_psb_frequency_encodings","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsc_frequency","tsc_frequency","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version_id","ways","with_cpuid_fn","x2apic_id","xcr0_supports_avx512_opmask","xcr0_supports_avx512_zmm_hi16","xcr0_supports_avx512_zmm_hi256","xcr0_supports_avx_256","xcr0_supports_legacy_x87","xcr0_supports_mpx_bndcsr","xcr0_supports_mpx_bndregs","xcr0_supports_pkru","xcr0_supports_sse_128","xsave_area_size_enabled_features","xsave_area_size_supported_features","xsave_size","0","0","0","1","2","0","cpuid_count"],"q":["raw_cpuid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","raw_cpuid::Associativity","raw_cpuid::ExtendedRegisterType","raw_cpuid::Hypervisor","","","raw_cpuid::SgxSectionInfo","raw_cpuid::native_cpuid"],"d":["","Processor Power Management and RAS Capabilities …","Info about cache Associativity.","","","","","","This table is taken from Intel manual (Section CPUID …","","Describes any kind of cache (TLB, Data and Instruction …","Iterates over cache information (LEAF=0x02).","What type of cache are we dealing with?","Information about an individual cache in the hierarchy.","Iterator over caches (LEAF=0x04).","Info about a what a given cache caches (instructions, …","","The main type used to query information about the CPU we’…","Low-level data-structure to store result of cpuid …","","Deterministic Address Translation Structure","Deterministic Address Translation Structure Iterator …","Deterministic Address Translation cache type (EDX bits 04 …","Data cache","","Direct cache access info (LEAF=0x09).","","","","EBX:EAX and EDX:ECX provide information on the Enclave …","Structured Extended Feature Identifiers (LEAF=0x07).","Extended Processor and Processor Feature Identifiers …","Where the extended register state is stored.","What kidn of extended register state this is.","ExtendedState subleaf structure for things that need to be …","Information for saving/restoring extended register state …","Yields ExtendedState structs.","Information about topology (LEAF=0x0B).","Gives information about the current level in the topology.","Processor and Processor Feature Identifiers (LEAF=0x01).","","","","","Identifies the different Hypervisor products.","Information about Hypervisor (LEAF=0x4000_0001)","","Instruction cache","","","","L1 Cache and TLB Information (LEAF=0x8000_0005).","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","L2 Cache Allocation Technology Enumeration Sub-leaf …","L3 Cache Allocation Technology Enumeration Sub-leaf …","Information about L3 cache monitoring.","Memory Bandwidth Allocation Enumeration Sub-leaf …","Encrypted Memory Capabilities","Information about how monitor/mwait works on this CPU …","","","","Null - No more caches","Null (indicates this sub-leaf is not valid).","Info about performance monitoring – how many counters …","","","Processor name (LEAF=0x8000_0002..=0x8000_0004).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Processor Serial Number (LEAF=0x3).","Intel Processor Trace Information (LEAF=0x14).","","QEMU is the hypervisor identity when QEMU is used without …","","Quality of service enforcement information (LEAF=0x10).","Intel Resource Director Technology RDT (LEAF=0x0F).","4-31 = Reserved","Hyper-thread (Simultaneous multithreading)","","Intel SGX Capability Enumeration Leaf (LEAF=0x12).","Intel SGX EPC Enumeration Leaf","Iterator over the SGX sub-leafs (ECX &gt;= 2).","Iterator for SoC vendor attributes.","A vendor brand string as queried from the cpuid leaf.","SoC vendor specific information (LEAF=0x17).","Information about the SVM features that the processory …","","Query information about thermal and power management …","What type of core we have at this level in the topology …","Time Stamp Counter/Core Crystal Clock Information …","Data and Instruction cache","Some unified TLBs will allow a single TLB entry to satisfy …","","","","","","Vendor Info String (LEAF=0x0)","","","","(Virtual) Bus (local apic timer) frequency in kHz.","APIC ID size.","Return the processor brand string as a rust string.","Return vendor identification as human readable string.","Return the SocVendorBrand as a string.","","","Ways of associativity (Bits 31-22)","Version Information: Family","Version Information: Model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns brand ID on AMD.","Brand Index","Bus (Reference) Frequency (in MHz).","C-bit location in page table entry","Translation cache level (starts at 1)","Translation cache type field.","Cache Type","Length of the capacity bit mask.","Length of the capacity bit mask.","CLFLUSH line size (Value ∗ 8 = cache line size in bytes)","","","","","","","","","","","","System Coherency Line Size (Bits 11-00)","Number of configurable Address Ranges for filtering (Bits …","Conversion factor from reported IA32_QM_CTR value to …","Bit width of general-purpose, performance monitoring …","Specifies the ratio of the compute unit power accumulator …","Macro which queries cpuid directly.","L1 data cache associativity.","L1 data cache line size in bytes.","L1 data cache lines per tag.","L1 data cache size in KB","","An unsigned integer which is the denominator of the …","Description of the cache (from Intel Manual)","Data TLB associativity for 2-MB and 4-MB pages.","L2 Data TLB associativity for 2-MB and 4-MB pages.","Data TLB number of entries for 2-MB and 4-MB pages.","L2 Data TLB number of entries for 2-MB and 4-MB pages.","Data TLB associativity for 4K pages.","L2 Data TLB associativity for 4K pages.","Data TLB number of entries for 4K pages.","L2 Data TLB number of entries for 4K pages.","Number of Interrupt Thresholds in Digital Thermal Sensor","Return value EAX register","Return value EBX register","Length of EBX bit vector to enumerate architectural …","Return value ECX register","Return value EDX register","","","","","","","","","","","","","","","","","","","","","","","","Version Information: Extended Family","Version Information: Extended Model","Extended Processor Signature.","Enumeration of Monitor-Mwait extensions (beyond EAX and …","","Number of fixed-function performance counters (if Version …","Bit width of fixed-function performance counters (if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Advanced Power Management Information (LEAF=0x8000_0007).","Query basic information about caches (LEAF=0x02).","Retrieve more elaborate information about caches …","Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR (address …","Query deterministic address translation feature …","Direct cache access info (LEAF=0x09).","Find out about more features supported by this CPU …","Extended Processor and Processor Feature Identifiers …","Information for saving/restoring extended register state …","Information about topology (LEAF=0x0B).","Query a set of features that are available on this CPU …","Returns information provided by the hypervisor, if running …","L1 Instruction Cache Information (LEAF=0x8000_0005)","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","Informations about memory encryption support …","Information about how monitor/mwait works on this CPU …","Info about performance monitoring (LEAF=0x0A).","Retrieve processor brand string (LEAF=0x8000_000{2..4}).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Retrieve serial number of processor (LEAF=0x03).","Intel Processor Trace Enumeration Information (LEAF=0x14).","","Quality of service enforcement information (LEAF=0x10).","Quality of service monitoring information (LEAF=0x0F).","Information about secure enclave support (LEAF=0x12).","","Contains SoC vendor specific information (LEAF=0x17).","","This function provides information about the SVM features …","Query information about thermal and power management …","Time Stamp Counter/Core Crystal Clock Information …","","","Return information about the vendor (LEAF=0x00).","Guest Physical Address Bits","Has 100 MHz multiplier Control?","1GB page size entries supported by this structure","Is there support for 1GiB pages.","2MB page size entries supported by this structure","3DNow extensions.","4K page size entries supported by this structure","4MB page size entries supported by this structure","Check support for 64-bit mode.","SEV guest execution only allowed from a 64-bit host if set.","Thermal Monitor and Software Controlled Clock Facilities. …","Breakpoint Addressing masking extended to bit 31.","Supports ADX.","A value of 1 indicates that the processor supports the …","LOCK MOV CR0 means MOV CR8. See “MOV(CRn)” in APM3.","Alternate Injection supported if set.","3DNow AMD extensions.","AnyThread deprecation","APIC On-Chip. The processor contains an Advanced …","ARAT. APIC-Timer-always-running feature is supported if …","Support for the AMD advanced virtual interrupt controller …","A value of 1 indicates the processor supports the AVX …","AVX2","AVX512_IFMA","AVX512BW","AVX512CD","Supports AVX512DQ.","AVX512ER","Supports AVX512F.","AVX512PF","AVX512VL","BMI1","BMI2","CLZERO instruction supported if set.","CLFLUSH Instruction. CLFLUSH Instruction is supported.","Supports CLFLUSHOPT.","CLWB","Conditional Move Instructions. The conditional move …","Check support legacy cmp.","CMPXCHG16B Available. A value of 1 indicates that the …","CMPXCHG8B Instruction. The compare-and-exchange 8 bytes …","L1 Context ID. A value of 1 indicates the L1 data cache …","Is Code and Data Prioritization Technology supported?","Complex Cache Indexing (Bit 2) False: Direct mapped cache. …","If true, Indicates support of Configurable PSB and …","Has Core performance boost?","CPL Qualified Debug Store. A value of 1 indicates the …","Data access breakpoint extension.","A value of 1 indicates the processor supports the ability …","Debugging Extensions. Support for I/O breakpoints, …","Full debug state swap supported for SEV-ES guests.","Indicates support for the decode assists if set.","Debug Store. The processor supports the ability to write …","64-bit DS Area. A value of 1 indicates the processor …","Digital temperature sensor is supported if set.","ECMD. Clock modulation duty cycle extension is supported …","Enhanced Intel SpeedStep® technology. A value of 1 …","Supports ENCLS instruction leaves ETRACKC, ERDINFO, ELDBC, …","Supports ENCLV instruction leaves EINCVIRTCHILD, …","The processor supports performance-energy bias preference …","Is there support for execute disable bit.","Extended APIC space.","A value of 1 indicates that processor supports 16-bit …","FXSAVE and FXRSTOR instruction optimizations.","FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87 …","Indicates support for processor feedback interface.","Flexible HWP is supported if set.","Indicates that TLB flush events, including CR3 writes and …","A value of 1 indicates the processor supports FMA …","Four-operand FMA instruction support.","Floating Point Unit On-Chip. The processor contains an x87 …","Deprecates FPU CS and FPU DS values if 1.","Frequency ID control.","FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if …","FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR …","GIF – virtualized global interrupt flag if set.","Guest Mode Execution Trap supported if set.","HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1, …","HLE","When host <code>CR4.MCE=1</code> and guest <code>CR4.MCE=0</code>, machine check …","Max APIC IDs reserved field is Valid. A value of 0 for HTT …","Hardware Coordination Feedback Capability","Hardware cache coherency across encryption domains …","Has Hardware P-state control?","Has Hardware assert supported?","HWP. HWP base registers (IA32_PM_ENABLE[bit 0], …","HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is …","HWP Capabilities. Highest Performance change is supported …","HWP Energy Performance Preference. IA32_HWP_REQUEST[bits …","Fast access mode for the IA32_HWP_REQUEST MSR is supported …","HWP Notification. IA32_HWP_INTERRUPT MSR is supported if …","HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is …","HWP PECI override is supported if set.","A value of 1 indicates the indicates the presence of a …","Instruction based sampling.","Ignoring Idle Logical Processor HWP request is supported …","Instruction Retired Counter MSR available if set.","WBINVD/WBNOINVD are interruptible if set.","Is Invariant TSC available?","INVLPGB and TLBSYNC instruction supported if set.","INVLPGB support for invalidating guest nested translations …","INVPCID. If 1, supports INVPCID instruction for system …","If true, Indicates support of IP Filtering, TraceStop …","Supports L2 Cache Allocation.","Supports L3 Cache Allocation.","Supports L3 Cache Intel RDT Monitoring.","Is LAHF/SAHF available in 64-bit mode?","Indicates support for LBR Virtualization.","Reports whether the response of the delay values is linear.","If true, Generated packets which contain IP payloads have …","Supports local bandwidth monitoring.","Lightweight profiling support","Is LZCNT available?","Machine Check Architecture. A value of 1 indicates the …","Is MCA overflow recovery available?","Machine Check Exception. Exception 18 is defined for …","MCOMMIT instruction supported if set.","Supports Memory Bandwidth Allocation.","Misaligned SSE mode. See “Misaligned Access Support …","Intel MMX Technology. The processor supports the Intel MMX …","AMD extensions to MMX instructions.","MONITOR/MWAIT. A value of 1 indicates the processor …","Support for MWAITX and MONITORX instructions.","A value of 1 indicates that the processor supports MOVBE …","MPX. Supports Intel Memory Protection Extensions if 1.","Model Specific Registers RDMSR and WRMSR Instructions. The …","If true, Indicates support of MTC timing packet and …","Memory Type Range Registers. MTRRs are supported. The …","NB performance counter extensions support.","Nested paging supported if set.","Indicates support for NRIP save on #VMEXIT if set.","Supports occupancy monitoring.","OS has set CR4.PKE to enable protection keys (and the …","Indicates OS-visible workaround support","A value of 1 indicates that the OS has enabled …","Physical Address Extension. Physical addresses greater …","The Page Flush MSR is available if set.","Page Attribute Table. Page Attribute Table is supported. …","Indicates support for the pause intercept filter if set.","Indicates support for the PAUSE filter cycle count …","Pending Break Enable. The processor supports the use of …","Process-context identifiers. A value of 1 indicates that …","PCLMULQDQ. A value of 1 indicates the processor supports …","Perfmon and Debug Capability: A value of 1 indicates the …","Processor performance counter extensions support.","Support for L3 performance counter extension.","Performance time-stamp counter.","Page Global Bit. The global bit is supported in …","Supports protection keys for user-mode pages.","PLN. Power limit notification controls are supported if …","A value of 1 indicates that the processor supports the …","Support of Power Event Trace. Writes can set IA32_RTIT_CTL…","Has Processor power reporting interface?","Is PREFETCHW available?","Has PREFETCHWT1 (Intel® Xeon Phi™ only).","Disallowing IBS use by the host supported if set.","Supports Intel Processor Trace.","Page Size Extension. Large pages of size 4 MByte are …","36-Bit Page Size Extension. 4-MByte pages addressing …","Processor Serial Number. The processor supports the 96-bit …","PTM. Package thermal management is supported if set.","Indicates support of PTWRITE. Writes can set IA32_RTIT_CTL…","RDPID and IA32_TSC_AUX are available.","RDPRU instruction supported if set.","A value of 1 indicates that processor supports RDRAND …","Supports RDSEED.","Supports Intel Resource Director Technology (RDT) …","Supports Intel Resource Director Technology (RDT) …","Check support for rdtscp instruction.","Supports Enhanced REP MOVSB/STOSB if 1.","FP Error Pointers Restored by XRSTOR if set.","Restricted Injection supported if set.","Has Read-only effective frequency interface?","If true, Indicates that IA32_RTIT_CTL.CR3Filter can be set …","RTM","Secure Encrypted Virtualization is supported if set.","SEV Encrypted State is supported if set.","SEV Secure Nested Paging supported if set.","Supports Intel® Software Guard Extensions (Intel® SGX …","Has SGX1 support.","Has SGX2 support.","Supports SGX Launch Configuration.","Supports SHA Instructions.","If true, Indicates support of Single-Range Output scheme.","SKINIT and STGI are supported.","SMAP. Supports Supervisor-Mode Access Prevention (and the …","Secure Memory Encryption is supported if set.","SMEP. Supports Supervisor-Mode Execution Prevention if 1.","Safer Mode Extensions. A value of 1 indicates that the …","SPEC_CTRL virtualization supported if set.","Self Snoop. The processor supports the management of …","SSE. The processor supports the SSE extensions.","SSE2. The processor supports the SSE2 extensions.","Streaming SIMD Extensions 3 (SSE3). A value of 1 indicates …","A value of 1 indicates that the processor supports SSE4.1.","A value of 1 indicates that the processor supports SSE4.2.","XTRQ, INSERTQ, MOVNTSS, and MOVNTSD instruction support.","SVM supervisor shadow stack restrictions if set.","A value of 1 indicates the presence of the Supplemental …","Has Software uncorrectable error containment and recovery …","Secure virtual machine supported.","Indicates support for SVM-Lock if set.","Are fast system calls available.","SYSENTER and SYSEXIT Instructions. The SYSENTER and …","Trailing bit manipulation instruction support.","Has THERMTRIP?","Support for INVLPGB/TLBSYNC hypervisor enable in VMCB and …","Thermal Monitor. The processor implements the thermal …","Hardware thermal control (HTC)?","Thermal Monitor 2. A value of 1 indicates whether the …","If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = …","If true, ToPA tables can hold any number of output …","Topology extensions support.","Supports total bandwidth monitoring.","If true, Indicates support of output to Trace Transport …","Is Temperature Sensor available?","Time Stamp Counter. The RDTSC instruction is supported, …","IA32_TSC_ADJUST MSR is supported if 1.","A value of 1 indicates that the processors local APIC …","Indicates support for MSR TSC ratio (MSR <code>0xC000_0104</code>) if …","Intel Turbo Boost Technology Available (see description of …","Intel® Turbo Boost Max Technology 3.0 available.","Supports user-mode instruction prevention if 1.","EFER.LMSLE is unsupported if set.","Indicates support for VMCB clean bits if set.","Virtual 8086 Mode Enhancements. Virtual 8086 mode …","VM Permission Levels supported if set.","VMSAVE and VMLOAD virtualization supported if set.","Virtual Machine Extensions. A value of 1 indicates that …","Voltage ID control.","Virtual Transparent Encryption supported if set.","WBNOINVD instruction supported if set.","Watchdog timer support.","A value of 1 indicates that the processor supports x2APIC …","Supports XGETBV with ECX = 1 if set.","Extended operation support.","A value of 1 indicates that the processor supports the …","Supports XSAVEC and the compacted form of XRSTOR if set.","CPU has xsaveopt feature.","Supports XSAVES/XRSTORS and IA32_XSS if set.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Support for HDC in IA32_XSS.","Support for PT in IA32_XSS.","L1 instruction cache associativity.","L1 instruction cache line size in bytes.","L1 instruction cache lines per tag.","L1 instruction cache size in KB","Returns the identity of the <code>Hypervisor</code>.","Initial APIC ID","Supports treating interrupts as break-event for MWAIT, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maximum page count for INVLPGB instruction.","Branch instruction retired event not available if 1.","Branch mispredict retired event not available if 1.","Last-level cache reference event not available if 1.","Returns true when the compacted format of an XSAVE area is …","Core cycle event not available if 1.","Fully associative structure","Fully Associative cache","True if the bit n (corresponding to the sub-leaf index) is …","True if bit n is supported in XCR0.","Cache Inclusiveness (Bit 1) False: Cache is not inclusive …","Instruction retired event not available if 1.","Last-level cache misses event not available if 1.","Reference cycles event not available if 1.","Self Initializing cache level (does not need SW …","Write-Back Invalidate/Invalidate (Bit 0) False: …","Bit-granular map of isolation/contention of allocation …","Bit-granular map of isolation/contention of allocation …","Iterator over extended state enumeration levels &gt;= 2.","Iterator over SGX sub-leafs.","Instruction TLB associativity for 2-MB and 4-MB pages.","L2 Instruction TLB associativity for 2-MB and 4-MB pages.","Instruction TLB number of entries for 2-MB and 4-MB pages.","L2 Instruction TLB number of entries for 2-MB and 4-MB …","Instruction TLB associativity for 4K pages.","L2 Instruction TLB associativity for 4K pages.","Instruction TLB number of entries for 4K pages.","L2 Instruction TLB number of entries for 4K pages.","L2 Cache Allocation Information.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Cache size in KB.","L3 Cache Allocation Information.","L3 Cache Monitoring.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Specifies the L3 cache size range","Largest monitor-line size in bytes (default is processor’…","Cache Level (starts at 1)","Level number.","","Linear Address Bits","","The value of MAWAU used by the BNDLDX and BNDSTX …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for processor cores in …","The maximum supported enclave size in 64-bit mode is …","The maximum supported enclave size in non-64-bit mode is …","Number of encrypted guests supported simultaneouslys","Reports the maximum MBA throttling value supported for the …","Maximum number of addressable IDs for logical processors …","The maximum ECX value recognized by RDPRU.","The size of the <code>apic_id_size</code> field determines the maximum …","Maximum range (zero-based) of RMID of L3.","Memory Bandwidth Allocation Information.","Minimum ASID value for an SEV enabled, SEV-ES disabled …","Bit vector of supported extended SGX features.","","Uses Rust’s <code>cpuid</code> function from the <code>arch</code> module.","","","","","","","","","","","","","","","","","","","","Return new CpuId struct.","Iterate over all cache information.","Iterate over all cache info subleafs for this CPU.","","","","Iterate over each sub-leaf with an address translation …","Iterate over all SoC vendor specific attributes.","An unsigned integer which is the nominal frequency of the …","Number as retrieved from cpuid","Number of physical threads.","Number of general-purpose performance monitoring counter …","An unsigned integer which is the numerator of the …","The offset in bytes of this extended state components save …","Partitioning (0: Soft partitioning between the logical …","Performance time-stamp counter size (in bits).","Physical Address Bits","Physical Address bit reduction","The physical address of the base of the EPC section","Physical Line partitions (Bits 21-12)","Returns package type on AMD.","Processor Base Frequency (in MHz).","Maximum Frequency (in MHz).","Number of logical processors at this level type. The …","Returns which register this specific extended subleaf …","SVM revision number.","Maximum range (zero-based) of RMID within this physical …","Reports the valid bits of SECS.ATTRIBUTES[127:0] that …","Combination of bits 00-31 and 32-63 of 96 bit processor …","96 bit processor serial number.","Bits 00-31 of 96 bit processor serial number.","Bits 32-63 of 96 bit processor serial number.","Bits 64-96 of 96 bit processor serial number.","Number of Sets.","Number of Sets (Bits 31-00)","Number of bits to shift right on x2APIC ID to get a unique …","The size in bytes (from the offset specified in EBX) of …","Size of the corresponding EPC section within the Processor …","Smallest monitor-line size in bytes (default is processor…","Version Information: Stepping ID","","Number of available address space identifiers (ASID).","Number of C0 sub C-states supported using MWAIT (Bits 03 - …","Number of C1 sub C-states supported using MWAIT (Bits 07 - …","Number of C2 sub C-states supported using MWAIT (Bits 11 - …","Number of C3 sub C-states supported using MWAIT (Bits 15 - …","Number of C4 sub C-states supported using MWAIT (Bits 19 - …","Number of C5 sub C-states supported using MWAIT (Bits 23 - …","Number of C6 sub C-states supported using MWAIT (Bits 27 - …","Number of C7 sub C-states supported using MWAIT (Bits 31 - …","Bitmap of supported Cycle Threshold value encodings (Bits …","Bitmap of supported MTC period encodings (Bit 31:16).","Bitmap of supported Configurable PSB frequency encodings …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","“TSC frequency” = “core crystal clock frequency” * …","TSC frequency in kHz.","Cache type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version ID of architectural performance monitoring. (Bits …","Ways of associativity.","Return new CpuId struct with custom reader function.","x2APIC ID the current logical processor. (Bits 31-00)","Support for AVX512 OPMASK in XCR0.","Support for AVX512 ZMM Hi16 in XCR0.","Support for AVX512 ZMM Hi256 XCR0.","Support for AVX 256-bit in XCR0.","Support for legacy x87 in XCR0.","Support for MPX BNDCSR in XCR0.","Support for MPX BNDREGS in XCR0.","Support for PKRU in XCR0.","Support for SSE 128-bit in XCR0.","Maximum size (bytes, from the beginning of the …","Maximum size (bytes, from the beginning of the …","The size in bytes of the XSAVE area containing all states …","","","","","","",""],"i":[1,0,0,2,2,2,2,1,0,3,0,0,0,0,0,0,4,0,0,3,0,0,0,5,6,0,7,7,8,0,0,0,0,0,0,0,0,0,0,0,7,3,2,1,0,0,9,5,6,4,1,0,0,0,0,0,0,0,0,2,2,7,5,6,0,2,3,0,0,0,0,0,2,1,1,0,0,5,4,3,0,0,0,0,0,0,0,3,0,0,0,5,6,7,2,6,1,1,0,9,1,10,11,12,13,14,15,14,15,16,17,17,18,13,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,11,35,36,7,37,12,38,39,40,10,14,41,3,42,43,44,16,5,45,46,47,4,48,2,9,49,50,51,8,52,53,6,54,15,1,18,13,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,11,35,36,7,37,12,38,39,40,10,14,41,3,42,43,44,16,5,45,46,47,4,48,2,9,49,50,51,8,52,53,6,54,15,1,18,17,32,38,33,33,16,28,49,17,40,10,41,3,42,44,16,46,48,51,53,16,30,26,22,37,0,35,35,35,35,40,31,42,35,36,35,36,35,36,35,36,19,10,10,22,10,10,35,36,7,37,12,38,39,10,14,41,43,16,5,45,47,4,2,9,49,50,6,15,1,17,17,18,45,17,22,22,18,13,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,11,35,36,7,7,37,12,38,39,40,10,14,14,41,3,42,42,43,44,16,5,5,45,46,47,4,4,48,2,2,9,9,49,50,51,8,52,53,6,6,54,15,15,1,18,13,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,11,35,36,7,37,12,38,39,40,10,14,41,3,42,43,44,16,5,45,46,47,4,48,2,2,9,49,50,51,8,52,53,6,54,15,1,40,40,40,21,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,34,40,40,40,34,40,34,40,40,40,34,34,40,12,37,33,18,33,18,33,33,18,38,17,18,20,17,18,38,18,22,17,19,39,17,20,20,20,20,20,20,20,20,20,20,20,12,17,20,20,17,18,17,17,17,28,16,30,37,17,18,17,17,38,39,17,17,19,19,17,29,29,19,18,18,17,18,20,37,19,39,17,18,17,20,37,20,17,39,39,19,20,39,17,19,38,37,37,19,19,19,19,19,19,19,19,17,18,19,12,12,37,12,12,20,30,27,27,25,18,39,50,30,26,18,18,17,37,17,12,27,18,17,18,17,18,17,20,17,30,17,18,39,39,26,20,18,17,17,38,17,39,39,17,17,17,17,18,18,18,17,20,19,17,30,37,18,20,38,20,17,17,17,19,30,20,12,17,20,20,20,18,20,12,38,37,30,20,38,38,38,20,29,29,20,20,30,18,20,38,20,17,39,17,17,17,17,17,17,18,39,17,37,18,39,18,17,18,37,39,17,37,17,30,30,18,26,30,37,17,20,17,39,19,19,20,12,39,17,38,39,17,37,38,12,18,17,23,18,17,23,23,23,28,49,50,23,23,35,35,35,35,11,17,45,18,13,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,11,35,36,7,37,12,38,39,40,10,14,41,3,42,43,44,16,5,45,46,47,4,48,2,9,49,50,51,8,52,53,6,54,15,1,41,44,46,48,51,53,54,12,22,22,22,24,22,33,16,24,24,16,22,22,22,16,16,28,49,23,29,35,36,35,36,35,36,35,36,27,36,36,36,36,27,25,36,36,36,36,45,16,47,47,12,24,20,33,16,16,29,29,38,50,17,12,12,26,27,38,29,17,0,35,36,7,37,12,38,39,10,14,41,43,16,45,47,2,49,50,15,1,40,41,44,46,48,51,53,54,31,42,12,22,31,24,33,12,12,38,52,16,18,32,32,47,24,39,25,29,43,43,43,43,43,33,16,47,24,52,45,17,24,39,45,45,45,45,45,45,45,45,30,30,30,18,13,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,11,35,36,7,37,12,38,39,40,10,14,41,3,42,43,44,16,5,45,46,47,4,48,2,9,49,50,51,8,52,53,6,54,15,1,18,13,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,11,35,36,7,37,12,38,39,40,10,14,41,3,42,43,44,16,5,45,46,47,4,48,2,9,49,50,51,8,52,53,6,54,15,1,31,11,42,18,13,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,11,35,36,7,37,12,38,39,40,10,14,41,3,42,43,44,16,5,45,46,47,4,48,2,9,49,50,51,8,52,53,6,54,15,1,22,33,40,47,23,23,23,23,23,23,23,23,23,23,23,23,55,56,57,57,57,58,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["option",4,[["u32",15]]]],[[],["u8",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["usize",15]],[[],["u8",15]],[[],["uu32",15]],[[],["u8",15]],[[],["u16",15]],[[],["u8",15]],[[],["u8",15]],[[],["dattype",4]],[[],["cachetype",4]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["cpuid",3]],[[],["cpuidresult",3]],[[],["cacheinfoiter",3]],[[],["cacheinfotype",4]],[[],["cacheinfo",3]],[[],["cacheparametersiter",3]],[[],["cacheparameter",3]],[[],["extendedtopologyiter",3]],[[],["extendedstateiter",3]],[[],["sgxsectioniter",3]],[[],["datiter",3]],[[],["usize",15]],[[],["u8",15]],[[],["u32",15]],[[],["u8",15]],[[],["u32",15]],null,[[],["associativity",4]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["cpuid",3]],[[],["u32",15]],[[],["str",15]],[[],["associativity",4]],[[],["associativity",4]],[[],["u8",15]],[[],["u16",15]],[[],["associativity",4]],[[],["associativity",4]],[[],["u8",15]],[[],["u16",15]],[[],["u8",15]],null,null,[[],["u8",15]],null,null,[[["l1cachetlbinfo",3]],["bool",15]],[[["l2and3cachetlbinfo",3]],["bool",15]],[[["associativity",4]],["bool",15]],[[["apminfo",3]],["bool",15]],[[["processorcapacityandfeatureinfo",3]],["bool",15]],[[["memoryencryptioninfo",3]],["bool",15]],[[["svmfeatures",3]],["bool",15]],[[["cpuidresult",3]],["bool",15]],[[["vendorinfo",3]],["bool",15]],[[["cacheinfoiter",3]],["bool",15]],[[["processorserial",3]],["bool",15]],[[["cacheparameter",3]],["bool",15]],[[["cachetype",4]],["bool",15]],[[["monitormwaitinfo",3]],["bool",15]],[[["extendedtopologylevel",3]],["bool",15]],[[["topologytype",4]],["bool",15]],[[["extendedregistertype",4]],["bool",15]],[[["extendedregisterstatelocation",4]],["bool",15]],[[["l2catinfo",3]],["bool",15]],[[["membwallocationinfo",3]],["bool",15]],[[["dattype",4]],["bool",15]],[[["socvendorbrand",3]],["bool",15]],[[["hypervisor",4]],["bool",15]],[[],["u8",15]],[[],["u8",15]],[[],["u32",15]],[[],["bool",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["extendedregistertype",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4,[["apminfo",3]]]],[[],["option",4,[["cacheinfoiter",3]]]],[[],["option",4,[["cacheparametersiter",3]]]],[[],["u32",15]],[[],["option",4,[["datiter",3]]]],[[],["option",4,[["directcacheaccessinfo",3]]]],[[],["option",4,[["extendedfeatures",3]]]],[[],["option",4,[["extendedprocessorfeatureidentifiers",3]]]],[[],["option",4,[["extendedstateinfo",3]]]],[[],["option",4,[["extendedtopologyiter",3]]]],[[],["option",4,[["featureinfo",3]]]],[[],["option",4,[["hypervisorinfo",3]]]],[[],["option",4,[["l1cachetlbinfo",3]]]],[[],["option",4,[["l2and3cachetlbinfo",3]]]],[[],["option",4,[["memoryencryptioninfo",3]]]],[[],["option",4,[["monitormwaitinfo",3]]]],[[],["option",4,[["performancemonitoringinfo",3]]]],[[],["option",4,[["processorbrandstring",3]]]],[[],["option",4,[["processorcapacityandfeatureinfo",3]]]],[[],["option",4,[["processorfrequencyinfo",3]]]],[[],["option",4,[["processorserial",3]]]],[[],["option",4,[["processortraceinfo",3]]]],[[],["u32",15]],[[],["option",4,[["rdtallocationinfo",3]]]],[[],["option",4,[["rdtmonitoringinfo",3]]]],[[],["option",4,[["sgxinfo",3]]]],[[],["u16",15]],[[],["option",4,[["socvendorinfo",3]]]],[[],["u32",15]],[[],["option",4,[["svmfeatures",3]]]],[[],["option",4,[["thermalpowerinfo",3]]]],[[],["option",4,[["tscinfo",3]]]],[[],["option",4,[["socvendorattributesiter",3]]]],[[],["option",4,[["socvendorbrand",3]]]],[[],["option",4,[["vendorinfo",3]]]],[[],["u8",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["bool",15]],[[],["bool",15]],[[],["associativity",4]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["hypervisor",4]],[[],["u8",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u16",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["extendedstateiter",3]],[[],["sgxsectioniter",3]],[[],["associativity",4]],[[],["associativity",4]],[[],["u8",15]],[[],["u16",15]],[[],["associativity",4]],[[],["associativity",4]],[[],["u8",15]],[[],["u16",15]],[[],["option",4,[["l2catinfo",3]]]],[[],["associativity",4]],[[],["u8",15]],[[],["u8",15]],[[],["u16",15]],[[],["option",4,[["l3catinfo",3]]]],[[],["option",4,[["l3monitoringinfo",3]]]],[[],["associativity",4]],[[],["u8",15]],[[],["u8",15]],[[],["u16",15]],[[],["u16",15]],[[],["u8",15]],[[],["u8",15]],[[],["topologytype",4]],[[],["u8",15]],[[],["extendedregisterstatelocation",4]],[[],["u8",15]],[[],["u16",15]],[[],["usize",15]],[[],["usize",15]],[[],["u8",15]],[[],["u8",15]],[[],["u32",15]],[[],["u16",15]],[[],["u8",15]],[[],["u16",15]],[[],["usize",15]],[[],["u32",15]],[[],["option",4,[["membwallocationinfo",3]]]],[[],["u32",15]],[[],["u32",15]],[[],["u8",15]],null,[[["l1cachetlbinfo",3]],["bool",15]],[[["l2and3cachetlbinfo",3]],["bool",15]],[[["associativity",4]],["bool",15]],[[["apminfo",3]],["bool",15]],[[["processorcapacityandfeatureinfo",3]],["bool",15]],[[["memoryencryptioninfo",3]],["bool",15]],[[["svmfeatures",3]],["bool",15]],[[["cpuidresult",3]],["bool",15]],[[["vendorinfo",3]],["bool",15]],[[["cacheinfoiter",3]],["bool",15]],[[["processorserial",3]],["bool",15]],[[["cacheparameter",3]],["bool",15]],[[["monitormwaitinfo",3]],["bool",15]],[[["extendedtopologylevel",3]],["bool",15]],[[["extendedregistertype",4]],["bool",15]],[[["l2catinfo",3]],["bool",15]],[[["membwallocationinfo",3]],["bool",15]],[[["socvendorbrand",3]],["bool",15]],[[["hypervisor",4]],["bool",15]],[[]],[[],["option",4,[["cacheinfo",3]]]],[[],["option",4,[["cacheparameter",3]]]],[[],["option",4,[["extendedtopologylevel",3]]]],[[],["option",4,[["extendedstate",3]]]],[[],["option",4,[["sgxsectioninfo",4]]]],[[],["option",4,[["datinfo",3]]]],[[],["option",4,[["cpuidresult",3]]]],[[],["u32",15]],null,[[],["usize",15]],[[],["u8",15]],[[],["u32",15]],[[],["u32",15]],[[],["u8",15]],[[],["usize",15]],[[],["u8",15]],[[],["u8",15]],[[],["u64",15]],[[],["usize",15]],[[],["u32",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["extendedregistertype",4]],[[],["u8",15]],[[],["u32",15]],[[]],[[],["u64",15]],[[],["u128",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["usize",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[],["u16",15]],[[],["u8",15]],null,[[],["u32",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u32",15]]]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["u8",15]],[[],["u16",15]],[[]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],null,null,null,null,null,null,[[["u32",15],["u32",15]],["cpuidresult",3]]],"p":[[4,"Hypervisor"],[4,"ExtendedRegisterType"],[4,"CacheInfoType"],[4,"TopologyType"],[4,"CacheType"],[4,"DatType"],[4,"Associativity"],[4,"SgxSectionInfo"],[4,"ExtendedRegisterStateLocation"],[3,"CpuIdResult"],[3,"HypervisorInfo"],[3,"ProcessorCapacityAndFeatureInfo"],[3,"ProcessorBrandString"],[3,"VendorInfo"],[3,"SoCVendorBrand"],[3,"CacheParameter"],[3,"FeatureInfo"],[3,"ExtendedProcessorFeatureIdentifiers"],[3,"ThermalPowerInfo"],[3,"ExtendedFeatures"],[3,"DirectCacheAccessInfo"],[3,"PerformanceMonitoringInfo"],[3,"ExtendedStateInfo"],[3,"ExtendedState"],[3,"RdtMonitoringInfo"],[3,"L3MonitoringInfo"],[3,"RdtAllocationInfo"],[3,"L3CatInfo"],[3,"SgxInfo"],[3,"ProcessorTraceInfo"],[3,"TscInfo"],[3,"ProcessorFrequencyInfo"],[3,"DatInfo"],[3,"SoCVendorInfo"],[3,"L1CacheTlbInfo"],[3,"L2And3CacheTlbInfo"],[3,"ApmInfo"],[3,"MemoryEncryptionInfo"],[3,"SvmFeatures"],[3,"CpuId"],[3,"CacheInfoIter"],[3,"CacheInfo"],[3,"ProcessorSerial"],[3,"CacheParametersIter"],[3,"MonitorMwaitInfo"],[3,"ExtendedTopologyIter"],[3,"ExtendedTopologyLevel"],[3,"ExtendedStateIter"],[3,"L2CatInfo"],[3,"MemBwAllocationInfo"],[3,"SgxSectionIter"],[3,"EpcSection"],[3,"DatIter"],[3,"SoCVendorAttributesIter"],[13,"NWay"],[13,"Unknown"],[13,"Unknown"],[13,"Epc"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out of …","t":[4,3,8,11,11,11,11,14,11,11,11,11,11,11,11,5,11,11,11,10,11,11,11,11,11,11,11,11],"n":["Always","ScopeGuard","Strategy","borrow","borrow","borrow_mut","borrow_mut","defer","deref","deref_mut","drop","fmt","fmt","from","from","guard","into","into","into_inner","should_run","should_run","try_from","try_from","try_into","try_into","type_id","type_id","with_strategy"],"q":["scopeguard","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected value.","Controls in which cases the associated code should be run","","","","","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","","","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred closure …","","","“Defuse” the guard and extract the value without …","Return <code>true</code> if the guard’s associated code should run …","","","","","","","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through deref) …"],"i":[0,0,0,1,2,1,2,0,1,1,1,1,2,1,2,0,1,2,1,3,2,1,2,1,2,1,2,1],"f":[null,null,null,[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["scopeguard",3,[["always",4]]]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["scopeguard",3]]],"p":[[3,"ScopeGuard"],[4,"Always"],[8,"Strategy"]]},\
"x86":{"doc":"","t":[4,13,13,13,13,0,0,0,0,11,11,11,0,0,0,0,0,11,0,11,11,5,14,11,0,0,0,0,5,0,14,0,0,0,11,11,11,0,13,13,8,4,13,13,4,4,4,4,13,13,3,13,13,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,0,10,10,10,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,0,11,11,11,0,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,12,12,12,12,12,18,18,17,17,17,18,18,18,18,3,17,3,18,18,17,18,18,3,18,18,6,3,3,18,6,3,3,18,18,3,18,18,18,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,11,12,12,12,11,12,12,12,12,11,11,11,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,18,18,18,18,18,17,17,17,18,18,18,18,18,18,17,3,3,17,3,17,18,18,18,18,18,17,18,18,3,18,18,18,18,18,6,3,3,6,3,3,6,3,3,17,6,3,3,18,18,6,3,3,18,18,18,18,18,3,18,18,18,18,18,18,18,18,18,18,3,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,3,18,11,11,11,11,11,11,5,5,11,5,5,5,11,11,11,5,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,11,11,11,11,11,5,5,5,5,5,5,5,5,5,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,3,18,18,18,18,18,18,18,18,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,13,3,4,13,13,13,13,13,17,13,3,3,4,3,3,4,13,3,3,13,3,3,4,13,13,3,13,13,13,3,3,3,4,4,3,3,3,3,3,3,13,13,13,13,4,3,13,13,13,13,13,3,3,3,3,3,3,3,3,13,13,13,13,13,3,13,13,3,3,3,3,3,13,13,13,3,3,13,13,13,3,4,3,3,3,3,3,13,3,4,3,13,13,13,13,13,13,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,5,12,18,18,18,18,18,17,18,18,4,4,4,13,13,13,13,13,13,13,13,13,13,3,3,18,18,18,13,13,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,5,5,5,12,5,11,11,5,5,11,11,11,5,5,5,5,5,5,5,5,5,17,17,17,17,17,17,17,17,7,17,18,17,17,3,17,17,17,18,17,18,3,18,17,17,17,18,17,18,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,5,8,8,10,10,5,5,5,5,5,5,5,5,8,13,13,13,4,4,3,3,13,13,13,13,13,13,13,13,8,13,13,13,13,13,8,18,18,18,18,18,13,13,13,13,13,13,13,13,8,3,4,4,18,18,13,13,13,8,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,5,10,11,11,11,11,11,5,11,11,11,11,11,11,5,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,5,5,5,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5,5,5,6,4,13,13,11,11,11,11,11,11,11,11,0,0,0,0,0,18,17,17,18,18,18,18,18,17,17,18,18,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,17,17,18,18,17,17,17,17,17,17,17,17,17,17,17,17,17,18,17,17,17,18,3,3,18,18,18,18,18,18,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,17,17,18,18,18,17,17,18,18,17,17,17,17,17,18,17,17,17,17,3,3,18,18,18,18,18,18,18,18,18,17,17,17,18,3,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,17,17,17,17,18,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,17,17,17,18,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17],"n":["Ring","Ring0","Ring1","Ring2","Ring3","apic","bits16","bits32","bits64","borrow","borrow_mut","clone","controlregs","cpuid","current","debugregs","dtables","eq","fence","fmt","from","halt","int","into","io","irq","msr","random","rdpid","segmentation","syscall","task","time","tlb","try_from","try_into","type_id","vmx","AllExcludingSelf","AllIncludingSelf","ApicControl","ApicId","Assert","Deassert","DeliveryMode","DeliveryStatus","DestinationMode","DestinationShorthand","Edge","Fixed","Icr","Idle","Init","Level","Level","Logical","LowestPriority","Myself","NMI","NoShorthand","Physical","SMI","SendPending","StartUp","TriggerMode","X2Apic","XApic","_Reserved","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bsp","clone","eoi","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_x2apic","for_xapic","from","from","from","from","from","from","from","from","id","into","into","into","into","into","into","into","into","into","ioapic","ipi_init","ipi_init_deassert","ipi_startup","logical_id","lower","ne","ne","send_ipi","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsc_enable","tsc_set","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upper","version","x2apic","x2apic_logical_cluster_address","x2apic_logical_cluster_id","x2apic_logical_id","xapic","0","0","IoApic","borrow","borrow_mut","disable_all","enable","from","id","into","new","supported_interrupts","try_from","try_into","type_id","version","X2APIC","attach","borrow","borrow_mut","bsp","default","detach","eoi","fmt","from","id","into","ipi_init","ipi_init_deassert","ipi_startup","logical_id","new","send_ipi","send_self_ipi","try_from","try_into","tsc_enable","tsc_set","type_id","version","XAPIC","XAPIC_EOI","XAPIC_ESR","XAPIC_ICR0","XAPIC_ICR1","XAPIC_ID","XAPIC_IRR0","XAPIC_IRR1","XAPIC_IRR2","XAPIC_IRR3","XAPIC_IRR4","XAPIC_IRR5","XAPIC_IRR6","XAPIC_IRR7","XAPIC_ISR0","XAPIC_ISR1","XAPIC_ISR2","XAPIC_ISR3","XAPIC_ISR4","XAPIC_ISR5","XAPIC_ISR6","XAPIC_ISR7","XAPIC_LDR","XAPIC_LVT_CMCI","XAPIC_LVT_ERROR","XAPIC_LVT_LINT0","XAPIC_LVT_LINT1","XAPIC_LVT_PMI","XAPIC_LVT_THERMAL","XAPIC_LVT_TIMER","XAPIC_PPR","XAPIC_SVR","XAPIC_TIMER_CURRENT_COUNT","XAPIC_TIMER_DIV_CONF","XAPIC_TIMER_INIT_COUNT","XAPIC_TMR0","XAPIC_TMR1","XAPIC_TMR2","XAPIC_TMR3","XAPIC_TMR4","XAPIC_TMR5","XAPIC_TMR6","XAPIC_TMR7","XAPIC_TPR","XAPIC_VERSION","attach","borrow","borrow_mut","bsp","detach","eoi","fmt","from","id","into","ipi_init","ipi_init_deassert","ipi_startup","logical_id","new","send_ipi","try_from","try_into","tsc_enable","tsc_set","type_id","version","segmentation","eflags","paging","segmentation","task","EFlags","FLAGS_A1","FLAGS_AC","FLAGS_AF","FLAGS_CF","FLAGS_DF","FLAGS_ID","FLAGS_IF","FLAGS_IOPL0","FLAGS_IOPL1","FLAGS_IOPL2","FLAGS_IOPL3","FLAGS_NT","FLAGS_OF","FLAGS_PF","FLAGS_RF","FLAGS_SF","FLAGS_TF","FLAGS_VIF","FLAGS_VIP","FLAGS_VM","FLAGS_ZF","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clac","clone","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_priv","hash","insert","intersection","intersects","into","is_all","is_empty","ne","new","not","partial_cmp","remove","set","stac","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","0","0","0","0","0","A","A","BASE_PAGE_SHIFT","BASE_PAGE_SIZE","CACHE_LINE_SIZE","D","D","G","G","IOAddr","LARGE_PAGE_SIZE","LargePage","P","P","PAGE_SIZE_ENTRIES","PAT","PAT","PAddr","PCD","PCD","PD","PDEntry","PDFlags","PS","PT","PTEntry","PTFlags","PWT","PWT","Page","RW","RW","US","US","VAddr","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","address","address","align_down_to_base_page","align_down_to_base_page","align_down_to_base_page","align_down_to_large_page","align_down_to_large_page","align_down_to_large_page","align_up_to_base_page","align_up_to_base_page","align_up_to_base_page","align_up_to_large_page","align_up_to_large_page","align_up_to_large_page","all","all","as_mut_ptr","as_mut_ptr","as_ptr","as_ptr","as_u32","as_u32","as_u32","as_usize","as_usize","as_usize","base_page_offset","base_page_offset","base_page_offset","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","complement","complement","contains","contains","difference","difference","empty","empty","eq","eq","eq","eq","eq","extend","extend","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_u32","from_usize","hash","hash","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_accessed","is_accessed","is_aligned","is_aligned","is_aligned","is_all","is_all","is_base_page_aligned","is_base_page_aligned","is_base_page_aligned","is_dirty","is_dirty","is_empty","is_empty","is_global","is_global","is_large_page_aligned","is_large_page_aligned","is_large_page_aligned","is_page","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_write_through","is_page_write_through","is_pat","is_pat","is_present","is_present","is_user_mode_allowed","is_user_mode_allowed","is_writeable","is_writeable","is_zero","is_zero","is_zero","large_page_offset","large_page_offset","large_page_offset","ne","ne","ne","ne","ne","new","new","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pd_index","pt_index","rem","rem","rem","rem","rem","rem","rem","rem","rem","remove","remove","set","set","shr","shr","shr","shr","shr","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","zero","zero","zero","TaskStateSegment","borrow","borrow_mut","clone","cr3","cs","ds","eax","ebp","ebx","ecx","edi","edx","eflags","eip","es","esi","esp","esp0","esp1","esp2","fmt","from","fs","gs","into","iobp_offset","ldtr","link","new","ss","ss0","ss1","ss2","try_from","try_into","type_id","paging","registers","rflags","segmentation","sgx","syscall","task","vmx","0","0","0","0","0","0","0","0","A","A","A","A","A","BASE_PAGE_SHIFT","BASE_PAGE_SIZE","CACHE_LINE_SIZE","D","D","D","G","G","G","HUGE_PAGE_SIZE","HugePage","IOAddr","LARGE_PAGE_SIZE","LargePage","MAXPHYADDR","P","P","P","P","P","PAGE_SIZE_ENTRIES","PAT","PAT","PAddr","PCD","PCD","PCD","PCD","PCD","PD","PDEntry","PDFlags","PDPT","PDPTEntry","PDPTFlags","PML4","PML4Entry","PML4Flags","PML4_SLOT_SIZE","PML5","PML5Entry","PML5Flags","PS","PS","PT","PTEntry","PTFlags","PWT","PWT","PWT","PWT","PWT","Page","RW","RW","RW","RW","RW","US","US","US","US","US","VAddr","XD","XD","XD","XD","XD","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","address","address","address","address","address","align_down_to_base_page","align_down_to_base_page","align_down_to_base_page","align_down_to_huge_page","align_down_to_huge_page","align_down_to_huge_page","align_down_to_large_page","align_down_to_large_page","align_down_to_large_page","align_up_to_base_page","align_up_to_base_page","align_up_to_base_page","align_up_to_huge_page","align_up_to_huge_page","align_up_to_huge_page","align_up_to_large_page","align_up_to_large_page","align_up_to_large_page","all","all","all","all","all","as_mut_ptr","as_ptr","as_u64","as_u64","as_u64","as_usize","as_usize","as_usize","base_page_offset","base_page_offset","base_page_offset","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","from_u64","from_usize","hash","hash","hash","hash","hash","hash","hash","hash","huge_page_offset","huge_page_offset","huge_page_offset","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_accessed","is_accessed","is_accessed","is_accessed","is_accessed","is_aligned","is_aligned","is_aligned","is_all","is_all","is_all","is_all","is_all","is_base_page_aligned","is_base_page_aligned","is_base_page_aligned","is_dirty","is_dirty","is_empty","is_empty","is_empty","is_empty","is_empty","is_global","is_global","is_huge_page_aligned","is_huge_page_aligned","is_huge_page_aligned","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_large_page_aligned","is_large_page_aligned","is_large_page_aligned","is_page","is_page","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_write_through","is_page_write_through","is_page_write_through","is_page_write_through","is_page_write_through","is_pat","is_pat","is_present","is_present","is_present","is_present","is_present","is_user_mode_allowed","is_user_mode_allowed","is_user_mode_allowed","is_user_mode_allowed","is_user_mode_allowed","is_writeable","is_writeable","is_writeable","is_writeable","is_writeable","is_zero","is_zero","is_zero","large_page_offset","large_page_offset","large_page_offset","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","not","not","not","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pd_index","pdpt_index","pml4_index","pml5_index","pt_index","rem","rem","rem","rem","rem","rem","rem","rem","rem","remove","remove","remove","remove","remove","set","set","set","set","set","shr","shr","shr","shr","shr","split","split","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","zero","zero","zero","rbp","rip","rsp","FLAGS_A1","FLAGS_AC","FLAGS_AF","FLAGS_CF","FLAGS_DF","FLAGS_ID","FLAGS_IF","FLAGS_IOPL0","FLAGS_IOPL1","FLAGS_IOPL2","FLAGS_IOPL3","FLAGS_NT","FLAGS_OF","FLAGS_PF","FLAGS_RF","FLAGS_SF","FLAGS_TF","FLAGS_VIF","FLAGS_VIP","FLAGS_VM","FLAGS_ZF","RFlags","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_priv","from_raw","hash","insert","intersection","intersects","into","is_all","is_empty","ne","new","not","partial_cmp","read","remove","set","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","Descriptor64","NULL","borrow","borrow_mut","clone","default","fmt","from","fs_deref","gs_deref","into","load_cs","rdfsbase","rdgsbase","set_base_limit","set_ist","set_selector_offset","swapgs","try_from","try_into","type_id","wrfsbase","wrgsbase","encls_create","encls_eadd","encls_eaug","encls_eblock","encls_edbgrd","encls_edbgwr","encls_eextend","encls_einit","encls_eldb","encls_eldu","encls_emodpr","encls_emodt","encls_epa","encls_eremove","encls_etrack","encls_ewb","enclu_eaccept","enclu_eacceptcopy","enclu_eenter","enclu_eexit","enclu_egetkey","enclu_emodepe","enclu_ereport","enclu_eresume","syscall0","syscall1","syscall2","syscall3","syscall4","syscall5","syscall6","TaskStateSegment","borrow","borrow_mut","clone","default","fmt","from","into","iomap_base","ist","new","reserved","reserved2","reserved3","reserved4","rsp","set_ist","set_rsp","try_from","try_into","type_id","vmclear","vmlaunch","vmptrld","vmptrst","vmread","vmresume","vmwrite","vmxoff","vmxon","CR0_ALIGNMENT_MASK","CR0_CACHE_DISABLE","CR0_EMULATE_COPROCESSOR","CR0_ENABLE_PAGING","CR0_EXTENSION_TYPE","CR0_MONITOR_COPROCESSOR","CR0_NOT_WRITE_THROUGH","CR0_NUMERIC_ERROR","CR0_PROTECTED_MODE","CR0_TASK_SWITCHED","CR0_WRITE_PROTECT","CR4_DEBUGGING_EXTENSIONS","CR4_ENABLE_FSGSBASE","CR4_ENABLE_GLOBAL_PAGES","CR4_ENABLE_LA57","CR4_ENABLE_MACHINE_CHECK","CR4_ENABLE_OS_XSAVE","CR4_ENABLE_PAE","CR4_ENABLE_PCID","CR4_ENABLE_PPMC","CR4_ENABLE_PROTECTION_KEY","CR4_ENABLE_PSE","CR4_ENABLE_SMAP","CR4_ENABLE_SMEP","CR4_ENABLE_SMX","CR4_ENABLE_SSE","CR4_ENABLE_UMIP","CR4_ENABLE_VME","CR4_ENABLE_VMX","CR4_TIME_STAMP_DISABLE","CR4_UNMASKED_SSE","CR4_VIRTUAL_INTERRUPTS","Cr0","Cr4","XCR0_AVX_STATE","XCR0_BNDCSR_STATE","XCR0_BNDREG_STATE","XCR0_FPU_MMX_STATE","XCR0_HI16_ZMM_STATE","XCR0_OPMASK_STATE","XCR0_PKRU_STATE","XCR0_SSE_STATE","XCR0_ZMM_HI256_STATE","Xcr0","all","all","all","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","cmp","cmp","complement","complement","complement","contains","contains","contains","cr0","cr0_write","cr2","cr2_write","cr3","cr3_write","cr4","cr4_write","difference","difference","difference","empty","empty","empty","eq","eq","eq","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","hash","hash","hash","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","is_all","is_all","is_all","is_empty","is_empty","is_empty","ne","ne","ne","not","not","not","partial_cmp","partial_cmp","partial_cmp","remove","remove","remove","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","toggle","toggle","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","union","union","xcr0","xcr0_write","ACRN","ApmInfo","Associativity","Avx","Avx512Opmask","Avx512ZmmHi16","Avx512ZmmHi256","Bhyve","CACHE_INFO_TABLE","Cache","CacheInfo","CacheInfoIter","CacheInfoType","CacheParameter","CacheParametersIter","CacheType","Core","CpuId","CpuIdResult","DTLB","DatInfo","DatIter","DatType","Data","DataTLB","DirectCacheAccessInfo","DirectMapped","Disabled","Epc","EpcSection","ExtendedFeatures","ExtendedProcessorFeatureIdentifiers","ExtendedRegisterStateLocation","ExtendedRegisterType","ExtendedState","ExtendedStateInfo","ExtendedStateIter","ExtendedTopologyIter","ExtendedTopologyLevel","FeatureInfo","FullyAssociative","General","Hdc","HyperV","Hypervisor","HypervisorInfo","Ia32Xss","Instruction","InstructionTLB","Invalid","KVM","L1CacheTlbInfo","L2And3CacheTlbInfo","L2CatInfo","L3CatInfo","L3MonitoringInfo","MemBwAllocationInfo","MemoryEncryptionInfo","MonitorMwaitInfo","MpxBndcsr","MpxBndregs","NWay","Null","Null","PerformanceMonitoringInfo","Pkru","Prefetch","ProcessorBrandString","ProcessorCapacityAndFeatureInfo","ProcessorFrequencyInfo","ProcessorSerial","ProcessorTraceInfo","Pt","QEMU","QNX","RdtAllocationInfo","RdtMonitoringInfo","Reserved","SMT","STLB","SgxInfo","SgxSectionInfo","SgxSectionIter","SoCVendorAttributesIter","SoCVendorBrand","SoCVendorInfo","SvmFeatures","TLB","ThermalPowerInfo","TopologyType","TscInfo","Unified","UnifiedTLB","Unknown","Unknown","Unknown","Unknown","VMware","VendorInfo","Xcr0","Xen","all_zero","apic_frequency","apic_id_size","as_str","as_str","as_str","as_string","as_string","associativity","base_family_id","base_model_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brand_id","brand_index","bus_frequency","c_bit_position","cache_level","cache_type","cache_type","capacity_mask_length","capacity_mask_length","cflush_cache_line_size","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","coherency_line_size","configurable_address_ranges","conversion_factor","counter_bit_width","cpu_pwr_sample_time_ratio","cpuid","dcache_associativity","dcache_line_size","dcache_lines_per_tag","dcache_size","default","denominator","desc","dtlb_2m_4m_associativity","dtlb_2m_4m_associativity","dtlb_2m_4m_size","dtlb_2m_4m_size","dtlb_4k_associativity","dtlb_4k_associativity","dtlb_4k_size","dtlb_4k_size","dts_irq_threshold","eax","ebx","ebx_length","ecx","edx","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extended_family_id","extended_model_id","extended_signature","extensions_supported","family_id","fixed_function_counters","fixed_function_counters_bit_width","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_advanced_power_mgmt_info","get_cache_info","get_cache_parameters","get_dca_cap_value","get_deterministic_address_translation_info","get_direct_cache_access_info","get_extended_feature_info","get_extended_processor_and_feature_identifiers","get_extended_state_info","get_extended_topology_info","get_feature_info","get_hypervisor_info","get_l1_cache_and_tlb_info","get_l2_l3_cache_and_tlb_info","get_memory_encryption_info","get_monitor_mwait_info","get_performance_monitoring_info","get_processor_brand_string","get_processor_capacity_feature_info","get_processor_frequency_info","get_processor_serial","get_processor_trace_info","get_project_id","get_rdt_allocation_info","get_rdt_monitoring_info","get_sgx_info","get_soc_vendor_id","get_soc_vendor_info","get_stepping_id","get_svm_info","get_thermal_power_info","get_tsc_info","get_vendor_attributes","get_vendor_brand","get_vendor_info","guest_physical_address_bits","has_100mhz_steps","has_1gb_entries","has_1gib_pages","has_2mb_entries","has_3dnow","has_4k_entries","has_4mb_entries","has_64bit_mode","has_64bit_mode","has_acpi","has_addr_mask_extension","has_adx","has_aesni","has_alt_mov_cr8","has_alternate_injection","has_amd_3dnow_extensions","has_any_thread_deprecation","has_apic","has_arat","has_avic","has_avx","has_avx2","has_avx512_ifma","has_avx512bw","has_avx512cd","has_avx512dq","has_avx512er","has_avx512f","has_avx512pf","has_avx512vl","has_bmi1","has_bmi2","has_cl_zero","has_clflush","has_clflushopt","has_clwb","has_cmov","has_cmp_legacy","has_cmpxchg16b","has_cmpxchg8b","has_cnxtid","has_code_data_prioritization","has_complex_indexing","has_configurable_psb_and_cycle_accurate_mode","has_cpb","has_cpl","has_data_access_bkpt_extension","has_dca","has_de","has_debug_swap","has_decode_assists","has_ds","has_ds_area","has_dts","has_ecmd","has_eist","has_encls_leaves_etrackc_erdinfo_eldbc_elduc","has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","has_energy_bias_pref","has_execute_disable","has_ext_apic_space","has_f16c","has_fast_fxsave_fxstor","has_fdp","has_feedback_iface","has_flexible_hwp","has_flush_by_asid","has_fma","has_fma4","has_fpu","has_fpu_cs_ds_deprecated","has_freq_id_ctrl","has_fsgsbase","has_fxsave_fxstor","has_gif","has_gmet","has_hdc","has_hle","has_host_mce_override","has_htt","has_hw_coord_feedback","has_hw_enforced_cache_coh","has_hw_pstate","has_hwa","has_hwp","has_hwp_activity_window","has_hwp_capabilities","has_hwp_energy_performance_preference","has_hwp_fast_access_mode","has_hwp_notification","has_hwp_package_level_request","has_hwp_peci_override","has_hypervisor","has_ibs","has_ignore_idle_processor_hwp_request","has_inst_ret_cntr_msr","has_int_wbinvd","has_invariant_tsc","has_invlpgb","has_invlpgb_nested","has_invpcid","has_ip_tracestop_filtering","has_l2_cat","has_l3_cat","has_l3_monitoring","has_lahf_sahf","has_lbr_virtualization","has_linear_response_delay","has_lip_with_cs_base","has_local_bandwidth_monitoring","has_lwp","has_lzcnt","has_mca","has_mca_overflow_recovery","has_mce","has_mcommit","has_memory_bandwidth_allocation","has_misaligned_sse_mode","has_mmx","has_mmx_extensions","has_monitor_mwait","has_monitorx_mwaitx","has_movbe","has_mpx","has_msr","has_mtc_timing_packet_coefi_suppression","has_mtrr","has_nb_perf_cntr_extensions","has_nested_paging","has_nrip","has_occupancy_monitoring","has_ospke","has_osvw","has_oxsave","has_pae","has_page_flush_msr","has_pat","has_pause_filter","has_pause_filter_threshold","has_pbe","has_pcid","has_pclmulqdq","has_pdcm","has_perf_cntr_extensions","has_perf_cntr_llc_extensions","has_perf_tsc","has_pge","has_pku","has_pln","has_popcnt","has_power_event_trace","has_power_reporting_iface","has_prefetchw","has_prefetchwt1","has_prevent_host_ibs","has_processor_trace","has_pse","has_pse36","has_psn","has_ptm","has_ptwrite","has_rdpid","has_rdpru","has_rdrand","has_rdseed","has_rdta","has_rdtm","has_rdtscp","has_rep_movsb_stosb","has_restore_fp_error_ptrs","has_restricted_injection","has_ro_effective_freq_iface","has_rtit_cr3_match","has_rtm","has_sev","has_sev_es","has_sev_snp","has_sgx","has_sgx1","has_sgx2","has_sgx_lc","has_sha","has_single_range_output_scheme","has_skinit","has_smap","has_sme","has_smep","has_smx","has_spec_ctrl","has_ss","has_sse","has_sse2","has_sse3","has_sse41","has_sse42","has_sse4a","has_sss_check","has_ssse3","has_succor","has_svm","has_svm_lock","has_syscall_sysret","has_sysenter_sysexit","has_tbm","has_thermtrip","has_tlb_ctrl","has_tm","has_tm","has_tm2","has_topa","has_topa_maximum_entries","has_topology_extensions","has_total_bandwidth_monitoring","has_trace_transport_subsystem","has_ts","has_tsc","has_tsc_adjust_msr","has_tsc_deadline","has_tsc_rate_msr","has_turbo_boost","has_turbo_boost3","has_umip","has_unsupported_efer_lmsle","has_vmcb_clean_bits","has_vme","has_vmpl","has_vmsave_virtualization","has_vmx","has_volt_id_ctrl","has_vte","has_wbnoinvd","has_wdt","has_x2apic","has_xgetbv","has_xop","has_xsave","has_xsavec","has_xsaveopt","has_xsaves_xrstors","highest_cos","highest_cos","highest_cos","ia32_xss_supports_hdc","ia32_xss_supports_pt","icache_associativity","icache_line_size","icache_lines_per_tag","icache_size","identify","initial_local_apic_id","interrupts_as_break_event","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","invlpgb_max_pages","is_branch_inst_ret_ev_unavailable","is_branch_midpred_ev_unavailable","is_cache_ref_ev_unavailable","is_compacted_format","is_core_cyc_ev_unavailable","is_fully_associative","is_fully_associative","is_in_ia32_xss","is_in_xcr0","is_inclusive","is_inst_ret_ev_unavailable","is_ll_cache_miss_ev_unavailable","is_ref_cycle_ev_unavailable","is_self_initializing","is_write_back_invalidate","isolation_bitmap","isolation_bitmap","iter","iter","itlb_2m_4m_associativity","itlb_2m_4m_associativity","itlb_2m_4m_size","itlb_2m_4m_size","itlb_4k_associativity","itlb_4k_associativity","itlb_4k_size","itlb_4k_size","l2_cat","l2cache_associativity","l2cache_line_size","l2cache_lines_per_tag","l2cache_size","l3_cat","l3_monitoring","l3cache_associativity","l3cache_line_size","l3cache_lines_per_tag","l3cache_size","largest_monitor_line","level","level_number","level_type","linear_address_bits","location","mawau_value","max_addressable_ids","max_cores_for_cache","max_cores_for_package","max_enclave_size_64bit","max_enclave_size_non_64bit","max_encrypted_guests","max_hba_throttling","max_logical_processor_ids","max_rdpru_id","maximum_logical_processors","maximum_rmid_range","memory_bandwidth_allocation","min_sev_no_es_asid","miscselect","model_id","native_cpuid","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","next","next","next","next","next","next","next","nominal_frequency","num","num_phys_threads","number_of_counters","numerator","offset","partitioning","perf_tsc_size","physical_address_bits","physical_address_reduction","physical_base","physical_line_partitions","pkg_type","processor_base_frequency","processor_max_frequency","processors","register","revision","rmid_range","secs_attributes","serial","serial_all","serial_lower","serial_middle","serial_upper","sets","sets","shift_right_for_next_apic_id","size","size","smallest_monitor_line","stepping_id","subleaf","supported_asids","supported_c0_states","supported_c1_states","supported_c2_states","supported_c3_states","supported_c4_states","supported_c5_states","supported_c6_states","supported_c7_states","supported_cycle_threshold_value_encodings","supported_mtc_period_encodings","supported_psb_frequency_encodings","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsc_frequency","tsc_frequency","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version_id","ways","with_cpuid_fn","x2apic_id","xcr0_supports_avx512_opmask","xcr0_supports_avx512_zmm_hi16","xcr0_supports_avx512_zmm_hi256","xcr0_supports_avx_256","xcr0_supports_legacy_x87","xcr0_supports_mpx_bndcsr","xcr0_supports_mpx_bndregs","xcr0_supports_pkru","xcr0_supports_sse_128","xsave_area_size_enabled_features","xsave_area_size_supported_features","xsave_size","0","0","0","1","2","0","cpuid_count","0","B0","B1","B2","B3","BD","BREAKPOINT_REGS","BS","BT","BreakCondition","BreakSize","Breakpoint","Bytes1","Bytes2","Bytes4","Bytes8","DataReadsWrites","DataWrites","Dr0","Dr1","Dr2","Dr3","Dr6","Dr7","EMPTY","GD_BIT","GE_BIT","Instructions","IoReadsWrites","LE_BIT","RTM","RTM_BIT","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","cmp","complement","configure","configure_bp","contains","default","difference","disable_bp","disable_global","disable_local","dr","dr0","dr0_write","dr1","dr1_write","dr2","dr2_write","dr3","dr3_write","dr6","dr6_write","dr7","dr7_write","empty","enable_bp","enable_exact_global_bp","enable_exact_local_bp","enable_general_detect","enable_global","enable_local","enable_rtm","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","into","into","into","is_all","is_empty","ne","ne","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","write","DescriptorTablePointer","base","borrow","borrow_mut","default","fmt","from","into","ldtr","lgdt","lidt","limit","load_ldtr","new","new_from_slice","sgdt","sidt","try_from","try_into","type_id","lfence","mfence","sfence","inb","inl","inw","outb","outl","outw","ALIGNMENT_CHECK_VECTOR","BOUND_RANGE_EXCEEDED_VECTOR","BREAKPOINT_VECTOR","COPROCESSOR_SEGMENT_OVERRUN_VECTOR","DEBUG_VECTOR","DEVICE_NOT_AVAILABLE_VECTOR","DIVIDE_ERROR_VECTOR","DOUBLE_FAULT_VECTOR","EXCEPTIONS","GENERAL_PROTECTION_FAULT_VECTOR","ID","INVALID_OPCODE_VECTOR","INVALID_TSS_VECTOR","InterruptDescription","MACHINE_CHECK_VECTOR","NONMASKABLE_INTERRUPT_VECTOR","OVERFLOW_VECTOR","P","PAGE_FAULT_VECTOR","PK","PageFaultError","RSVD","SEGMENT_NOT_PRESENT_VECTOR","SIMD_FLOATING_POINT_VECTOR","STACK_SEGEMENT_FAULT_VECTOR","US","VIRTUALIZATION_VECTOR","WR","X87_FPU_VECTOR","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","cmp","complement","contains","description","difference","disable","empty","enable","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","irqtype","is_all","is_empty","mnemonic","ne","not","partial_cmp","remove","set","source","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","vector","APIC_BASE","BIOS_UPDT_TRIG","DEBUGCTLMSR","EBL_CR_POWERON","IA32_APERF","IA32_APIC_BASE","IA32_A_PMC0","IA32_A_PMC1","IA32_A_PMC2","IA32_A_PMC3","IA32_A_PMC4","IA32_A_PMC5","IA32_A_PMC6","IA32_A_PMC7","IA32_BIOS_SIGN_ID","IA32_BIOS_UPDT_TRIG","IA32_CLOCK_MODULATION","IA32_CPU_DCA_CAP","IA32_CSTAR","IA32_DCA_0_CAP","IA32_DEBUGCTL","IA32_DS_AREA","IA32_EFER","IA32_ENERGY_PERF_BIAS","IA32_FEATURE_CONTROL","IA32_FIXED_CTR0","IA32_FIXED_CTR1","IA32_FIXED_CTR2","IA32_FIXED_CTR_CTRL","IA32_FMASK","IA32_FS_BASE","IA32_GS_BASE","IA32_KERNEL_GSBASE","IA32_LSTAR","IA32_MC0_ADDR","IA32_MC0_ADDR1","IA32_MC0_CTL","IA32_MC0_CTL2","IA32_MC0_MISC","IA32_MC0_STATUS","IA32_MC10_ADDR1","IA32_MC10_CTL","IA32_MC10_CTL2","IA32_MC10_MISC","IA32_MC10_STATUS","IA32_MC11_ADDR1","IA32_MC11_CTL","IA32_MC11_CTL2","IA32_MC11_MISC","IA32_MC11_STATUS","IA32_MC12_ADDR1","IA32_MC12_CTL","IA32_MC12_CTL2","IA32_MC12_MISC","IA32_MC12_STATUS","IA32_MC13_ADDR1","IA32_MC13_CTL","IA32_MC13_CTL2","IA32_MC13_MISC","IA32_MC13_STATUS","IA32_MC14_ADDR1","IA32_MC14_CTL","IA32_MC14_CTL2","IA32_MC14_MISC","IA32_MC14_STATUS","IA32_MC15_ADDR1","IA32_MC15_CTL","IA32_MC15_CTL2","IA32_MC15_MISC","IA32_MC15_STATUS","IA32_MC16_ADDR1","IA32_MC16_CTL","IA32_MC16_CTL2","IA32_MC16_MISC","IA32_MC16_STATUS","IA32_MC17_ADDR1","IA32_MC17_CTL","IA32_MC17_CTL2","IA32_MC17_MISC","IA32_MC17_STATUS","IA32_MC18_ADDR1","IA32_MC18_CTL","IA32_MC18_CTL2","IA32_MC18_MISC","IA32_MC18_STATUS","IA32_MC19_ADDR1","IA32_MC19_CTL","IA32_MC19_CTL2","IA32_MC19_MISC","IA32_MC19_STATUS","IA32_MC1_ADDR","IA32_MC1_ADDR2","IA32_MC1_CTL","IA32_MC1_CTL2","IA32_MC1_MISC","IA32_MC1_STATUS","IA32_MC20_ADDR1","IA32_MC20_CTL","IA32_MC20_CTL2","IA32_MC20_MISC","IA32_MC20_STATUS","IA32_MC21_ADDR1","IA32_MC21_CTL","IA32_MC21_CTL2","IA32_MC21_MISC","IA32_MC21_STATUS","IA32_MC2_ADDR","IA32_MC2_ADDR1","IA32_MC2_CTL","IA32_MC2_CTL2","IA32_MC2_MISC","IA32_MC2_STATUS","IA32_MC3_ADDR","IA32_MC3_ADDR1","IA32_MC3_CTL","IA32_MC3_CTL2","IA32_MC3_MISC","IA32_MC3_STATUS","IA32_MC4_ADDR","IA32_MC4_ADDR1","IA32_MC4_CTL","IA32_MC4_CTL2","IA32_MC4_MISC","IA32_MC4_STATUS","IA32_MC5_ADDR1","IA32_MC5_CTL","IA32_MC5_CTL2","IA32_MC5_MISC","IA32_MC5_STATUS","IA32_MC6_ADDR1","IA32_MC6_CTL","IA32_MC6_CTL2","IA32_MC6_MISC","IA32_MC6_STATUS","IA32_MC7_ADDR1","IA32_MC7_CTL","IA32_MC7_CTL2","IA32_MC7_MISC","IA32_MC7_STATUS","IA32_MC8_ADDR1","IA32_MC8_CTL","IA32_MC8_CTL2","IA32_MC8_MISC","IA32_MC8_STATUS","IA32_MC9_ADDR1","IA32_MC9_CTL","IA32_MC9_CTL2","IA32_MC9_MISC","IA32_MC9_STATUS","IA32_MCG_CAP","IA32_MCG_CTL","IA32_MCG_STATUS","IA32_MISC_ENABLE","IA32_MONITOR_FILTER_LINE_SIZE","IA32_MONITOR_FILTER_SIZE","IA32_MPERF","IA32_MTRRCAP","IA32_MTRR_DEF_TYPE","IA32_MTRR_FIX16K_80000","IA32_MTRR_FIX16K_A0000","IA32_MTRR_FIX4K_C0000","IA32_MTRR_FIX4K_C8000","IA32_MTRR_FIX4K_D0000","IA32_MTRR_FIX4K_D8000","IA32_MTRR_FIX4K_E0000","IA32_MTRR_FIX4K_E8000","IA32_MTRR_FIX4K_F0000","IA32_MTRR_FIX4K_F8000","IA32_MTRR_FIX64K_00000","IA32_MTRR_PHYSBASE0","IA32_MTRR_PHYSBASE1","IA32_MTRR_PHYSBASE2","IA32_MTRR_PHYSBASE3","IA32_MTRR_PHYSBASE4","IA32_MTRR_PHYSBASE5","IA32_MTRR_PHYSBASE6","IA32_MTRR_PHYSBASE7","IA32_MTRR_PHYSBASE8","IA32_MTRR_PHYSBASE9","IA32_MTRR_PHYSMASK0","IA32_MTRR_PHYSMASK1","IA32_MTRR_PHYSMASK2","IA32_MTRR_PHYSMASK3","IA32_MTRR_PHYSMASK4","IA32_MTRR_PHYSMASK5","IA32_MTRR_PHYSMASK6","IA32_MTRR_PHYSMASK7","IA32_MTRR_PHYSMASK8","IA32_MTRR_PHYSMASK9","IA32_P5_MC_ADDR","IA32_P5_MC_TYPE","IA32_PACKAGE_THERM_INTERRUPT","IA32_PACKAGE_THERM_STATUS","IA32_PAT","IA32_PEBS_ENABLE","IA32_PERFEVTSEL0","IA32_PERFEVTSEL1","IA32_PERFEVTSEL2","IA32_PERFEVTSEL3","IA32_PERFEVTSEL4","IA32_PERFEVTSEL5","IA32_PERFEVTSEL6","IA32_PERFEVTSEL7","IA32_PERF_CAPABILITIES","IA32_PERF_CTL","IA32_PERF_GLOBAL_CTRL","IA32_PERF_GLOBAL_OVF_CTRL","IA32_PERF_GLOBAL_STAUS","IA32_PERF_STATUS","IA32_PLATFORM_DCA_CAP","IA32_PLATFORM_ID","IA32_PMC0","IA32_PMC1","IA32_PMC2","IA32_PMC3","IA32_PMC4","IA32_PMC5","IA32_PMC6","IA32_PMC7","IA32_PQR_ASSOC","IA32_QM_CTR","IA32_QM_EVTSEL","IA32_SMBASE","IA32_SMM_MONITOR_CTL","IA32_SMRR_PHYSBASE","IA32_SMRR_PHYSMASK","IA32_STAR","IA32_SYSENTER_CS","IA32_SYSENTER_EIP","IA32_SYSENTER_ESP","IA32_THERM_INTERRUPT","IA32_THERM_STATUS","IA32_TIME_STAMP_COUNTER","IA32_TSC_ADJUST","IA32_TSC_AUX","IA32_TSC_DEADLINE","IA32_VMX_BASIC","IA32_VMX_CR0_FIXED0","IA32_VMX_CR0_FIXED1","IA32_VMX_CR4_FIXED0","IA32_VMX_CR4_FIXED1","IA32_VMX_CRO_FIXED0","IA32_VMX_CRO_FIXED1","IA32_VMX_ENTRY_CTLS","IA32_VMX_EPT_VPID_CAP","IA32_VMX_EPT_VPID_ENUM","IA32_VMX_EXIT_CTLS","IA32_VMX_FMFUNC","IA32_VMX_MISC","IA32_VMX_PINBASED_CTLS","IA32_VMX_PROCBASED_CTLS","IA32_VMX_PROCBASED_CTLS2","IA32_VMX_TRUE_ENTRY_CTLS","IA32_VMX_TRUE_EXIT_CTLS","IA32_VMX_TRUE_PINBASED_CTLS","IA32_VMX_TRUE_PROCBASED_CTLS","IA32_VMX_VMCS_ENUM","IA32_VMX_VMFUNC","IA32_X2APIC_APICID","IA32_X2APIC_CUR_COUNT","IA32_X2APIC_DIV_CONF","IA32_X2APIC_EOI","IA32_X2APIC_ESR","IA32_X2APIC_ICR","IA32_X2APIC_INIT_COUNT","IA32_X2APIC_IRR0","IA32_X2APIC_IRR1","IA32_X2APIC_IRR2","IA32_X2APIC_IRR3","IA32_X2APIC_IRR4","IA32_X2APIC_IRR5","IA32_X2APIC_IRR6","IA32_X2APIC_IRR7","IA32_X2APIC_ISR0","IA32_X2APIC_ISR1","IA32_X2APIC_ISR2","IA32_X2APIC_ISR3","IA32_X2APIC_ISR4","IA32_X2APIC_ISR5","IA32_X2APIC_ISR6","IA32_X2APIC_ISR7","IA32_X2APIC_LDR","IA32_X2APIC_LVT_CMCI","IA32_X2APIC_LVT_ERROR","IA32_X2APIC_LVT_LINT0","IA32_X2APIC_LVT_LINT1","IA32_X2APIC_LVT_PMI","IA32_X2APIC_LVT_THERMAL","IA32_X2APIC_LVT_TIMER","IA32_X2APIC_PPR","IA32_X2APIC_SELF_IPI","IA32_X2APIC_SIVR","IA32_X2APIC_TMR0","IA32_X2APIC_TMR1","IA32_X2APIC_TMR2","IA32_X2APIC_TMR3","IA32_X2APIC_TMR4","IA32_X2APIC_TMR5","IA32_X2APIC_TMR6","IA32_X2APIC_TMR7","IA32_X2APIC_TPR","IA32_X2APIC_VERSION","LASTBRANCHFROMIP","LASTBRANCHTOIP","LASTINTFROMIP","LASTINTTOIP","MC0_ADDR","MC0_CTL","MC0_MISC","MC0_STATUS","MC1_ADDR","MC1_CTL","MC1_MISC","MC1_STATUS","MC2_ADDR","MC2_CTL","MC2_MISC","MC2_STATUS","MC3_ADDR","MC3_CTL","MC3_MISC","MC3_STATUS","MC4_ADDR","MC4_CTL","MC4_MISC","MC4_STATUS","MCG_CAP","MCG_CTL","MCG_STATUS","MSR_ALF_ESCR0","MSR_ALF_ESCR1","MSR_B0_PMON_BOX_CTRL","MSR_B0_PMON_BOX_OVF_CTRL","MSR_B0_PMON_BOX_STATUS","MSR_B0_PMON_CTR0","MSR_B0_PMON_CTR1","MSR_B0_PMON_CTR2","MSR_B0_PMON_CTR3","MSR_B0_PMON_EVNT_SEL0","MSR_B0_PMON_EVNT_SEL1","MSR_B0_PMON_EVNT_SEL2","MSR_B0_PMON_EVNT_SEL3","MSR_B0_PMON_MASK","MSR_B0_PMON_MATCH","MSR_B1_PMON_BOX_CTRL","MSR_B1_PMON_BOX_OVF_CTRL","MSR_B1_PMON_BOX_STATUS","MSR_B1_PMON_CTR0","MSR_B1_PMON_CTR1","MSR_B1_PMON_CTR2","MSR_B1_PMON_CTR3","MSR_B1_PMON_EVNT_SEL0","MSR_B1_PMON_EVNT_SEL1","MSR_B1_PMON_EVNT_SEL2","MSR_B1_PMON_EVNT_SEL3","MSR_B1_PMON_MASK","MSR_B1_PMON_MATCH","MSR_BBL_CR_CTL","MSR_BBL_CR_CTL3","MSR_BPU_CCCR0","MSR_BPU_CCCR1","MSR_BPU_CCCR2","MSR_BPU_CCCR3","MSR_BPU_COUNTER0","MSR_BPU_COUNTER1","MSR_BPU_COUNTER2","MSR_BPU_COUNTER3","MSR_BPU_ESCR0","MSR_BPU_ESCR1","MSR_BSU_ESCR0","MSR_BSU_ESCR1","MSR_C0_PMON_BOX_CTRL","MSR_C0_PMON_BOX_OVF_CTRL","MSR_C0_PMON_BOX_STATUS","MSR_C0_PMON_CTR0","MSR_C0_PMON_CTR1","MSR_C0_PMON_CTR2","MSR_C0_PMON_CTR3","MSR_C0_PMON_CTR4","MSR_C0_PMON_CTR5","MSR_C0_PMON_EVNT_SEL0","MSR_C0_PMON_EVNT_SEL1","MSR_C0_PMON_EVNT_SEL2","MSR_C0_PMON_EVNT_SEL3","MSR_C0_PMON_EVNT_SEL4","MSR_C0_PMON_EVNT_SEL5","MSR_C1_PMON_BOX_CTRL","MSR_C1_PMON_BOX_OVF_CTRL","MSR_C1_PMON_BOX_STATUS","MSR_C1_PMON_CTR0","MSR_C1_PMON_CTR1","MSR_C1_PMON_CTR2","MSR_C1_PMON_CTR3","MSR_C1_PMON_CTR4","MSR_C1_PMON_CTR5","MSR_C1_PMON_EVNT_SEL0","MSR_C1_PMON_EVNT_SEL1","MSR_C1_PMON_EVNT_SEL2","MSR_C1_PMON_EVNT_SEL3","MSR_C1_PMON_EVNT_SEL4","MSR_C1_PMON_EVNT_SEL5","MSR_C2_PMON_BOX_CTRL","MSR_C2_PMON_BOX_OVF_CTRL","MSR_C2_PMON_BOX_STATUS","MSR_C2_PMON_CTR0","MSR_C2_PMON_CTR1","MSR_C2_PMON_CTR2","MSR_C2_PMON_CTR3","MSR_C2_PMON_CTR4","MSR_C2_PMON_CTR5","MSR_C2_PMON_EVNT_SEL0","MSR_C2_PMON_EVNT_SEL1","MSR_C2_PMON_EVNT_SEL2","MSR_C2_PMON_EVNT_SEL3","MSR_C2_PMON_EVNT_SEL4","MSR_C2_PMON_EVNT_SEL5","MSR_C3_PMON_BOX_CTRL","MSR_C3_PMON_BOX_OVF_CTRL","MSR_C3_PMON_BOX_STATUS","MSR_C3_PMON_CTR0","MSR_C3_PMON_CTR1","MSR_C3_PMON_CTR2","MSR_C3_PMON_CTR3","MSR_C3_PMON_CTR4","MSR_C3_PMON_CTR5","MSR_C3_PMON_EVNT_SEL0","MSR_C3_PMON_EVNT_SEL1","MSR_C3_PMON_EVNT_SEL2","MSR_C3_PMON_EVNT_SEL3","MSR_C3_PMON_EVNT_SEL4","MSR_C3_PMON_EVNT_SEL5","MSR_C4_PMON_BOX_CTRL","MSR_C4_PMON_BOX_OVF_CTRL","MSR_C4_PMON_BOX_STATUS","MSR_C4_PMON_CTR0","MSR_C4_PMON_CTR1","MSR_C4_PMON_CTR2","MSR_C4_PMON_CTR3","MSR_C4_PMON_CTR4","MSR_C4_PMON_CTR5","MSR_C4_PMON_EVNT_SEL0","MSR_C4_PMON_EVNT_SEL1","MSR_C4_PMON_EVNT_SEL2","MSR_C4_PMON_EVNT_SEL3","MSR_C4_PMON_EVNT_SEL4","MSR_C4_PMON_EVNT_SEL5","MSR_C5_PMON_BOX_CTRL","MSR_C5_PMON_BOX_OVF_CTRL","MSR_C5_PMON_BOX_STATUS","MSR_C5_PMON_CTR0","MSR_C5_PMON_CTR1","MSR_C5_PMON_CTR2","MSR_C5_PMON_CTR3","MSR_C5_PMON_CTR4","MSR_C5_PMON_CTR5","MSR_C5_PMON_EVNT_SEL0","MSR_C5_PMON_EVNT_SEL1","MSR_C5_PMON_EVNT_SEL2","MSR_C5_PMON_EVNT_SEL3","MSR_C5_PMON_EVNT_SEL4","MSR_C5_PMON_EVNT_SEL5","MSR_C6_PMON_BOX_CTRL","MSR_C6_PMON_BOX_OVF_CTRL","MSR_C6_PMON_BOX_STATUS","MSR_C6_PMON_CTR0","MSR_C6_PMON_CTR1","MSR_C6_PMON_CTR2","MSR_C6_PMON_CTR3","MSR_C6_PMON_CTR4","MSR_C6_PMON_CTR5","MSR_C6_PMON_EVNT_SEL0","MSR_C6_PMON_EVNT_SEL1","MSR_C6_PMON_EVNT_SEL2","MSR_C6_PMON_EVNT_SEL3","MSR_C6_PMON_EVNT_SEL4","MSR_C6_PMON_EVNT_SEL5","MSR_C7_PMON_BOX_CTRL","MSR_C7_PMON_BOX_OVF_CTRL","MSR_C7_PMON_BOX_STATUS","MSR_C7_PMON_CTR0","MSR_C7_PMON_CTR1","MSR_C7_PMON_CTR2","MSR_C7_PMON_CTR3","MSR_C7_PMON_CTR4","MSR_C7_PMON_CTR5","MSR_C7_PMON_EVNT_SEL0","MSR_C7_PMON_EVNT_SEL1","MSR_C7_PMON_EVNT_SEL2","MSR_C7_PMON_EVNT_SEL3","MSR_C7_PMON_EVNT_SEL4","MSR_C7_PMON_EVNT_SEL5","MSR_C8_PMON_BOX_CTRL","MSR_C8_PMON_BOX_OVF_CTRL","MSR_C8_PMON_BOX_STATUS","MSR_C8_PMON_CTR0","MSR_C8_PMON_CTR1","MSR_C8_PMON_CTR2","MSR_C8_PMON_CTR3","MSR_C8_PMON_CTR4","MSR_C8_PMON_CTR5","MSR_C8_PMON_EVNT_SEL0","MSR_C8_PMON_EVNT_SEL1","MSR_C8_PMON_EVNT_SEL2","MSR_C8_PMON_EVNT_SEL3","MSR_C8_PMON_EVNT_SEL4","MSR_C8_PMON_EVNT_SEL5","MSR_C9_PMON_BOX_CTRL","MSR_C9_PMON_BOX_OVF_CTRL","MSR_C9_PMON_BOX_STATUS","MSR_C9_PMON_CTR0","MSR_C9_PMON_CTR1","MSR_C9_PMON_CTR2","MSR_C9_PMON_CTR3","MSR_C9_PMON_CTR4","MSR_C9_PMON_CTR5","MSR_C9_PMON_EVNT_SEL0","MSR_C9_PMON_EVNT_SEL1","MSR_C9_PMON_EVNT_SEL2","MSR_C9_PMON_EVNT_SEL3","MSR_C9_PMON_EVNT_SEL4","MSR_C9_PMON_EVNT_SEL5","MSR_CONFIG_TDP_CONTROL","MSR_CONFIG_TDP_LEVEL1","MSR_CONFIG_TDP_LEVEL2","MSR_CONFIG_TDP_NOMINAL","MSR_CORE_C1_RESIDENCY","MSR_CORE_C3_RESIDENCY","MSR_CORE_C4_RESIDENCY","MSR_CORE_C6_RESIDENCY","MSR_CORE_C7_RESIDENCY","MSR_CRU_ESCR0","MSR_CRU_ESCR1","MSR_CRU_ESCR2","MSR_CRU_ESCR3","MSR_CRU_ESCR4","MSR_CRU_ESCR5","MSR_DAC_ESCR0","MSR_DAC_ESCR1","MSR_DEBUGCTLA","MSR_DEBUGCTLB","MSR_DRAM_ENERGY_STATUS","MSR_DRAM_PERF_STATUS","MSR_DRAM_POWER_INFO","MSR_DRAM_POWER_LIMIT","MSR_EBC_FREQUENCY_ID","MSR_EBC_HARD_POWERON","MSR_EBC_SOFT_POWERON","MSR_EBL_CR_POWERON","MSR_EFSB_DRDY0","MSR_EFSB_DRDY1","MSR_EMON_L3_CTR_CTL0","MSR_EMON_L3_CTR_CTL1","MSR_EMON_L3_CTR_CTL2","MSR_EMON_L3_CTR_CTL3","MSR_EMON_L3_CTR_CTL4","MSR_EMON_L3_CTR_CTL5","MSR_EMON_L3_CTR_CTL6","MSR_EMON_L3_CTR_CTL7","MSR_EMON_L3_GL_CTL","MSR_ERROR_CONTROL","MSR_FIRM_ESCR0","MSR_FIRM_ESCR1","MSR_FLAME_CCCR0","MSR_FLAME_CCCR1","MSR_FLAME_CCCR2","MSR_FLAME_CCCR3","MSR_FLAME_COUNTER0","MSR_FLAME_COUNTER1","MSR_FLAME_COUNTER2","MSR_FLAME_COUNTER3","MSR_FLAME_ESCR0","MSR_FLAME_ESCR1","MSR_FSB_ESCR0","MSR_FSB_ESCR1","MSR_FSB_FREQ","MSR_GQ_SNOOP_MESF","MSR_IA32_ADDR0_END","MSR_IA32_ADDR0_START","MSR_IA32_ADDR1_END","MSR_IA32_ADDR1_START","MSR_IA32_ADDR2_END","MSR_IA32_ADDR2_START","MSR_IA32_ADDR3_END","MSR_IA32_ADDR3_START","MSR_IA32_CR3_MATCH","MSR_IA32_RTIT_CTL","MSR_IA32_RTIT_OUTPUT_BASE","MSR_IA32_RTIT_OUTPUT_MASK_PTRS","MSR_IA32_RTIT_STATUS","MSR_IA32_TSX_CTRL","MSR_IFSB_BUSQ0","MSR_IFSB_BUSQ1","MSR_IFSB_CNTR7","MSR_IFSB_CTL6","MSR_IFSB_SNPQ0","MSR_IFSB_SNPQ1","MSR_IQ_CCCR0","MSR_IQ_CCCR1","MSR_IQ_CCCR2","MSR_IQ_CCCR3","MSR_IQ_CCCR4","MSR_IQ_CCCR5","MSR_IQ_COUNTER4","MSR_IQ_COUNTER5","MSR_IQ_ESCR0","MSR_IQ_ESCR1","MSR_IS_ESCR0","MSR_IS_ESCR1","MSR_ITLB_ESCR0","MSR_ITLB_ESCR1","MSR_IX_ESCR0","MSR_LASTBRANCH_0","MSR_LASTBRANCH_0_FROM_IP","MSR_LASTBRANCH_0_TO_IP","MSR_LASTBRANCH_1","MSR_LASTBRANCH_10_FROM_IP","MSR_LASTBRANCH_10_TO_IP","MSR_LASTBRANCH_11_FROM_IP","MSR_LASTBRANCH_11_TO_IP","MSR_LASTBRANCH_12_FROM_IP","MSR_LASTBRANCH_12_TO_IP","MSR_LASTBRANCH_13_FROM_IP","MSR_LASTBRANCH_13_TO_IP","MSR_LASTBRANCH_14_FROM_IP","MSR_LASTBRANCH_14_TO_IP","MSR_LASTBRANCH_15_FROM_IP","MSR_LASTBRANCH_15_TO_IP","MSR_LASTBRANCH_1_FROM_IP","MSR_LASTBRANCH_1_TO_IP","MSR_LASTBRANCH_2","MSR_LASTBRANCH_2_FROM_IP","MSR_LASTBRANCH_2_TO_IP","MSR_LASTBRANCH_3","MSR_LASTBRANCH_3_FROM_IP","MSR_LASTBRANCH_3_TO_IP","MSR_LASTBRANCH_4","MSR_LASTBRANCH_4_FROM_IP","MSR_LASTBRANCH_4_TO_IP","MSR_LASTBRANCH_5","MSR_LASTBRANCH_5_FROM_IP","MSR_LASTBRANCH_5_TO_IP","MSR_LASTBRANCH_6","MSR_LASTBRANCH_6_FROM_IP","MSR_LASTBRANCH_6_TO_IP","MSR_LASTBRANCH_7","MSR_LASTBRANCH_7_FROM_IP","MSR_LASTBRANCH_7_TO_IP","MSR_LASTBRANCH_8_FROM_IP","MSR_LASTBRANCH_8_TO_IP","MSR_LASTBRANCH_9_FROM_IP","MSR_LASTBRANCH_9_TO_IP","MSR_LASTBRANCH_TOS","MSR_LBR_SELECT","MSR_LER_FROM_LIP","MSR_LER_TO_LIP","MSR_M0_PMON_ADDR_MASK","MSR_M0_PMON_ADDR_MATCH","MSR_M0_PMON_BOX_CTRL","MSR_M0_PMON_BOX_OVF_CTRL","MSR_M0_PMON_BOX_STATUS","MSR_M0_PMON_CTR0","MSR_M0_PMON_CTR1","MSR_M0_PMON_CTR2","MSR_M0_PMON_CTR3","MSR_M0_PMON_CTR4","MSR_M0_PMON_CTR5","MSR_M0_PMON_DSP","MSR_M0_PMON_EVNT_SEL0","MSR_M0_PMON_EVNT_SEL1","MSR_M0_PMON_EVNT_SEL2","MSR_M0_PMON_EVNT_SEL3","MSR_M0_PMON_EVNT_SEL4","MSR_M0_PMON_EVNT_SEL5","MSR_M0_PMON_ISS","MSR_M0_PMON_MAP","MSR_M0_PMON_MM_CONFIG","MSR_M0_PMON_MSC_THR","MSR_M0_PMON_PGT","MSR_M0_PMON_PLD","MSR_M0_PMON_TIMESTAMP","MSR_M0_PMON_ZDP","MSR_M1_PMON_ADDR_MASK","MSR_M1_PMON_ADDR_MATCH","MSR_M1_PMON_BOX_CTRL","MSR_M1_PMON_BOX_OVF_CTRL","MSR_M1_PMON_BOX_STATUS","MSR_M1_PMON_CTR0","MSR_M1_PMON_CTR1","MSR_M1_PMON_CTR2","MSR_M1_PMON_CTR3","MSR_M1_PMON_CTR4","MSR_M1_PMON_CTR5","MSR_M1_PMON_DSP","MSR_M1_PMON_EVNT_SEL0","MSR_M1_PMON_EVNT_SEL1","MSR_M1_PMON_EVNT_SEL2","MSR_M1_PMON_EVNT_SEL3","MSR_M1_PMON_EVNT_SEL4","MSR_M1_PMON_EVNT_SEL5","MSR_M1_PMON_ISS","MSR_M1_PMON_MAP","MSR_M1_PMON_MM_CONFIG","MSR_M1_PMON_MSC_THR","MSR_M1_PMON_PGT","MSR_M1_PMON_PLD","MSR_M1_PMON_TIMESTAMP","MSR_M1_PMON_ZDP","MSR_MC0_MISC","MSR_MC10_ADDR","MSR_MC10_CTL","MSR_MC10_MISC","MSR_MC10_STATUS","MSR_MC11_ADDR","MSR_MC11_CTL","MSR_MC11_MISC","MSR_MC11_STATUS","MSR_MC12_ADDR","MSR_MC12_CTL","MSR_MC12_MISC","MSR_MC12_STATUS","MSR_MC13_ADDR","MSR_MC13_CTL","MSR_MC13_MISC","MSR_MC13_STATUS","MSR_MC14_ADDR","MSR_MC14_CTL","MSR_MC14_MISC","MSR_MC14_STATUS","MSR_MC15_ADDR","MSR_MC15_CTL","MSR_MC15_MISC","MSR_MC15_STATUS","MSR_MC16_ADDR","MSR_MC16_CTL","MSR_MC16_MISC","MSR_MC16_STATUS","MSR_MC17_ADDR","MSR_MC17_CTL","MSR_MC17_MISC","MSR_MC17_STATUS","MSR_MC18_ADDR","MSR_MC18_CTL","MSR_MC18_MISC","MSR_MC18_STATUS","MSR_MC19_ADDR","MSR_MC19_CTL","MSR_MC19_MISC","MSR_MC19_STATUS","MSR_MC1_MISC","MSR_MC20_ADDR","MSR_MC20_CTL","MSR_MC20_MISC","MSR_MC20_STATUS","MSR_MC21_ADDR","MSR_MC21_CTL","MSR_MC21_MISC","MSR_MC21_STATUS","MSR_MC22_ADDR","MSR_MC22_CTL","MSR_MC22_MISC","MSR_MC22_STATUS","MSR_MC23_ADDR","MSR_MC23_CTL","MSR_MC23_MISC","MSR_MC23_STATUS","MSR_MC24_ADDR","MSR_MC24_CTL","MSR_MC24_MISC","MSR_MC24_STATUS","MSR_MC25_ADDR","MSR_MC25_CTL","MSR_MC25_MISC","MSR_MC25_STATUS","MSR_MC26_ADDR","MSR_MC26_CTL","MSR_MC26_MISC","MSR_MC26_STATUS","MSR_MC2_MISC","MSR_MC3_ADDR","MSR_MC3_CTL","MSR_MC3_MISC","MSR_MC3_STATUS","MSR_MC4_ADDR","MSR_MC4_CTL","MSR_MC4_CTL2","MSR_MC4_MISC","MSR_MC4_STATUS","MSR_MC5_ADDR","MSR_MC5_CTL","MSR_MC5_MISC","MSR_MC5_STATUS","MSR_MC6_ADDR","MSR_MC6_CTL","MSR_MC6_MISC","MSR_MC6_STATUS","MSR_MC7_ADDR","MSR_MC7_CTL","MSR_MC7_MISC","MSR_MC7_STATUS","MSR_MC8_ADDR","MSR_MC8_CTL","MSR_MC8_MISC","MSR_MC8_STATUS","MSR_MC9_ADDR","MSR_MC9_CTL","MSR_MC9_MISC","MSR_MC9_STATUS","MSR_MCG_MISC","MSR_MCG_R10","MSR_MCG_R11","MSR_MCG_R12","MSR_MCG_R13","MSR_MCG_R14","MSR_MCG_R8","MSR_MCG_R9","MSR_MCG_RAX","MSR_MCG_RBP","MSR_MCG_RBX","MSR_MCG_RCX","MSR_MCG_RDI","MSR_MCG_RDX","MSR_MCG_RFLAGS","MSR_MCG_RIP","MSR_MCG_RSI","MSR_MISC_PWR_MGMT","MSR_MOB_ESCR0","MSR_MOB_ESCR1","MSR_MS_CCCR0","MSR_MS_CCCR1","MSR_MS_CCCR2","MSR_MS_CCCR3","MSR_MS_COUNTER0","MSR_MS_COUNTER1","MSR_MS_COUNTER2","MSR_MS_COUNTER3","MSR_MS_ESCR0","MSR_MS_ESCR1","MSR_OFFCORE_RSP_0","MSR_OFFCORE_RSP_1","MSR_PEBS_ENABLE","MSR_PEBS_LD_LAT","MSR_PEBS_MATRIX_VERT","MSR_PEBS_NUM_ALT","MSR_PERF_CAPABILITIES","MSR_PERF_FIXED_CTR0","MSR_PERF_FIXED_CTR1","MSR_PERF_FIXED_CTR2","MSR_PERF_FIXED_CTR_CTRL","MSR_PERF_GLOBAL_CTRL","MSR_PERF_GLOBAL_OVF_CTRL","MSR_PERF_GLOBAL_STAUS","MSR_PERF_STATUS","MSR_PKGC3_IRTL","MSR_PKGC6_IRTL","MSR_PKGC7_IRTL","MSR_PKG_C10_RESIDENCY","MSR_PKG_C2_RESIDENCY","MSR_PKG_C3_RESIDENCY","MSR_PKG_C4_RESIDENCY","MSR_PKG_C6C_RESIDENCY","MSR_PKG_C6_RESIDENCY","MSR_PKG_C7_RESIDENCY","MSR_PKG_C9_RESIDENCY","MSR_PKG_CST_CONFIG_CONTROL","MSR_PKG_ENERGY_STATUS","MSR_PKG_PERF_STATUS","MSR_PKG_POWER_INFO","MSR_PKG_POWER_LIMIT","MSR_PLATFORM_BRV","MSR_PLATFORM_ID","MSR_PLATFORM_INFO","MSR_PMG_IO_CAPTURE_BASE","MSR_PMH_ESCR0","MSR_PMH_ESCR1","MSR_POWER_CTL","MSR_PP0_ENERGY_STATUS","MSR_PP0_PERF_STATUS","MSR_PP0_POLICY","MSR_PP0_POWER_LIMIT","MSR_PP1_ENERGY_STATUS","MSR_PP1_POLICY","MSR_PP1_POWER_LIMIT","MSR_R0_PMON_BOX_CTRL","MSR_R0_PMON_BOX_OVF_CTRL","MSR_R0_PMON_BOX_STATUS","MSR_R0_PMON_CTR0","MSR_R0_PMON_CTR1","MSR_R0_PMON_CTR2","MSR_R0_PMON_CTR3","MSR_R0_PMON_CTR4","MSR_R0_PMON_CTR5","MSR_R0_PMON_CTR6","MSR_R0_PMON_CTR7","MSR_R0_PMON_EVNT_SEL0","MSR_R0_PMON_EVNT_SEL1","MSR_R0_PMON_EVNT_SEL2","MSR_R0_PMON_EVNT_SEL3","MSR_R0_PMON_EVNT_SEL4","MSR_R0_PMON_EVNT_SEL5","MSR_R0_PMON_EVNT_SEL6","MSR_R0_PMON_EVNT_SEL7","MSR_R0_PMON_IPERF0_P0","MSR_R0_PMON_IPERF0_P1","MSR_R0_PMON_IPERF0_P2","MSR_R0_PMON_IPERF0_P3","MSR_R0_PMON_IPERF0_P4","MSR_R0_PMON_IPERF0_P5","MSR_R0_PMON_IPERF0_P6","MSR_R0_PMON_IPERF0_P7","MSR_R0_PMON_QLX_P0","MSR_R0_PMON_QLX_P1","MSR_R0_PMON_QLX_P2","MSR_R0_PMON_QLX_P3","MSR_R1_PMON_BOX_CTRL","MSR_R1_PMON_BOX_OVF_CTRL","MSR_R1_PMON_BOX_STATUS","MSR_R1_PMON_CTR10","MSR_R1_PMON_CTR11","MSR_R1_PMON_CTR12","MSR_R1_PMON_CTR13","MSR_R1_PMON_CTR14","MSR_R1_PMON_CTR15","MSR_R1_PMON_CTR8","MSR_R1_PMON_CTR9","MSR_R1_PMON_EVNT_SEL10","MSR_R1_PMON_EVNT_SEL11","MSR_R1_PMON_EVNT_SEL12","MSR_R1_PMON_EVNT_SEL13","MSR_R1_PMON_EVNT_SEL14","MSR_R1_PMON_EVNT_SEL15","MSR_R1_PMON_EVNT_SEL8","MSR_R1_PMON_EVNT_SEL9","MSR_R1_PMON_IPERF1_P10","MSR_R1_PMON_IPERF1_P11","MSR_R1_PMON_IPERF1_P12","MSR_R1_PMON_IPERF1_P13","MSR_R1_PMON_IPERF1_P14","MSR_R1_PMON_IPERF1_P15","MSR_R1_PMON_IPERF1_P8","MSR_R1_PMON_IPERF1_P9","MSR_R1_PMON_QLX_P4","MSR_R1_PMON_QLX_P5","MSR_R1_PMON_QLX_P6","MSR_R1_PMON_QLX_P7","MSR_RAPL_POWER_UNIT","MSR_RAT_ESCR0","MSR_RAT_ESCR1","MSR_S0_PMON_BOX_CTRL","MSR_S0_PMON_BOX_OVF_CTRL","MSR_S0_PMON_BOX_STATUS","MSR_S0_PMON_CTR0","MSR_S0_PMON_CTR1","MSR_S0_PMON_CTR2","MSR_S0_PMON_CTR3","MSR_S0_PMON_EVNT_SEL0","MSR_S0_PMON_EVNT_SEL1","MSR_S0_PMON_EVNT_SEL2","MSR_S0_PMON_EVNT_SEL3","MSR_S0_PMON_MASK","MSR_S0_PMON_MATCH","MSR_S1_PMON_BOX_CTRL","MSR_S1_PMON_BOX_OVF_CTRL","MSR_S1_PMON_BOX_STATUS","MSR_S1_PMON_CTR0","MSR_S1_PMON_CTR1","MSR_S1_PMON_CTR2","MSR_S1_PMON_CTR3","MSR_S1_PMON_EVNT_SEL0","MSR_S1_PMON_EVNT_SEL1","MSR_S1_PMON_EVNT_SEL2","MSR_S1_PMON_EVNT_SEL3","MSR_S1_PMON_MASK","MSR_S1_PMON_MATCH","MSR_SAAT_ESCR0","MSR_SAAT_ESCR1","MSR_SMI_COUNT","MSR_SMM_BLOCKED","MSR_SMM_DELAYED","MSR_SMM_FEATURE_CONTROL","MSR_SMM_MCA_CAP","MSR_SMRR_PHYSMASK","MSR_SSU_ESCR0","MSR_TBPU_ESCR0","MSR_TBPU_ESCR1","MSR_TC_ESCR0","MSR_TC_ESCR1","MSR_TEMPERATURE_TARGET","MSR_THERM2_CTL","MSR_TURBO_ACTIVATION_RATIO","MSR_TURBO_POWER_CURRENT_LIMIT","MSR_TURBO_RATIO_LIMIT","MSR_U2L_ESCR0","MSR_U2L_ESCR1","MSR_UNCORE_ADDR_OPCODE_MATCH","MSR_UNCORE_FIXED_CTR0","MSR_UNCORE_FIXED_CTR_CTRL","MSR_UNCORE_PERFEVTSEL0","MSR_UNCORE_PERFEVTSEL1","MSR_UNCORE_PERFEVTSEL2","MSR_UNCORE_PERFEVTSEL3","MSR_UNCORE_PERFEVTSEL4","MSR_UNCORE_PERFEVTSEL5","MSR_UNCORE_PERFEVTSEL6","MSR_UNCORE_PERFEVTSEL7","MSR_UNCORE_PERF_GLOBAL_CTRL","MSR_UNCORE_PERF_GLOBAL_OVF_CTRL","MSR_UNCORE_PERF_GLOBAL_STATUS","MSR_UNCORE_PMC0","MSR_UNCORE_PMC1","MSR_UNCORE_PMC2","MSR_UNCORE_PMC3","MSR_UNCORE_PMC4","MSR_UNCORE_PMC5","MSR_UNCORE_PMC6","MSR_UNCORE_PMC7","MSR_UNC_ARB_PERFEVTSEL0","MSR_UNC_ARB_PERFEVTSEL1","MSR_UNC_ARB_PER_CTR0","MSR_UNC_ARB_PER_CTR1","MSR_UNC_CBO_0_PERFEVTSEL0","MSR_UNC_CBO_0_PERFEVTSEL1","MSR_UNC_CBO_0_PER_CTR0","MSR_UNC_CBO_0_PER_CTR1","MSR_UNC_CBO_1_PERFEVTSEL0","MSR_UNC_CBO_1_PERFEVTSEL1","MSR_UNC_CBO_1_PER_CTR0","MSR_UNC_CBO_1_PER_CTR1","MSR_UNC_CBO_2_PERFEVTSEL0","MSR_UNC_CBO_2_PERFEVTSEL1","MSR_UNC_CBO_2_PER_CTR0","MSR_UNC_CBO_2_PER_CTR1","MSR_UNC_CBO_3_PERFEVTSEL0","MSR_UNC_CBO_3_PERFEVTSEL1","MSR_UNC_CBO_3_PER_CTR0","MSR_UNC_CBO_3_PER_CTR1","MSR_UNC_CBO_CONFIG","MSR_UNC_PERF_FIXED_CTR","MSR_UNC_PERF_FIXED_CTRL","MSR_UNC_PERF_GLOBAL_CTRL","MSR_UNC_PERF_GLOBAL_STATUS","MSR_U_PMON_CTR","MSR_U_PMON_EVNT_SEL","MSR_U_PMON_GLOBAL_CTRL","MSR_U_PMON_GLOBAL_OVF_CTRL","MSR_U_PMON_GLOBAL_STATUS","MSR_W_PMON_BOX_CTRL","MSR_W_PMON_BOX_OVF_CTRL","MSR_W_PMON_BOX_STATUS","MSR_W_PMON_CTR0","MSR_W_PMON_CTR1","MSR_W_PMON_CTR2","MSR_W_PMON_CTR3","MSR_W_PMON_EVNT_SEL0","MSR_W_PMON_EVNT_SEL1","MSR_W_PMON_EVNT_SEL2","MSR_W_PMON_EVNT_SEL3","MSR_W_PMON_FIXED_CTR","MSR_W_PMON_FIXED_CTR_CTL","P5_MC_ADDR","P5_MC_TYPE","ROB_CR_BKUPTMPDR6","SYSENTER_CS_MSR","SYSENTER_EIP_MSR","SYSENTER_ESP_MSR","TEST_CTL","TSC","rdmsr","wrmsr","RdRand","RdSeed","fill_random","fill_random","rdrand16","rdrand32","rdrand64","rdrand_slice","rdseed16","rdseed32","rdseed64","rdseed_slice","BuildDescriptor","CallGate","CallGate16","CallGate32","CodeSegmentType","DataSegmentType","Descriptor","DescriptorBuilder","Execute","ExecuteAccessed","ExecuteConforming","ExecuteConformingAccessed","ExecuteRead","ExecuteReadAccessed","ExecuteReadConforming","ExecuteReadConformingAccessed","GateDescriptorBuilder","InterruptGate","InterruptGate16","InterruptGate32","LDT","LDT","LdtDescriptorBuilder","NULL","RPL_0","RPL_1","RPL_2","RPL_3","ReadExpand","ReadExpandAccessed","ReadOnly","ReadOnlyAccessed","ReadWrite","ReadWriteAccessed","ReadWriteExpand","ReadWriteExpandAccessed","SegmentDescriptorBuilder","SegmentSelector","SystemDescriptorTypes32","SystemDescriptorTypes64","TI_GDT","TI_LDT","TSSAvailable16","TSSBusy16","TaskGate","TaskGateDescriptorBuilder","TrapGate","TrapGate16","TrapGate32","TssAvailable","TssAvailable32","TssBusy","TssBusy32","all","as_u64","avl","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_gate_descriptor","call_gate_descriptor","call_gate_descriptor","call_gate_descriptor","clone","clone","clone","clone","clone","clone","cmp","code_descriptor","code_descriptor","complement","contains","cs","data_descriptor","data_descriptor","db","default","difference","dpl","ds","empty","eq","eq","eq","eq","eq","es","extend","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","fs","gs","hash","index","insert","interrupt_descriptor","interrupt_descriptor","interrupt_descriptor","interrupt_descriptor","intersection","intersects","into","into","into","into","into","into","into","is_all","is_empty","ist","l","ldt_descriptor","ldt_descriptor","ldt_descriptor","limit_granularity_4kb","load_ds","load_es","load_fs","load_gs","load_ss","lower","ne","new","not","partial_cmp","present","remove","set","set_avl","set_base_limit","set_db","set_dpl","set_g","set_l","set_p","set_s","set_selector_offset","set_type","ss","sub","sub_assign","symmetric_difference","task_gate_descriptor","task_gate_descriptor","toggle","trap_gate_descriptor","trap_gate_descriptor","trap_gate_descriptor","trap_gate_descriptor","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tss_descriptor","tss_descriptor","tss_descriptor","tss_descriptor","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","upper","load_tr","tr","rdtsc","rdtscp","flush","flush_all","Result","VmFail","VmFailInvalid","VmFailValid","borrow","borrow_mut","fmt","from","into","try_from","try_into","type_id","vmcs","control","guest","host","ro","ACK_INTERRUPT_ON_EXIT","APIC_ACCESS_ADDR_FULL","APIC_ACCESS_ADDR_HIGH","CLEAR_IA32_BNDCFGS","CLEAR_IA32_RTIT_CTL","CONCEAL_VMX_FROM_PT","CONCEAL_VMX_FROM_PT","CONCEAL_VMX_FROM_PT","CR0_GUEST_HOST_MASK","CR0_READ_SHADOW","CR3_LOAD_EXITING","CR3_STORE_EXITING","CR3_TARGET_COUNT","CR3_TARGET_VALUE0","CR3_TARGET_VALUE1","CR3_TARGET_VALUE2","CR3_TARGET_VALUE3","CR4_GUEST_HOST_MASK","CR4_READ_SHADOW","CR8_LOAD_EXITING","CR8_STORE_EXITING","DEACTIVATE_DUAL_MONITOR","DTABLE_EXITING","ENABLE_EPT","ENABLE_INVPCID","ENABLE_PML","ENABLE_RDTSCP","ENABLE_USER_WAIT_PAUSE","ENABLE_VM_FUNCTIONS","ENABLE_VPID","ENABLE_XSAVES_XRSTORS","ENCLS_EXITING","ENCLS_EXITING_BITMAP_FULL","ENCLS_EXITING_BITMAP_HIGH","ENCLV_EXITING","ENTRY_TO_SMM","EOI_EXIT0_FULL","EOI_EXIT0_HIGH","EOI_EXIT1_FULL","EOI_EXIT1_HIGH","EOI_EXIT2_FULL","EOI_EXIT2_HIGH","EOI_EXIT3_FULL","EOI_EXIT3_HIGH","EPTP_FULL","EPTP_HIGH","EPTP_INDEX","EPTP_LIST_ADDR_FULL","EPTP_LIST_ADDR_HIGH","EPT_VIOLATION_VE","EXCEPTION_BITMAP","EXECUTIVE_VMCS_PTR_FULL","EXECUTIVE_VMCS_PTR_HIGH","EXTERNAL_INTERRUPT_EXITING","EntryControls","ExitControls","HLT_EXITING","HOST_ADDRESS_SPACE_SIZE","IA32E_MODE_GUEST","INTEL_PT_GUEST_PHYSICAL","INTERRUPT_WINDOW_EXITING","INVLPG_EXITING","IO_BITMAP_A_ADDR_FULL","IO_BITMAP_A_ADDR_HIGH","IO_BITMAP_B_ADDR_FULL","IO_BITMAP_B_ADDR_HIGH","LOAD_DEBUG_CONTROLS","LOAD_IA32_BNDCFGS","LOAD_IA32_EFER","LOAD_IA32_EFER","LOAD_IA32_PAT","LOAD_IA32_PAT","LOAD_IA32_PERF_GLOBAL_CTRL","LOAD_IA32_PERF_GLOBAL_CTRL","LOAD_IA32_RTIT_CTL","MODE_BASED_EPT","MONITOR_EXITING","MONITOR_TRAP_FLAG","MOV_DR_EXITING","MSR_BITMAPS_ADDR_FULL","MSR_BITMAPS_ADDR_HIGH","MWAIT_EXITING","NMI_EXITING","NMI_WINDOW_EXITING","PAGE_FAULT_ERR_CODE_MASK","PAGE_FAULT_ERR_CODE_MATCH","PAUSE_EXITING","PAUSE_LOOP_EXITING","PINBASED_EXEC_CONTROLS","PLE_GAP","PLE_WINDOW","PML_ADDR_FULL","PML_ADDR_HIGH","POSTED_INTERRUPTS","POSTED_INTERRUPT_DESC_ADDR_FULL","POSTED_INTERRUPT_DESC_ADDR_HIGH","POSTED_INTERRUPT_NOTIFICATION_VECTOR","PRIMARY_PROCBASED_EXEC_CONTROLS","PinbasedControls","PrimaryControls","RDPMC_EXITING","RDRAND_EXITING","RDSEED_EXITING","RDTSC_EXITING","SAVE_DEBUG_CONTROLS","SAVE_IA32_EFER","SAVE_IA32_PAT","SAVE_VMX_PREEMPTION_TIMER","SECONDARY_CONTROLS","SECONDARY_PROCBASED_EXEC_CONTROLS","SUBPAGE_PERM_TABLE_PTR_FULL","SUBPAGE_PERM_TABLE_PTR_HIGH","SUB_PAGE_EPT","SecondaryControls","TPR_THRESHOLD","TSC_MULTIPLIER_FULL","TSC_MULTIPLIER_HIGH","TSC_OFFSET_FULL","TSC_OFFSET_HIGH","UNCOND_IO_EXITING","UNRESTRICTED_GUEST","USE_IO_BITMAPS","USE_MSR_BITMAPS","USE_TPR_SHADOW","USE_TSC_OFFSETTING","USE_TSC_SCALING","VIRTUALIZE_APIC","VIRTUALIZE_APIC_REGISTER","VIRTUALIZE_X2APIC","VIRTUAL_INTERRUPT_DELIVERY","VIRTUAL_NMIS","VIRT_APIC_ADDR_FULL","VIRT_APIC_ADDR_HIGH","VIRT_EXCEPTION_INFO_ADDR_FULL","VIRT_EXCEPTION_INFO_ADDR_HIGH","VMCS_SHADOWING","VMENTRY_CONTROLS","VMENTRY_EXCEPTION_ERR_CODE","VMENTRY_INSTRUCTION_LEN","VMENTRY_INTERRUPTION_INFO_FIELD","VMENTRY_MSR_LOAD_ADDR_FULL","VMENTRY_MSR_LOAD_ADDR_HIGH","VMENTRY_MSR_LOAD_COUNT","VMEXIT_CONTROLS","VMEXIT_MSR_LOAD_ADDR_FULL","VMEXIT_MSR_LOAD_ADDR_HIGH","VMEXIT_MSR_LOAD_COUNT","VMEXIT_MSR_STORE_ADDR_FULL","VMEXIT_MSR_STORE_ADDR_HIGH","VMEXIT_MSR_STORE_COUNT","VMREAD_BITMAP_ADDR_FULL","VMREAD_BITMAP_ADDR_HIGH","VMWRITE_BITMAP_ADDR_FULL","VMWRITE_BITMAP_ADDR_HIGH","VMX_PREEMPTION_TIMER","VM_FUNCTION_CONTROLS_FULL","VM_FUNCTION_CONTROLS_HIGH","VPID","WBINVD_EXITING","XSS_EXITING_BITMAP_FULL","XSS_EXITING_BITMAP_HIGH","all","all","all","all","all","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","hash","hash","hash","hash","hash","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","ne","ne","ne","ne","ne","not","not","not","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","remove","remove","remove","remove","set","set","set","set","set","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","ACTIVITY_STATE","CR0","CR3","CR4","CS_ACCESS_RIGHTS","CS_BASE","CS_LIMIT","CS_SELECTOR","DR7","DS_ACCESS_RIGHTS","DS_BASE","DS_LIMIT","DS_SELECTOR","ES_ACCESS_RIGHTS","ES_BASE","ES_LIMIT","ES_SELECTOR","FS_ACCESS_RIGHTS","FS_BASE","FS_LIMIT","FS_SELECTOR","GDTR_BASE","GDTR_LIMIT","GS_ACCESS_RIGHTS","GS_BASE","GS_LIMIT","GS_SELECTOR","IA32_BNDCFGS_FULL","IA32_BNDCFGS_HIGH","IA32_DEBUGCTL_FULL","IA32_DEBUGCTL_HIGH","IA32_EFER_FULL","IA32_EFER_HIGH","IA32_PAT_FULL","IA32_PAT_HIGH","IA32_PERF_GLOBAL_CTRL_FULL","IA32_PERF_GLOBAL_CTRL_HIGH","IA32_RTIT_CTL_FULL","IA32_RTIT_CTL_HIGH","IA32_SYSENTER_CS","IA32_SYSENTER_EIP","IA32_SYSENTER_ESP","IDTR_BASE","IDTR_LIMIT","INTERRUPTIBILITY_STATE","INTERRUPT_STATUS","LDTR_ACCESS_RIGHTS","LDTR_BASE","LDTR_LIMIT","LDTR_SELECTOR","LINK_PTR_FULL","LINK_PTR_HIGH","PDPTE0_FULL","PDPTE0_HIGH","PDPTE1_FULL","PDPTE1_HIGH","PDPTE2_FULL","PDPTE2_HIGH","PDPTE3_FULL","PDPTE3_HIGH","PENDING_DBG_EXCEPTIONS","PML_INDEX","RFLAGS","RIP","RSP","SMBASE","SS_ACCESS_RIGHTS","SS_BASE","SS_LIMIT","SS_SELECTOR","TR_ACCESS_RIGHTS","TR_BASE","TR_LIMIT","TR_SELECTOR","VMX_PREEMPTION_TIMER_VALUE","CR0","CR3","CR4","CS_SELECTOR","DS_SELECTOR","ES_SELECTOR","FS_BASE","FS_SELECTOR","GDTR_BASE","GS_BASE","GS_SELECTOR","IA32_EFER_FULL","IA32_EFER_HIGH","IA32_PAT_FULL","IA32_PAT_HIGH","IA32_PERF_GLOBAL_CTRL_FULL","IA32_PERF_GLOBAL_CTRL_HIGH","IA32_SYSENTER_CS","IA32_SYSENTER_EIP","IA32_SYSENTER_ESP","IDTR_BASE","RIP","RSP","SS_SELECTOR","TR_BASE","TR_SELECTOR","EXIT_QUALIFICATION","EXIT_REASON","GUEST_LINEAR_ADDR","GUEST_PHYSICAL_ADDR_FULL","GUEST_PHYSICAL_ADDR_HIGH","IDT_VECTORING_ERR_CODE","IDT_VECTORING_INFO","IO_RCX","IO_RDI","IO_RIP","IO_RSI","VMEXIT_INSTRUCTION_INFO","VMEXIT_INSTRUCTION_LEN","VMEXIT_INTERRUPTION_ERR_CODE","VMEXIT_INTERRUPTION_INFO","VM_INSTRUCTION_ERROR"],"q":["x86","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::apic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::apic::ApicId","","x86::apic::ioapic","","","","","","","","","","","","","","x86::apic::x2apic","","","","","","","","","","","","","","","","","","","","","","","","","x86::apic::xapic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::bits16","x86::bits32","","","","x86::bits32::eflags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::bits32::pagingx86::bits32::task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::bits64","","","","","","","","x86::bits64::pagingx86::bits64::registers","","","x86::bits64::rflags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::bits64::segmentation","","","","","","","","","","","","","","","","","","","","","","","x86::bits64::sgx","","","","","","","","","","","","","","","","","","","","","","","","x86::bits64::syscall","","","","","","","x86::bits64::task","","","","","","","","","","","","","","","","","","","","","x86::bits64::vmx","","","","","","","","","x86::controlregsx86::cpuidx86::cpuid::Associativity","x86::cpuid::ExtendedRegisterType","x86::cpuid::Hypervisor","","","x86::cpuid::SgxSectionInfo","x86::cpuid::native_cpuid","x86::debugregs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::dtables","","","","","","","","","","","","","","","","","","","","x86::fence","","","x86::io","","","","","","x86::irq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::msrx86::random","","","","","","","","","","","","x86::segmentation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::task","","x86::time","","x86::tlb","","x86::vmx","","","","","","","","","","","","","x86::vmx::vmcs","","","","x86::vmx::vmcs::controlx86::vmx::vmcs::guest","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::vmx::vmcs::host","","","","","","","","","","","","","","","","","","","","","","","","","","x86::vmx::vmcs::ro","","","","","","","","","","","","","","",""],"d":["x86 Protection levels","","","","","Register information and driver to program xAPIC, X2APIC …","Data structures and functions used by 16-bit mode.","Data structures and functions used by 32-bit mode.","Data structures and functions used by IA-32e but not …","","","","Functions to read and write control registers. See Intel …","Support for the CPUID instructions.","A short-cut to the architecture (bits32 or bits64) this …","Functions to read and write debug registers.","Functions and data-structures for working with descriptor …","","Intel fence instructions","","","Stops instruction execution and places the processor in a …","Generate a software interrupt. This is a macro argument …","","I/O port functionality.","Shared interrupt description and set-up code. See the …","MSR value list and function to read and write them.","Instructions to generate random bits directly from the …","Read Processor ID","Functionality to manipulate segment registers, build …","","Helpers to program the task state segment. See Intel 3a, …","Functions to read time stamp counters on x86.","Functions to flush the translation lookaside buffer (TLB).","","","","Data structures and definitions used by Virtual Machine …","","","Abstracts common interface of local APIC (x2APIC, xAPIC) …","Encodes the id of a core.","","","Specify IPI Delivery Mode","Specify Delivery Status","Specify IPI Destination Mode.","IPI Destination Shorthand","","Delivers the interrupt specified in the vector field to …","Abstract the IPI control register","","Delivers an INIT request to the target processor or …","IPI Level","","","Same as fixed mode, except that the interrupt is delivered …","","Delivers an NMI interrupt to the target processor or …","","","Delivers an SMI interrupt to the target processor or …","","Sends a special start-up IPI (called a SIPI) to the target …","IPI Trigger Mode","A core destination encoded as an x2APIC ID.","A core destination encoded as an xAPIC ID.","Reserved","","","","","","","","","","","","","","","","","Is a bootstrap processor?","","End Of Interrupt – Acknowledge interrupt delivery.","","","","","","","","","","","","","","","","","Short-hand to create a Icr value that will work for an …","","","","","","","","","","Return APIC ID.","","","","","","","","","","To control an I/O APIC.","Send a INIT IPI to a core.","Deassert INIT IPI.","Send a STARTUP IPI to a core.","Returns the logical APIC ID.","Get lower 32-bits of the Icr register.","","","Send a generic IPI.","","","","","","","","","","","","","","","","","Enable TSC deadline timer.","Set TSC deadline value.","","","","","","","","","Get upper 32-bits of the Icr register.","Read APIC version","x2APIC, the most recent APIC on x86 for large servers with …","Returns the logical address relative to a cluster for a …","Returns the cluster ID a given APIC ID belongs to …","Returns the Logical x2APIC ID.","Information about the xAPIC for the local APIC.","","","","","","","","","","","Instantiate a new IoApic.","Number of supported interrupts by this IO APIC.","","","","","Represents an x2APIC driver instance.","Attach to APIC (enable x2APIC mode, initialize LINT0)","","","Is a bootstrap processor?","","Detach from APIC (disable x2APIC and xAPIC mode).","End Of Interrupt – Acknowledge interrupt delivery.","","","Read local x2APIC ID.","","Send a INIT IPI to a core.","Deassert INIT IPI.","Send a STARTUP IPI to a core.","In x2APIC mode, the 32-bit logical x2APIC ID, can be read …","Create a new x2APIC driver object for the local core.","Send a generic IPI.","Send an IPI to yourself.","","","Enable TSC timer","Set tsc deadline.","","Read APIC version.","State for the XAPIC driver.","EOI register. Write-only.","Error Status Register (ESR). Read/write. See Section …","Interrupt Command Register (ICR). Read/write. See Figure …","Interrupt Command Register (ICR). Read/write. See Figure …","Local APIC ID register. Read-only. See Section 10.12.5.1 …","Interrupt Request Register (IRR); bits 31:0. Read-only.","IRR bits 63:32. Read-only.","IRR bits 95:64. Read-only.","IRR bits 127:96. Read-only.","IRR bits 159:128. Read-only.","IRR bits 191:160. Read-only.","IRR bits 223:192. Read-only.","IRR bits 255:224. Read-only.","In-Service Register (ISR); bits 31:0. Read-only.","ISR bits 63:32. Read-only.","ISR bits 95:64. Read-only.","ISR bits 127:96. Read-only.","ISR bits 159:128. Read-only.","ISR bits 191:160. Read-only.","ISR bits 223:192. Read-only.","ISR bits 255:224. Read-only.","Logical Destination Register (LDR). Read/write in xAPIC …","LVT CMCI register. Read/write. See Figure 10-8 for …","LVT Error register. Read/write. See Figure 10-8 for …","LVT LINT0 register. Read/write. See Figure 10-8 for …","LVT LINT1 register. Read/write. See Figure 10-8 for …","LVT Performance Monitoring register. Read/write. See …","LVT Thermal Sensor register. Read/write. See Figure 10-8 …","LVT Timer register. Read/write. See Figure 10-8 for …","Processor Priority Register (PPR). Read-only.","Spurious Interrupt Vector Register (SVR). Read/write. See …","Current Count register (for Timer). Read-only.","Divide Configuration Register (DCR; for Timer). …","Initial Count register (for Timer). Read/write.","Trigger Mode Register (TMR); bits 31:0. Read-only.","TMR bits 63:32. Read-only.","TMR bits 95:64. Read-only.","TMR bits 127:96. Read-only.","TMR bits 159:128. Read-only.","TMR bits 191:160. Read-only.","TMR bits 223:192. Read-only.","TMR bits 255:224. Read-only.","Task Priority Register (TPR). Read/write. Bits 31:8 are …","Local APIC Version register. Read-only. Same version used …","Attach driver to the xAPIC (enables device).","","","Is this the bootstrap core?","Detach driver form the xAPIC (disables device).","End Of Interrupt – Acknowledge interrupt delivery.","","","Read local APIC ID.","","Send a INIT IPI to a core.","Deassert INIT IPI.","Send a STARTUP IPI to a core.","","Create a new xAPIC object for the local CPU.","Send a generic IPI.","","","Enable TSC timer.","Set TSC deadline value.","","Read APIC version","","Processor state stored in the EFLAGS register.","Description of the data-structures for IA-32 paging mode.","","Helpers to program the task state segment. See Intel 3a, …","The EFLAGS register.","Bit 1 is always 1.","Alignment Check (AC)","Auxiliary Carry Flag (AF)","Carry Flag (CF)","Direction Flag (DF)","ID Flag (ID)","Interrupt Enable Flag (IF)","I/O Privilege Level (IOPL) 0","I/O Privilege Level (IOPL) 1","I/O Privilege Level (IOPL) 2","I/O Privilege Level (IOPL) 3","Nested Task (NT)","Overflow Flag (OF)","Parity Flag (PF)","Resume Flag (RF)","Sign Flag (SF)","Trap Flag (TF)","Virtual Interrupt Flag (VIF)","Virtual Interrupt Pending (VIP)","Virtual-8086 Mode (VM)","Zero Flag (ZF)","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","Clears the AC flag bit in EFLAGS register.","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Creates a new Flags with the given I/O privilege level.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Creates a new Flags entry. Ensures bit 1 is set.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Sets the AC flag bit in EFLAGS register.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","Accessed; indicates whether software has accessed the …","Accessed; indicates whether software has accessed the …","Log2 of base page size (12 bits).","Size of a base page (4 KiB)","Size of a cache-line","Dirty; indicates whether software has written to the …","Dirty; indicates whether software has written to the …","Global; if CR4.PGE = 1, determines whether the translation …","Global; if CR4.PGE = 1, determines whether the translation …","A wrapper for an IO address (IOVA / DMA Address for …","Size of a large page (4 MiB)","A type wrapping a large page with a 4 MiB buffer.","Present; must be 1 to map a 4-MByte page.","Present; must be 1 to map a 4-KByte page.","Page tables have 512 = 4096 / 32 entries.","If the PAT is supported, indirectly determines the memory …","If the PAT is supported, indirectly determines the memory …","A wrapper for a physical address.","Page-level cache disable.","Page-level cache disable.","A page directory.","A PD Entry consists of an address and a bunch of flags.","PD configuration bits description.","Page size; if set this entry maps a 4-MByte page; …","A page table.","A PT Entry consists of an address and a bunch of flags.","PT Entry bits description.","Page-level write-through.","Page-level write-through.","A type wrapping a base page with a 4 KiB buffer.","Read/write; if 0, writes may not be allowed to the 4-MByte …","Read/write; if 0, writes may not be allowed to the 4-KByte …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","A wrapper for a virtual address.","","","","","","","","","","","","","","","","","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 MiB page (lower or equal than …","Return address of nearest 4 MiB page (lower or equal than …","Return address of nearest 4 MiB page (lower or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 MiB page (higher or equal than …","Return address of nearest 4 MiB page (higher or equal than …","Return address of nearest 4 MiB page (higher or equal than …","Returns the set containing all flags.","Returns the set containing all flags.","Convert to mutable pointer.","Convert to mutable pointer.","Convert to pointer.","Convert to pointer.","Convert to <code>u32</code>","Convert to <code>u32</code>","Convert to <code>u32</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Offset within the 4 KiB page.","Offset within the 4 KiB page.","Offset within the 4 KiB page.","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","","","","","","","","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","Returns the flags corresponding to this entry.","Returns the flags corresponding to this entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","Convert from <code>u32</code>","Convert from <code>usize</code>","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","Accessed; indicates whether software has accessed the …","Accessed; indicates whether software has accessed the …","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Dirty; indicates whether software has written to the …","Dirty; indicates whether software has written to the …","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Global; if CR4.PGE = 1, determines whether the translation …","Global; if CR4.PGE = 1, determines whether the translation …","Is this address aligned to a 4 MiB page?","Is this address aligned to a 4 MiB page?","Is this address aligned to a 4 MiB page?","Page size; if set this entry maps a 4-MByte page; …","Page-level cache disable.","Page-level cache disable.","Page-level write-through.","Page-level write-through.","If the PAT is supported, indirectly determines the memory …","If the PAT is supported, indirectly determines the memory …","Present; must be 1 to map a 4-MByte page.","Present; must be 1 to map a 4-KByte page.","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","Read/write; if 0, writes may not be allowed to the 4-MByte …","Read/write; if 0, writes may not be allowed to the 4-KByte …","Is zero?","Is zero?","Is zero?","Offset within the 4 MiB page.","Offset within the 4 MiB page.","Offset within the 4 MiB page.","","","","","","Creates a new PDEntry.","Creates a new PTEntry.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","Given virtual address calculate corresponding entry in PD.","Given virtual address calculate corresponding entry in PT.","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Physical Address zero.","IO Address zero.","Virtual Address zero.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Description of the data-structures for IA-32e paging mode.","","Processor state stored in the RFLAGS register.","","Program x86 enclaves.","Invokes an OS system-call handler at privilege level 0.","Helpers to program the task state segment. See Intel 3a, …","Virtualize processor hardware for multiple software …","","","","","","","","","Accessed; indicates whether this entry has been used for …","Accessed; indicates whether this entry has been used for …","Accessed; if PS set indicates whether software has …","Accessed; if PS set indicates whether software has …","Accessed; indicates whether software has accessed the …","Log2 of base page size (12 bits).","Size of a base page (4 KiB)","Size of a cache-line","Dirty; if PS indicates whether software has written to the …","Dirty; if PS indicates whether software has written to the …","Dirty; indicates whether software has written to the …","Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the …","Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the …","Global; if CR4.PGE = 1, determines whether the translation …","Size of a huge page (1 GiB)","A type wrapping a huge page with a 1 GiB buffer.","A wrapper for an IO address (IOVA / DMA Address for …","Size of a large page (2 MiB)","A type wrapping a large page with a 2 MiB buffer.","MAXPHYADDR, which is at most 52; (use CPUID for finding …","Present; must be 1 to reference a page-directory-pointer …","Present; must be 1 to reference a PML5 entry","Present; must be 1 to map a 1-GByte page or reference a …","Present; must be 1 to map a 2-MByte page or reference a …","Present; must be 1 to map a 4-KByte page.","Page tables have 512 = 4096 / 64 entries.","Indirectly determines the memory type used to access the …","Indirectly determines the memory type used to access the …","A wrapper for a physical address.","Page-level cache disable; indirectly determines the memory …","Page-level cache disable; indirectly determines the memory …","Page-level cache disable.","Page-level cache disable.","Page-level cache disable.","A page directory.","A PD Entry consists of an address and a bunch of flags.","PD configuration bits description.","A page directory pointer table.","A PDPT Entry consists of an address and a bunch of flags.","PDPT configuration bit description.","A PML4 table.","A PML4 Entry consists of an address and a bunch of flags.","PML4 configuration bit description.","Size of a region covered by a PML4 Entry (512 GiB)","A PML5 table","A PML5 Entry consists of an address and a bunch of flags.","PML5 configuration bit description.","Page size; if set this entry maps a 1-GByte page; …","Page size; if set this entry maps a 2-MByte page; …","A page table.","A PT Entry consists of an address and a bunch of flags.","PT Entry bits description.","Page-level write-through; indirectly determines the memory …","Page-level write-through; indirectly determines the memory …","Page-level write-through.","Page-level write-through.","Page-level write-through.","A type wrapping a base page with a 4 KiB buffer.","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the 1-GByte …","Read/write; if 0, writes may not be allowed to the 2-MByte …","Read/write; if 0, writes may not be allowed to the 4-KByte …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; user-mode accesses are not allowed to the …","User/supervisor; user-mode accesses are not allowed to the …","User/supervisor; user-mode accesses are not allowed to the …","A wrapper for a virtual address.","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","","","","","","","","","","","","","","","","","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 1 GiB page (higher or equal than …","Return address of nearest 1 GiB page (higher or equal than …","Return address of nearest 1 GiB page (higher or equal than …","Return address of nearest 2 MiB page (higher or equal than …","Return address of nearest 2 MiB page (higher or equal than …","Return address of nearest 2 MiB page (higher or equal than …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Convert to mutable pointer.","Convert to pointer.","Convert to <code>u64</code>","Convert to <code>u64</code>","Convert to <code>u64</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Offset within the 4 KiB page.","Offset within the 4 KiB page.","Offset within the 4 KiB page.","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","","","","","","","","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","Returns the flags corresponding to this entry.","Returns the flags corresponding to this entry.","Returns the flags corresponding to this entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","Convert from <code>u64</code>","Convert from <code>usize</code>","","","","","","","","","Offset within the 1 GiB page.","Offset within the 1 GiB page.","Offset within the 1 GiB page.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","","","","Accessed; indicates whether this entry has been used for …","Accessed; indicates whether this entry has been used for …","Accessed; indicates whether this entry has been used for …","Accessed; if PS set indicates whether software has …","Accessed; if PS set indicates whether software has …","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Dirty; if PS set indicates whether software has written to …","Dirty; if PD_PS set indicates whether software has written …","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the …","Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the …","Is this address aligned to a 1 GiB page?","Is this address aligned to a 1 GiB page?","Is this address aligned to a 1 GiB page?","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","Is this address aligned to a 2 MiB page?","Is this address aligned to a 2 MiB page?","Is this address aligned to a 2 MiB page?","Page size; if set this entry maps a 1-GByte page; …","Page size; if set this entry maps a 2-MByte page; …","Page-level cache disable; indirectly determines the memory …","Page-level cache disable; indirectly determines the memory …","Page-level cache disable.","Page-level cache disable.","Page-level cache disable.","Page-level write-through; indirectly determines the memory …","Page-level write-through; indirectly determines the memory …","Page-level write-through.","Page-level write-through.","Page-level write-through.","Indirectly determines the memory type used to access the …","Indirectly determines the memory type used to access the …","Is page present?","Is page present?","Is page present?","Present; must be 1 to map a 2-MByte page or reference a …","Present; must be 1 to map a 4-KByte page or reference a …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; user-mode accesses are not allowed to the …","User/supervisor; user-mode accesses are not allowed to the …","User/supervisor; user-mode accesses are not allowed to the …","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the 1-GByte …","Read/write; if 0, writes may not be allowed to the 2-MByte …","Read/write; if 0, writes may not be allowed to the 4-KByte …","Is zero?","Is zero?","Is zero?","Offset within the 2 MiB page.","Offset within the 2 MiB page.","Offset within the 2 MiB page.","","","","","","","","","Creates a new PML4Entry.","Creates a new PML5Entry.","Creates a new PDPTEntry.","Creates a new PDEntry.","Creates a new PTEntry.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","Given virtual address calculate corresponding entry in PD.","Given virtual address calculate corresponding entry in …","Given virtual address calculate corresponding entry in …","Given virtual address calculate corresponding entry in …","Given virtual address calculate corresponding entry in PT.","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","Split <code>PAddr</code> into lower and higher 32-bits.","Split <code>IOAddr</code> into lower and higher 32-bits.","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Physical Address zero.","IO Address zero.","Virtual Address zero.","Read the RBP register (base pointer register).","Read the RIP register (instruction pointer).","Read the RSP register (stack pointer register).","Bit 1 is always 1.","Alignment Check (AC)","Auxiliary Carry Flag (AF)","Carry Flag (CF)","Direction Flag (DF)","ID Flag (ID)","Interrupt Enable Flag (IF)","I/O Privilege Level (IOPL) 0","I/O Privilege Level (IOPL) 1","I/O Privilege Level (IOPL) 2","I/O Privilege Level (IOPL) 3","Nested Task (NT)","Overflow Flag (OF)","Parity Flag (PF)","Resume Flag (RF)","Sign Flag (SF)","Trap Flag (TF)","Virtual Interrupt Flag (VIF)","Virtual Interrupt Pending (VIP)","Virtual-8086 Mode (VM)","Zero Flag (ZF)","The RFLAGS register. This is duplicated code from bits32 …","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Creates a new Flags with the given I/O privilege level.","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Creates a new Flags entry. Ensures bit 1 is set.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Entry for IDT, GDT or LDT.","","","","","","","","“Dereferences” the fs register at offset 0.","“Dereferences” the gs register at offset 0.","","Reload code segment register.","Read FS Segment Base","Read GS Segment Base","Create a new segment, TSS or LDT descriptor by setting the …","Sets the interrupt stack table index. The 3-bit IST index …","Creates a new descriptor with selector and offset (for IDT …","Swap the GS register.","","","","Write FS Segment Base","Write GS Segment Base","Create an SECS page in the Enclave Page Cache","Add a Page to an Uninitialized Enclave.","Add a Page to an Initialized Enclave.","Mark a page in EPC as Blocked.","Read From a Debug Enclave.","Write to a Debug Enclave.","Extend Uninitialized Enclave Measurement by 256 Bytes","Initialize an Enclave for Execution","Loads and verifies an EPC page and marks the page as …","Loads, verifies an EPC page and marks the page as …","Restrict the Permissions of an EPC Page.","Change the Type of an EPC Page.","Add Version Array.","Remove a page from the EPC.","Activates EBLOCK Checks.","Invalidate an EPC Page and Write out to Main Memory.","Accept Changes to an EPC Page.","Initialize a Pending Page.","Enters an Enclave.","Exits an Enclave.","Retrieves a Cryptographic Key.","Extend an EPC Page Permissions.","Create a Cryptographic Report of the Enclave.","Re-Enters an Enclave.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Although hardware task-switching is not supported in …","","","","","","","","The 16-bit offset to the I/O permission bit map from the …","The full 64-bit canonical forms of the interrupt stack …","Creates a new empty TSS.","","","","","The full 64-bit canonical forms of the stack pointers …","Sets the stack pointer (<code>stack_ptr</code>) to be used when an …","Sets the stack pointer (<code>stack_ptr</code>) to be used for when an …","","","","Clear VMCS.","Launch virtual machine.","Load current VMCS pointer.","Return current VMCS pointer.","Read a specified field from a VMCS.","Resume virtual machine.","Write to a specified field in a VMCS.","Disable VMX operation.","Enable VMX operation.","","","","","","","","","","","","If set, enables debug register based breaks on I/O space …","Enables the instructions RDFSBASE, RDGSBASE, WRFSBASE, and …","Enable shared (PDE or PTE) address translation between …","Enables 5-Level Paging.","Enable machine check interrupts.","Enable XSAVE and Processor Extended States.","Enable: Physical Address Extension (allows to address …","Enables process-context identifiers (PCIDs).","Enable Performance-Monitoring Counters","Enables use of Protection Keys (MPK).","Enable Page Size Extensions (allows for pages larger than …","Enable Supervisor Mode Access Prevention.","Enable Supervisor Mode Execution Protection.","Enables Safer Mode Extensions (Trusted Execution …","Enables Streaming SIMD Extensions (SSE) instructions and …","Enable User-Mode Instruction Prevention (the SGDT, SIDT, …","If set, enables support for the virtual interrupt flag …","Enables Virtual Machine Extensions.","If set, disables ability to take time-stamps.","Enables unmasked SSE exceptions.","If set, enables support for the virtual interrupt flag …","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Read cr0","Write cr0.","Contains page-fault linear address.","Write cr2, for instance to reset cr2","Contains page-table root pointer.","Switch page-table PML4 pointer.","Contains various flags to control operations in protected …","Write cr4.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Read Extended Control Register XCR0. Only supported if …","Write to Extended Control Register XCR0. Only supported if …","","Processor Power Management and RAS Capabilities …","Info about cache Associativity.","","","","","","This table is taken from Intel manual (Section CPUID …","","Describes any kind of cache (TLB, Data and Instruction …","Iterates over cache information (LEAF=0x02).","What type of cache are we dealing with?","Information about an individual cache in the hierarchy.","Iterator over caches (LEAF=0x04).","Info about a what a given cache caches (instructions, …","","The main type used to query information about the CPU we’…","Low-level data-structure to store result of cpuid …","","Deterministic Address Translation Structure","Deterministic Address Translation Structure Iterator …","Deterministic Address Translation cache type (EDX bits 04 …","Data cache","","Direct cache access info (LEAF=0x09).","","","","EBX:EAX and EDX:ECX provide information on the Enclave …","Structured Extended Feature Identifiers (LEAF=0x07).","Extended Processor and Processor Feature Identifiers …","Where the extended register state is stored.","What kidn of extended register state this is.","ExtendedState subleaf structure for things that need to be …","Information for saving/restoring extended register state …","Yields ExtendedState structs.","Information about topology (LEAF=0x0B).","Gives information about the current level in the topology.","Processor and Processor Feature Identifiers (LEAF=0x01).","","","","","Identifies the different Hypervisor products.","Information about Hypervisor (LEAF=0x4000_0001)","","Instruction cache","","","","L1 Cache and TLB Information (LEAF=0x8000_0005).","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","L2 Cache Allocation Technology Enumeration Sub-leaf …","L3 Cache Allocation Technology Enumeration Sub-leaf …","Information about L3 cache monitoring.","Memory Bandwidth Allocation Enumeration Sub-leaf …","Encrypted Memory Capabilities","Information about how monitor/mwait works on this CPU …","","","","Null - No more caches","Null (indicates this sub-leaf is not valid).","Info about performance monitoring – how many counters …","","","Processor name (LEAF=0x8000_0002..=0x8000_0004).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Processor Serial Number (LEAF=0x3).","Intel Processor Trace Information (LEAF=0x14).","","QEMU is the hypervisor identity when QEMU is used without …","","Quality of service enforcement information (LEAF=0x10).","Intel Resource Director Technology RDT (LEAF=0x0F).","4-31 = Reserved","Hyper-thread (Simultaneous multithreading)","","Intel SGX Capability Enumeration Leaf (LEAF=0x12).","Intel SGX EPC Enumeration Leaf","Iterator over the SGX sub-leafs (ECX &gt;= 2).","Iterator for SoC vendor attributes.","A vendor brand string as queried from the cpuid leaf.","SoC vendor specific information (LEAF=0x17).","Information about the SVM features that the processory …","","Query information about thermal and power management …","What type of core we have at this level in the topology …","Time Stamp Counter/Core Crystal Clock Information …","Data and Instruction cache","Some unified TLBs will allow a single TLB entry to satisfy …","","","","","","Vendor Info String (LEAF=0x0)","","","","(Virtual) Bus (local apic timer) frequency in kHz.","APIC ID size.","Return the processor brand string as a rust string.","Return vendor identification as human readable string.","Return the SocVendorBrand as a string.","","","Ways of associativity (Bits 31-22)","Version Information: Family","Version Information: Model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns brand ID on AMD.","Brand Index","Bus (Reference) Frequency (in MHz).","C-bit location in page table entry","Translation cache level (starts at 1)","Translation cache type field.","Cache Type","Length of the capacity bit mask.","Length of the capacity bit mask.","CLFLUSH line size (Value ∗ 8 = cache line size in bytes)","","","","","","","","","","","","System Coherency Line Size (Bits 11-00)","Number of configurable Address Ranges for filtering (Bits …","Conversion factor from reported IA32_QM_CTR value to …","Bit width of general-purpose, performance monitoring …","Specifies the ratio of the compute unit power accumulator …","Macro which queries cpuid directly.","L1 data cache associativity.","L1 data cache line size in bytes.","L1 data cache lines per tag.","L1 data cache size in KB","","An unsigned integer which is the denominator of the …","Description of the cache (from Intel Manual)","Data TLB associativity for 2-MB and 4-MB pages.","L2 Data TLB associativity for 2-MB and 4-MB pages.","Data TLB number of entries for 2-MB and 4-MB pages.","L2 Data TLB number of entries for 2-MB and 4-MB pages.","Data TLB associativity for 4K pages.","L2 Data TLB associativity for 4K pages.","Data TLB number of entries for 4K pages.","L2 Data TLB number of entries for 4K pages.","Number of Interrupt Thresholds in Digital Thermal Sensor","Return value EAX register","Return value EBX register","Length of EBX bit vector to enumerate architectural …","Return value ECX register","Return value EDX register","","","","","","","","","","","","","","","","","","","","","","","","Version Information: Extended Family","Version Information: Extended Model","Extended Processor Signature.","Enumeration of Monitor-Mwait extensions (beyond EAX and …","","Number of fixed-function performance counters (if Version …","Bit width of fixed-function performance counters (if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Advanced Power Management Information (LEAF=0x8000_0007).","Query basic information about caches (LEAF=0x02).","Retrieve more elaborate information about caches …","Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR (address …","Query deterministic address translation feature …","Direct cache access info (LEAF=0x09).","Find out about more features supported by this CPU …","Extended Processor and Processor Feature Identifiers …","Information for saving/restoring extended register state …","Information about topology (LEAF=0x0B).","Query a set of features that are available on this CPU …","Returns information provided by the hypervisor, if running …","L1 Instruction Cache Information (LEAF=0x8000_0005)","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","Informations about memory encryption support …","Information about how monitor/mwait works on this CPU …","Info about performance monitoring (LEAF=0x0A).","Retrieve processor brand string (LEAF=0x8000_000{2..4}).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Retrieve serial number of processor (LEAF=0x03).","Intel Processor Trace Enumeration Information (LEAF=0x14).","","Quality of service enforcement information (LEAF=0x10).","Quality of service monitoring information (LEAF=0x0F).","Information about secure enclave support (LEAF=0x12).","","Contains SoC vendor specific information (LEAF=0x17).","","This function provides information about the SVM features …","Query information about thermal and power management …","Time Stamp Counter/Core Crystal Clock Information …","","","Return information about the vendor (LEAF=0x00).","Guest Physical Address Bits","Has 100 MHz multiplier Control?","1GB page size entries supported by this structure","Is there support for 1GiB pages.","2MB page size entries supported by this structure","3DNow extensions.","4K page size entries supported by this structure","4MB page size entries supported by this structure","Check support for 64-bit mode.","SEV guest execution only allowed from a 64-bit host if set.","Thermal Monitor and Software Controlled Clock Facilities. …","Breakpoint Addressing masking extended to bit 31.","Supports ADX.","A value of 1 indicates that the processor supports the …","LOCK MOV CR0 means MOV CR8. See “MOV(CRn)” in APM3.","Alternate Injection supported if set.","3DNow AMD extensions.","AnyThread deprecation","APIC On-Chip. The processor contains an Advanced …","ARAT. APIC-Timer-always-running feature is supported if …","Support for the AMD advanced virtual interrupt controller …","A value of 1 indicates the processor supports the AVX …","AVX2","AVX512_IFMA","AVX512BW","AVX512CD","Supports AVX512DQ.","AVX512ER","Supports AVX512F.","AVX512PF","AVX512VL","BMI1","BMI2","CLZERO instruction supported if set.","CLFLUSH Instruction. CLFLUSH Instruction is supported.","Supports CLFLUSHOPT.","CLWB","Conditional Move Instructions. The conditional move …","Check support legacy cmp.","CMPXCHG16B Available. A value of 1 indicates that the …","CMPXCHG8B Instruction. The compare-and-exchange 8 bytes …","L1 Context ID. A value of 1 indicates the L1 data cache …","Is Code and Data Prioritization Technology supported?","Complex Cache Indexing (Bit 2) False: Direct mapped cache. …","If true, Indicates support of Configurable PSB and …","Has Core performance boost?","CPL Qualified Debug Store. A value of 1 indicates the …","Data access breakpoint extension.","A value of 1 indicates the processor supports the ability …","Debugging Extensions. Support for I/O breakpoints, …","Full debug state swap supported for SEV-ES guests.","Indicates support for the decode assists if set.","Debug Store. The processor supports the ability to write …","64-bit DS Area. A value of 1 indicates the processor …","Digital temperature sensor is supported if set.","ECMD. Clock modulation duty cycle extension is supported …","Enhanced Intel SpeedStep® technology. A value of 1 …","Supports ENCLS instruction leaves ETRACKC, ERDINFO, ELDBC, …","Supports ENCLV instruction leaves EINCVIRTCHILD, …","The processor supports performance-energy bias preference …","Is there support for execute disable bit.","Extended APIC space.","A value of 1 indicates that processor supports 16-bit …","FXSAVE and FXRSTOR instruction optimizations.","FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87 …","Indicates support for processor feedback interface.","Flexible HWP is supported if set.","Indicates that TLB flush events, including CR3 writes and …","A value of 1 indicates the processor supports FMA …","Four-operand FMA instruction support.","Floating Point Unit On-Chip. The processor contains an x87 …","Deprecates FPU CS and FPU DS values if 1.","Frequency ID control.","FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if …","FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR …","GIF – virtualized global interrupt flag if set.","Guest Mode Execution Trap supported if set.","HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1, …","HLE","When host <code>CR4.MCE=1</code> and guest <code>CR4.MCE=0</code>, machine check …","Max APIC IDs reserved field is Valid. A value of 0 for HTT …","Hardware Coordination Feedback Capability","Hardware cache coherency across encryption domains …","Has Hardware P-state control?","Has Hardware assert supported?","HWP. HWP base registers (IA32_PM_ENABLE[bit 0], …","HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is …","HWP Capabilities. Highest Performance change is supported …","HWP Energy Performance Preference. IA32_HWP_REQUEST[bits …","Fast access mode for the IA32_HWP_REQUEST MSR is supported …","HWP Notification. IA32_HWP_INTERRUPT MSR is supported if …","HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is …","HWP PECI override is supported if set.","A value of 1 indicates the indicates the presence of a …","Instruction based sampling.","Ignoring Idle Logical Processor HWP request is supported …","Instruction Retired Counter MSR available if set.","WBINVD/WBNOINVD are interruptible if set.","Is Invariant TSC available?","INVLPGB and TLBSYNC instruction supported if set.","INVLPGB support for invalidating guest nested translations …","INVPCID. If 1, supports INVPCID instruction for system …","If true, Indicates support of IP Filtering, TraceStop …","Supports L2 Cache Allocation.","Supports L3 Cache Allocation.","Supports L3 Cache Intel RDT Monitoring.","Is LAHF/SAHF available in 64-bit mode?","Indicates support for LBR Virtualization.","Reports whether the response of the delay values is linear.","If true, Generated packets which contain IP payloads have …","Supports local bandwidth monitoring.","Lightweight profiling support","Is LZCNT available?","Machine Check Architecture. A value of 1 indicates the …","Is MCA overflow recovery available?","Machine Check Exception. Exception 18 is defined for …","MCOMMIT instruction supported if set.","Supports Memory Bandwidth Allocation.","Misaligned SSE mode. See “Misaligned Access Support …","Intel MMX Technology. The processor supports the Intel MMX …","AMD extensions to MMX instructions.","MONITOR/MWAIT. A value of 1 indicates the processor …","Support for MWAITX and MONITORX instructions.","A value of 1 indicates that the processor supports MOVBE …","MPX. Supports Intel Memory Protection Extensions if 1.","Model Specific Registers RDMSR and WRMSR Instructions. The …","If true, Indicates support of MTC timing packet and …","Memory Type Range Registers. MTRRs are supported. The …","NB performance counter extensions support.","Nested paging supported if set.","Indicates support for NRIP save on #VMEXIT if set.","Supports occupancy monitoring.","OS has set CR4.PKE to enable protection keys (and the …","Indicates OS-visible workaround support","A value of 1 indicates that the OS has enabled …","Physical Address Extension. Physical addresses greater …","The Page Flush MSR is available if set.","Page Attribute Table. Page Attribute Table is supported. …","Indicates support for the pause intercept filter if set.","Indicates support for the PAUSE filter cycle count …","Pending Break Enable. The processor supports the use of …","Process-context identifiers. A value of 1 indicates that …","PCLMULQDQ. A value of 1 indicates the processor supports …","Perfmon and Debug Capability: A value of 1 indicates the …","Processor performance counter extensions support.","Support for L3 performance counter extension.","Performance time-stamp counter.","Page Global Bit. The global bit is supported in …","Supports protection keys for user-mode pages.","PLN. Power limit notification controls are supported if …","A value of 1 indicates that the processor supports the …","Support of Power Event Trace. Writes can set IA32_RTIT_CTL…","Has Processor power reporting interface?","Is PREFETCHW available?","Has PREFETCHWT1 (Intel® Xeon Phi™ only).","Disallowing IBS use by the host supported if set.","Supports Intel Processor Trace.","Page Size Extension. Large pages of size 4 MByte are …","36-Bit Page Size Extension. 4-MByte pages addressing …","Processor Serial Number. The processor supports the 96-bit …","PTM. Package thermal management is supported if set.","Indicates support of PTWRITE. Writes can set IA32_RTIT_CTL…","RDPID and IA32_TSC_AUX are available.","RDPRU instruction supported if set.","A value of 1 indicates that processor supports RDRAND …","Supports RDSEED.","Supports Intel Resource Director Technology (RDT) …","Supports Intel Resource Director Technology (RDT) …","Check support for rdtscp instruction.","Supports Enhanced REP MOVSB/STOSB if 1.","FP Error Pointers Restored by XRSTOR if set.","Restricted Injection supported if set.","Has Read-only effective frequency interface?","If true, Indicates that IA32_RTIT_CTL.CR3Filter can be set …","RTM","Secure Encrypted Virtualization is supported if set.","SEV Encrypted State is supported if set.","SEV Secure Nested Paging supported if set.","Supports Intel® Software Guard Extensions (Intel® SGX …","Has SGX1 support.","Has SGX2 support.","Supports SGX Launch Configuration.","Supports SHA Instructions.","If true, Indicates support of Single-Range Output scheme.","SKINIT and STGI are supported.","SMAP. Supports Supervisor-Mode Access Prevention (and the …","Secure Memory Encryption is supported if set.","SMEP. Supports Supervisor-Mode Execution Prevention if 1.","Safer Mode Extensions. A value of 1 indicates that the …","SPEC_CTRL virtualization supported if set.","Self Snoop. The processor supports the management of …","SSE. The processor supports the SSE extensions.","SSE2. The processor supports the SSE2 extensions.","Streaming SIMD Extensions 3 (SSE3). A value of 1 indicates …","A value of 1 indicates that the processor supports SSE4.1.","A value of 1 indicates that the processor supports SSE4.2.","XTRQ, INSERTQ, MOVNTSS, and MOVNTSD instruction support.","SVM supervisor shadow stack restrictions if set.","A value of 1 indicates the presence of the Supplemental …","Has Software uncorrectable error containment and recovery …","Secure virtual machine supported.","Indicates support for SVM-Lock if set.","Are fast system calls available.","SYSENTER and SYSEXIT Instructions. The SYSENTER and …","Trailing bit manipulation instruction support.","Has THERMTRIP?","Support for INVLPGB/TLBSYNC hypervisor enable in VMCB and …","Thermal Monitor. The processor implements the thermal …","Hardware thermal control (HTC)?","Thermal Monitor 2. A value of 1 indicates whether the …","If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = …","If true, ToPA tables can hold any number of output …","Topology extensions support.","Supports total bandwidth monitoring.","If true, Indicates support of output to Trace Transport …","Is Temperature Sensor available?","Time Stamp Counter. The RDTSC instruction is supported, …","IA32_TSC_ADJUST MSR is supported if 1.","A value of 1 indicates that the processors local APIC …","Indicates support for MSR TSC ratio (MSR <code>0xC000_0104</code>) if …","Intel Turbo Boost Technology Available (see description of …","Intel® Turbo Boost Max Technology 3.0 available.","Supports user-mode instruction prevention if 1.","EFER.LMSLE is unsupported if set.","Indicates support for VMCB clean bits if set.","Virtual 8086 Mode Enhancements. Virtual 8086 mode …","VM Permission Levels supported if set.","VMSAVE and VMLOAD virtualization supported if set.","Virtual Machine Extensions. A value of 1 indicates that …","Voltage ID control.","Virtual Transparent Encryption supported if set.","WBNOINVD instruction supported if set.","Watchdog timer support.","A value of 1 indicates that the processor supports x2APIC …","Supports XGETBV with ECX = 1 if set.","Extended operation support.","A value of 1 indicates that the processor supports the …","Supports XSAVEC and the compacted form of XRSTOR if set.","CPU has xsaveopt feature.","Supports XSAVES/XRSTORS and IA32_XSS if set.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Support for HDC in IA32_XSS.","Support for PT in IA32_XSS.","L1 instruction cache associativity.","L1 instruction cache line size in bytes.","L1 instruction cache lines per tag.","L1 instruction cache size in KB","Returns the identity of the <code>Hypervisor</code>.","Initial APIC ID","Supports treating interrupts as break-event for MWAIT, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maximum page count for INVLPGB instruction.","Branch instruction retired event not available if 1.","Branch mispredict retired event not available if 1.","Last-level cache reference event not available if 1.","Returns true when the compacted format of an XSAVE area is …","Core cycle event not available if 1.","Fully associative structure","Fully Associative cache","True if the bit n (corresponding to the sub-leaf index) is …","True if bit n is supported in XCR0.","Cache Inclusiveness (Bit 1) False: Cache is not inclusive …","Instruction retired event not available if 1.","Last-level cache misses event not available if 1.","Reference cycles event not available if 1.","Self Initializing cache level (does not need SW …","Write-Back Invalidate/Invalidate (Bit 0) False: …","Bit-granular map of isolation/contention of allocation …","Bit-granular map of isolation/contention of allocation …","Iterator over extended state enumeration levels &gt;= 2.","Iterator over SGX sub-leafs.","Instruction TLB associativity for 2-MB and 4-MB pages.","L2 Instruction TLB associativity for 2-MB and 4-MB pages.","Instruction TLB number of entries for 2-MB and 4-MB pages.","L2 Instruction TLB number of entries for 2-MB and 4-MB …","Instruction TLB associativity for 4K pages.","L2 Instruction TLB associativity for 4K pages.","Instruction TLB number of entries for 4K pages.","L2 Instruction TLB number of entries for 4K pages.","L2 Cache Allocation Information.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Cache size in KB.","L3 Cache Allocation Information.","L3 Cache Monitoring.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Specifies the L3 cache size range","Largest monitor-line size in bytes (default is processor’…","Cache Level (starts at 1)","Level number.","","Linear Address Bits","","The value of MAWAU used by the BNDLDX and BNDSTX …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for processor cores in …","The maximum supported enclave size in 64-bit mode is …","The maximum supported enclave size in non-64-bit mode is …","Number of encrypted guests supported simultaneouslys","Reports the maximum MBA throttling value supported for the …","Maximum number of addressable IDs for logical processors …","The maximum ECX value recognized by RDPRU.","The size of the <code>apic_id_size</code> field determines the maximum …","Maximum range (zero-based) of RMID of L3.","Memory Bandwidth Allocation Information.","Minimum ASID value for an SEV enabled, SEV-ES disabled …","Bit vector of supported extended SGX features.","","Uses Rust’s <code>cpuid</code> function from the <code>arch</code> module.","","","","","","","","","","","","","","","","","","","","Return new CpuId struct.","Iterate over all cache information.","Iterate over all cache info subleafs for this CPU.","","","","Iterate over each sub-leaf with an address translation …","Iterate over all SoC vendor specific attributes.","An unsigned integer which is the nominal frequency of the …","Number as retrieved from cpuid","Number of physical threads.","Number of general-purpose performance monitoring counter …","An unsigned integer which is the numerator of the …","The offset in bytes of this extended state components save …","Partitioning (0: Soft partitioning between the logical …","Performance time-stamp counter size (in bits).","Physical Address Bits","Physical Address bit reduction","The physical address of the base of the EPC section","Physical Line partitions (Bits 21-12)","Returns package type on AMD.","Processor Base Frequency (in MHz).","Maximum Frequency (in MHz).","Number of logical processors at this level type. The …","Returns which register this specific extended subleaf …","SVM revision number.","Maximum range (zero-based) of RMID within this physical …","Reports the valid bits of SECS.ATTRIBUTES[127:0] that …","Combination of bits 00-31 and 32-63 of 96 bit processor …","96 bit processor serial number.","Bits 00-31 of 96 bit processor serial number.","Bits 32-63 of 96 bit processor serial number.","Bits 64-96 of 96 bit processor serial number.","Number of Sets.","Number of Sets (Bits 31-00)","Number of bits to shift right on x2APIC ID to get a unique …","The size in bytes (from the offset specified in EBX) of …","Size of the corresponding EPC section within the Processor …","Smallest monitor-line size in bytes (default is processor…","Version Information: Stepping ID","","Number of available address space identifiers (ASID).","Number of C0 sub C-states supported using MWAIT (Bits 03 - …","Number of C1 sub C-states supported using MWAIT (Bits 07 - …","Number of C2 sub C-states supported using MWAIT (Bits 11 - …","Number of C3 sub C-states supported using MWAIT (Bits 15 - …","Number of C4 sub C-states supported using MWAIT (Bits 19 - …","Number of C5 sub C-states supported using MWAIT (Bits 23 - …","Number of C6 sub C-states supported using MWAIT (Bits 27 - …","Number of C7 sub C-states supported using MWAIT (Bits 31 - …","Bitmap of supported Cycle Threshold value encodings (Bits …","Bitmap of supported MTC period encodings (Bit 31:16).","Bitmap of supported Configurable PSB frequency encodings …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","“TSC frequency” = “core crystal clock frequency” * …","TSC frequency in kHz.","Cache type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version ID of architectural performance monitoring. (Bits …","Ways of associativity.","Return new CpuId struct with custom reader function.","x2APIC ID the current logical processor. (Bits 31-00)","Support for AVX512 OPMASK in XCR0.","Support for AVX512 ZMM Hi16 in XCR0.","Support for AVX512 ZMM Hi256 XCR0.","Support for AVX 256-bit in XCR0.","Support for legacy x87 in XCR0.","Support for MPX BNDCSR in XCR0.","Support for MPX BNDREGS in XCR0.","Support for PKRU in XCR0.","Support for SSE 128-bit in XCR0.","Maximum size (bytes, from the beginning of the …","Maximum size (bytes, from the beginning of the …","The size in bytes of the XSAVE area containing all states …","","","","","","","","","B0 breakpoint condition detected","B1 breakpoint condition detected","B2 breakpoint condition detected","B3 breakpoint condition detected","BD debug register access detected","An array list of all available breakpoint registers.","BS single step","BT task switch","Specifies the  breakpoint condition for a corresponding …","Specify the size of the memory location at the address …","Specifies available hardware breakpoints.","00 — 1-byte length.","01 — 2-byte length.","11 — 4-byte length.","10 — 8 byte length (or undefined, on older processors).","11 — Break on data reads or writes but not instruction …","01 — Break on data writes only.","","","","","Debug register 6 (dr6) flags.","","Empty Dr7 has bit 10 always set.","Bit that controls debug-register protection.","Bit that controls global exact breakpoints.","00 — Break on instruction execution only.","10 — Break on I/O reads or writes.","Bit that controls local exact breakpoints.","Enables (when set) advanced debugging of RTM transactional …","Bit that controls debugging of RTM transactional regions.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Configures the breakpoint by writing <code>dr</code> registers.","Configures a breakpoint condition <code>bc</code> and size <code>bs</code> for the …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Disables the breakpoint condition for the associated …","Disable breakpoint in global mode.","Disable breakpoint in local mode.","Read dr{0-3} register based on enum variant.","Read dr0.","Write dr0.","Read dr1.","Write dr1.","Read dr2.","Write dr2.","Read dr3.","Write dr3.","Read dr6.","Write dr6.","Read dr7.","Write dr7.","Returns an empty set of flags.","Enables the breakpoint condition for the associated …","Global exact breakpoint enable.","Local exact breakpoint enable.","Enables debug-register protection, which causes a debug …","Enable the breakpoint in global mode.","Enable the breakpoint in local mode.","Enables advanced debugging of RTM transactional regions.","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Write dr{0-3} register based on provided enum variant.","A struct describing a pointer to a descriptor table (GDT / …","Pointer to the memory region containing the DT.","","","","","","","Returns the segment selector from the local descriptor …","Load the GDTR register with the specified base and limit.","Load the IDTR register with the specified base and limit.","Size of the DT.","Loads the segment selector into the selector field of the …","","","Retrieve base and limit from the GDTR register.","Retrieve base and limit from the IDTR register.","","","","lfence – Load Fence","mfence – Memory Fence","sfence – Store Fence","Read 8 bits from port","Read 32 bits from port","Read 16 bits from port","Write 8 bits to port","Write 32 bits to port","Write 16 bits to port","","","","","","","","","x86 External Interrupts (1-32).","","0: The fault was not caused by an instruction fetch. 1: …","","","x86 Exception description (see also Intel Vol. 3a Chapter …","","","","0: The fault was caused by a non-present page. 1: The …","","0: The fault was not by protection keys. 1: There was a …","","0: The fault was not caused by reserved bit violation. 1: …","","","","0: The access causing the fault originated when the …","","0: The access causing the fault was a read. 1: The access …","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Disable Interrupts.","Returns an empty set of flags.","Enable Interrupts.","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Section 10.4.4, Local APIC Status and Location.","BIOS Update Trigger Register.","","Processor Hard Power-On Configuration  (R/W) Enables and …","Actual Performance Frequency Clock Count (RW)  See Table …","APIC Location and Status (R/W) See Table 35-2. See Section …","(If CPUID.0AH: EAX[15:8] &gt;  0) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  1) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  2) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  3) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  4) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  5) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  6) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  7) &amp; IA32_PERF_CAPABILITIES[ 13…","BIOS Update Signature ID (R/W) See Table 35-2.","BIOS Update Trigger Register (W)  See Table 35-2.","Clock Modulation (R/W)  See Table 35-2. …","","System Call Target Address the compatibility mode.","06_2EH","Debug Control (R/W)  Controls how several debug features …","DS Save Area (R/W) See Table 35-2. Points to the DS buffer …","If (  CPUID.80000001.EDX.[bit  20] or  CPUID.80000001.EDX.…","if CPUID.6H:ECX[3] = 1","Control Features in IA-32 Processor (R/W) See Table 35-2 …","Fixed-Function Performance Counter Register 0 (R/W)  See …","Fixed-Function Performance Counter Register 1 (R/W)  See …","Fixed-Function Performance Counter Register 2 (R/W)  See …","Fixed-Function-Counter Control Register (R/W)  See Table …","System Call Flag Mask (R/W)  See Table 35-2.","Map of BASE Address of FS (R/W)  See Table 35-2.","Map of BASE Address of GS (R/W)  See Table 35-2.","Swap Target of BASE Address of GS (R/W) See Table 35-2.","IA-32e Mode System Call Target Address (R/W)  See Table …","See Section 14.3.2.3., IA32_MCi_ADDR MSRs .  The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.   The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_0FH","06_0FH","See Table 35-2.","06_0FH","06_0FH","06_1DH","06_1DH","See Table 35-2.","Misc MAC information of Integrated I/O. (R/O) see Section …","06_1DH","06_1AH","06_1AH","See Table 35-2.","06_1AH","06_1AH","06_1AH","06_1AH","See Table 35-2.","06_1AH","06_1AH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","Machine Check Capabilities (R) See Table 35-2. See Section …","Machine Check Feature Enable (R/W) See Table 35-2. See …","Machine Check Status. (R) See Table 35-2. See Section …","","See Section 8.10.5, Monitor/Mwait Address  Range …","See Section 8.10.5, Monitor/Mwait Address Range …","Maximum Performance Frequency Clock Count (RW)  See Table …","MTRR Information See Section 11.11.1, MTRR Feature  …","Default Memory Types (R/W)  Sets the memory type for the …","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs .","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs .","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Variable Range Base MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","if IA32_MTRR_CAP[7:0] &gt;  8","if IA32_MTRR_CAP[7:0] &gt;  9","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","if IA32_MTRR_CAP[7:0] &gt;  8","if IA32_MTRR_CAP[7:0] &gt;  9","See Section 35.16, MSRs in Pentium Processors.","See Section 35.16, MSRs in Pentium Processors.","If CPUID.06H: EAX[6] = 1","If CPUID.06H: EAX[6] = 1","Page Attribute Table See Section 11.11.2.2, Fixed Range …","","Performance Event Select for Counter 0 (R/W) Supports all …","Performance Event Select for Counter 1 (R/W) Supports all …","Performance Event Select for Counter 2 (R/W) Supports all …","Performance Event Select for Counter 3 (R/W) Supports all …","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2. See Section 17.4.1, IA32_DEBUGCTL MSR.","See Table 35-2. See Section 14.1, Enhanced Intel  …","See Table 35-2. See Section 18.4.2, Global Counter Control …","See Table 35-2. See Section 18.4.2, Global Counter Control …","See Table 35-2. See Section 18.4.2, Global Counter Control …","See Table 35-2. See Section 14.1, Enhanced Intel  …","06_0FH","Platform ID (R)  See Table 35-2. The operating system can …","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )","If IA32_VMX_MISC[bit 15])","SMM Monitor Configuration (R/W) See Table 35-2.","See Table 35-2.","If IA32_MTRR_CAP[SMRR]  = 1","System Call Target Address (R/W)  See Table 35-2.","CS register target for CPL 0 code (R/W) See Table 35-2. …","CPL 0 code entry point (R/W) See Table 35-2. See Section …","Stack pointer for CPL 0 stack (R/W) See Table 35-2. See …","Thermal Interrupt Control (R/W) See Section 14.5.2, …","Thermal Monitor Status (R/W) See Section 14.5.2, Thermal …","See Section 17.13, Time-Stamp Counter,  and see Table 35-2.","Per-Logical-Processor TSC ADJUST (R/W) See Table 35-2.","AUXILIARY TSC Signature. (R/W) See Table 35-2 and Section  …","TSC Target of Local APIC s TSC Deadline Mode (R/W)  See …","Reporting Register of Basic VMX Capabilities (R/O) See …","Capability Reporting Register of CR0 Bits Fixed to 0 (R/O) …","Capability Reporting Register of CR0 Bits Fixed to 1 (R/O) …","Capability Reporting Register of CR4 Bits Fixed to 0 (R/O) …","Capability Reporting Register of CR4 Bits Fixed to 1 (R/O) …","If CPUID.01H:ECX.[bit 5] = 1","If CPUID.01H:ECX.[bit 5] = 1","Capability Reporting Register of VM-entry Controls (R/O) …","If ( CPUID.01H:ECX.[bit 5],  IA32_VMX_PROCBASED_C TLS[bit …","Capability Reporting Register of EPT and VPID (R/O)  See …","Capability Reporting Register of VM-exit Controls (R/O) …","Capability Reporting Register of VM-function Controls …","Reporting Register of Miscellaneous VMX Capabilities (R/O) …","Capability Reporting Register of Pin-based VM-execution  …","Capability Reporting Register of Primary Processor-based  …","Capability Reporting Register of Secondary Processor-based …","Capability Reporting Register of VM-entry Flex Controls …","Capability Reporting Register of VM-exit Flex Controls …","Capability Reporting Register of Pin-based VM-execution …","Capability Reporting Register of Primary Processor-based  …","Capability Reporting Register of VMCS Field Enumeration …","If( CPUID.01H:ECX.[bit 5] =  1 and IA32_VMX_BASIC[bit 55] )","x2APIC ID register (R/O) See x2APIC Specification.","x2APIC Current Count register (R/O)","x2APIC Divide Configuration register (R/W)","x2APIC End of Interrupt. If ( CPUID.01H:ECX.[bit 21]  = 1 )","Error Status Register. If ( CPUID.01H:ECX.[bit 21]  = 1 )","x2APIC Interrupt Command register (R/W)","x2APIC Initial Count register (R/W)","x2APIC Interrupt Request register bits [31:0] (R/O)","x2APIC Interrupt Request register bits [63:32] (R/O)","x2APIC Interrupt Request register bits [95:64] (R/O)","x2APIC Interrupt Request register bits [127:96] (R/O)","x2APIC Interrupt Request register bits [159:128] (R/O)","x2APIC Interrupt Request register bits [191:160] (R/O)","x2APIC Interrupt Request register bits [223:192] (R/O)","x2APIC Interrupt Request register bits [255:224] (R/O)","x2APIC In-Service register bits [31:0] (R/O)","x2APIC In-Service register bits [63:32] (R/O)","x2APIC In-Service register bits [95:64] (R/O)","x2APIC In-Service register bits [127:96] (R/O)","x2APIC In-Service register bits [159:128] (R/O)","x2APIC In-Service register bits [191:160] (R/O)","x2APIC In-Service register bits [223:192] (R/O)","x2APIC In-Service register bits [255:224] (R/O)","x2APIC Logical Destination register (R/O)","x2APIC LVT Corrected Machine Check Interrupt register (R/W)","If ( CPUID.01H:ECX.[bit 21]  = 1 )","If ( CPUID.01H:ECX.[bit 21]  = 1 )","If ( CPUID.01H:ECX.[bit 21]  = 1 )","x2APIC LVT Performance Monitor register (R/W)","x2APIC LVT Thermal Sensor Interrupt register (R/W)","x2APIC LVT Timer Interrupt register (R/W)","x2APIC Processor Priority register (R/O)","If ( CPUID.01H:ECX.[bit 21]  = 1 )","x2APIC Spurious Interrupt Vector register (R/W)","x2APIC Trigger Mode register bits [31:0] (R/O)","x2APIC Trigger Mode register bits [63:32] (R/O)","x2APIC Trigger Mode register bits [95:64] (R/O)","x2APIC Trigger Mode register bits [127:96] (R/O)","x2APIC Trigger Mode register bits [159:128] (R/O)","x2APIC Trigger Mode register bits [191:160] (R/O)","x2APIC Trigger Mode register bits [223:192] (R/O)","x2APIC Trigger Mode register bits [255:224] (R/O)","x2APIC Task Priority register (R/W)","x2APIC Version. If ( CPUID.01H:ECX.[bit 21]  = 1 )","","","","","","","Defined in MCA architecture but not implemented in the P6 …","","","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS.","","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS.","","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS.","Defined in MCA architecture but not implemented in P6 …","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS, except bits 0, 4, 57, …","","","","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Uncore B-box 0 perfmon local box control MSR.","Uncore B-box 0 perfmon local box overflow control MSR.","Uncore B-box 0 perfmon local box status MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon local box mask MSR.","Uncore B-box 0 perfmon local box match MSR.","Uncore B-box 1 perfmon local box control MSR.","Uncore B-box 1 perfmon local box overflow control MSR.","Uncore B-box 1 perfmon local box status MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon event select MSR.","Uncore B-box 1 perfmon event select MSR.","Uncore B-box 1 perfmon event select MSR.","Uncore B-box 1vperfmon event select MSR.","Uncore B-box 1 perfmon local box mask MSR.","Uncore B-box 1 perfmon local box match MSR.","","","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Uncore C-box 0 perfmon local box control MSR.","Uncore C-box 0 perfmon local box overflow control MSR.","Uncore C-box 0 perfmon local box status MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 1 perfmon local box control MSR.","Uncore C-box 1 perfmon local box overflow control MSR.","Uncore C-box 1 perfmon local box status MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 2 perfmon local box control MSR.","Uncore C-box 2 perfmon local box overflow control MSR.","Uncore C-box 2 perfmon local box status MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 3 perfmon local box control MSR.","Uncore C-box 3 perfmon local box overflow control MSR.","Uncore C-box 3 perfmon local box status MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 4 perfmon local box control MSR.","Uncore C-box 4 perfmon local box overflow control MSR.","Uncore C-box 4 perfmon local box status MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 5 perfmon local box control MSR.","Uncore C-box 5 perfmon local box overflow control MSR.","Uncore C-box 5 perfmon local box status MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 6 perfmon local box control MSR.","Uncore C-box 6 perfmon local box overflow control MSR.","Uncore C-box 6 perfmon local box status MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 7 perfmon local box control MSR.","Uncore C-box 7 perfmon local box overflow control MSR.","Uncore C-box 7 perfmon local box status MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 8 perfmon local box control MSR.","Uncore C-box 8 perfmon local box overflow control MSR.","Uncore C-box 8 perfmon local box status MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 9 perfmon local box control MSR.","Uncore C-box 9 perfmon local box overflow control MSR.","Uncore C-box 9 perfmon local box status MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","ConfigTDP Control (R/W)","ConfigTDP Level 1 ratio and power level (R/O)","ConfigTDP Level 2 ratio and power level (R/O)","Nominal TDP Ratio (R/O)","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Debug Control (R/W)  Controls how several debug features …","Debug Control (R/W)  Controls how several debug features …","DRAM Energy Status (R/O)  See Section 14.7.5, DRAM RAPL …","DRAM Performance Throttling Status (R/O) See Section …","DRAM RAPL Parameters (R/W) See Section 14.7.5, DRAM RAPL …","DRAM RAPL Power Limit Control (R/W)  See Section 14.7.5, …","Processor Frequency Configuration The bit field layout of …","Processor Hard Power-On Configuration (R/W) Enables and …","Processor Soft Power-On Configuration (R/W)  Enables and …","Processor Hard Power-On Configuration (R/W) Enables and  …","EFSB DRDY Event Control and Counter Register (R/W)  See …","EFSB DRDY Event Control and Counter  Register (R/W)","GBUSQ Event Control and Counter  Register (R/W) See …","GBUSQ Event Control/Counter Register (R/W) Apply to Intel …","GSNPQ Event Control and Counter  Register (R/W)  See …","GSNPQ Event Control/Counter Register (R/W) Apply to Intel …","FSB Event Control and Counter Register (R/W)  See Section …","FSB Event Control/Counter Register (R/W) Apply to Intel …","FSB Event Control/Counter Register (R/W) Apply to Intel …","FSB Event Control/Counter Register (R/W) Apply to Intel …","L3/FSB Common Control Register (R/W) Apply to Intel Xeon …","MC Bank Error Configuration (R/W)","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Scaleable Bus Speed(RO) This field indicates the intended …","","Trace End Address 0","Trace Start Address 0","Trace End Address 1","Trace Start Address 1","Trace End Address 3","Trace Start Address 3","Trace End Address 4","Trace Start Address 4","Trace Filter CR3 Match Register (R/W)","Trace Control Register (R/W)","Trace Output Base Register (R/W)","Trace Output Mask Pointers Register (R/W)","Tracing Status Register (R/W)","TSX Ctrl Register for TSX Async Abot (TAA) Migration. See …","IFSB BUSQ Event Control and Counter  Register (R/W) See …","IFSB BUSQ Event Control and Counter Register (R/W)","IFSB Latency Event Counter Register  (R/W)  See Section …","IFSB Latency Event Control Register  (R/W) See Section …","IFSB SNPQ Event Control and Counter  Register (R/W)  See …","IFSB SNPQ Event Control and Counter  Register (R/W)","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs. This MSR is not available …","See Section 18.12.1, ESCR MSRs. This MSR is not available …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Last Branch Record 0 (R/W)  One of four last branch record …","Last Branch Record 0 From IP (R/W) One of eight pairs of …","Last Branch Record 0 (R/W)  One of 16 pairs of last branch …","Last Branch Record 1 (R/W) See description of …","Last Branch Record 10 From IP (R/W) See description of …","Last Branch Record 10 To IP (R/W) See description of …","Last Branch Record 11 From IP (R/W) See description of …","Last Branch Record 11 To IP (R/W) See description of …","Last Branch Record 12 From IP (R/W) See description of …","Last Branch Record 12 To IP (R/W) See description of …","Last Branch Record 13 From IP (R/W) See description of …","Last Branch Record 13 To IP (R/W) See description of …","Last Branch Record 14 From IP (R/W) See description of …","Last Branch Record 14 To IP (R/W) See description of …","Last Branch Record 15 From IP (R/W) See description of …","Last Branch Record 15 To IP (R/W) See description of …","Last Branch Record 1 From IP (R/W) See description of …","Last Branch Record 1 To IP (R/W) See description of …","Last Branch Record 2 See description of the …","Last Branch Record 2 From IP (R/W) See description of …","Last Branch Record 2 To IP (R/W) See description of …","Last Branch Record 3 See description of the …","Last Branch Record 3 From IP (R/W) See description of …","Last Branch Record 3 To IP (R/W) See description of …","Last Branch Record 4 (R/W) See description of …","Last Branch Record 4 From IP (R/W) See description of …","Last Branch Record 4 To IP (R/W) See description of …","Last Branch Record 5 (R/W) See description of …","Last Branch Record 5 From IP (R/W) See description of …","Last Branch Record 5 To IP (R/W) See description of …","Last Branch Record 6 (R/W) See description of …","Last Branch Record 6 From IP (R/W) See description of …","Last Branch Record 6 To IP (R/W) See description of …","Last Branch Record 7 (R/W) See description of …","Last Branch Record 7 From IP (R/W) See description of …","Last Branch Record 7 To IP (R/W) See description of …","Last Branch Record 8 From IP (R/W) See description of …","Last Branch Record 8 To IP (R/W) See description of …","Last Branch Record 9 From IP (R/W) See description of …","Last Branch Record 9 To IP (R/W) See description of …","Last Branch Record Stack TOS (R/W)  Contains an index (0-3 …","Last Branch Record Filtering Select Register (R/W)  See …","Last Exception Record From Linear IP (R)  Contains a …","Last Exception Record To Linear IP (R)  This area contains …","Uncore M-box 0 perfmon local box address mask MSR.","Uncore M-box 0 perfmon local box address match MSR.","Uncore M-box 0 perfmon local box control MSR.","Uncore M-box 0 perfmon local box overflow control MSR.","Uncore M-box 0 perfmon local box status MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon DSP unit select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon ISS unit select MSR.","Uncore M-box 0 perfmon MAP unit select MSR.","Uncore M-box 0 perfmon local box address match/mask config …","Uncore M-box 0 perfmon MIC THR select MSR.","Uncore M-box 0 perfmon PGT unit select MSR.","Uncore M-box 0 perfmon PLD unit select MSR.","Uncore M-box 0 perfmon time stamp unit select MSR.","Uncore M-box 0 perfmon ZDP unit select MSR.","Uncore M-box 1 perfmon local box address mask MSR.","Uncore M-box 1 perfmon local box address match MSR.","Uncore M-box 1 perfmon local box control MSR.","Uncore M-box 1 perfmon local box overflow control MSR.","Uncore M-box 1 perfmon local box status MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon DSP unit select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon ISS unit select MSR.","Uncore M-box 1 perfmon MAP unit select MSR.","Uncore M-box 1 perfmon local box address match/mask config …","Uncore M-box 1 perfmon MIC THR select MSR.","Uncore M-box 1 perfmon PGT unit select MSR.","Uncore M-box 1 perfmon PLD unit select MSR.","Uncore M-box 1 perfmon time stamp unit select MSR.","Uncore M-box 1 perfmon ZDP unit select MSR.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The MSR_MC3_ADDR …","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The MSR_MC4_ADDR …","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","Always 0 (CMCI not supported).","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The MSR_MC4_ADDR …","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","Apply to Intel Xeon processor 7400 series (processor …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","Machine Check Miscellaneous See Section 15.3.2.6, IA32_MCG …","Machine Check R10 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R11 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R12 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R13 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R14 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R8 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R9D/R9 See Section 15.3.2.6, IA32_MCG …","Machine Check EAX/RAX Save State See Section 15.3.2.6, …","Machine Check EBP/RBP Save State See Section 15.3.2.6, …","Machine Check EBX/RBX Save State See Section 15.3.2.6, …","Machine Check ECX/RCX Save State See Section 15.3.2.6, …","Machine Check EDI/RDI Save State See Section 15.3.2.6, …","Machine Check EDX/RDX Save State See Section 15.3.2.6, …","Machine Check EFLAGS/RFLAG Save State See Section …","Machine Check EIP/RIP Save State See Section 15.3.2.6, …","Machine Check ESI/RSI Save State See Section 15.3.2.6, …","See http://biosbits.org.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Offcore Response Event Select Register (R/W)","Offcore Response Event Select Register (R/W)","Precise Event-Based Sampling (PEBS) (R/W)  Controls the …","see See Section 18.7.1.2, Load Latency Performance …","See Table 19-26.","","RO. This applies to processors that do not support …","Fixed-Function Performance Counter Register 0 (R/W)","Fixed-Function Performance Counter Register 1 (R/W)","Fixed-Function Performance Counter Register 2 (R/W)","Fixed-Function-Counter Control Register (R/W)","See Section 18.4.2, Global Counter Control Facilities.","See Section 18.4.2, Global Counter Control Facilities.","See Section 18.4.2, Global Counter Control Facilities.","","Package C3 Interrupt Response Limit (R/W)  Note: C-state …","Package C6 Interrupt Response Limit (R/W)  This MSR …","Package C7 Interrupt Response Limit (R/W)  This MSR …","Note: C-state values are processor specific C-state code …","Package C2 Residency Note: C-state values are processor …","Note: C-state values are processor specific C-state code …","Package C4 Residency Note: C-state values are processor …","Note: C-state values are processor specific C-state code …","Package C6 Residency Note: C-state values are processor …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","C-State Configuration Control (R/W)  Note: C-state values …","PKG Energy Status (R/O)  See Section 14.7.3, Package RAPL …","Package RAPL Perf Status (R/O)","PKG RAPL Parameters (R/W) See Section 14.7.3,  Package …","PKG RAPL Power Limit Control (R/W)  See Section 14.7.3, …","Platform Feature Requirements (R)","Model Specific Platform ID (R)","see http://biosbits.org.","Power Management IO Redirection in C-state (R/W)  See …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Power Control Register. See http://biosbits.org.","PP0 Energy Status (R/O)  See Section 14.7.4, PP0/PP1 RAPL …","PP0 Performance Throttling Status (R/O) See Section …","PP0 Balance Policy (R/W)  See Section 14.7.4, PP0/PP1 RAPL …","PP0 RAPL Power Limit Control (R/W)  See Section 14.7.4, …","PP1 Energy Status (R/O)  See Section 14.7.4, PP0/PP1 RAPL …","PP1 Balance Policy (R/W)  See Section 14.7.4, PP0/PP1 RAPL …","PP1 RAPL Power Limit Control (R/W)  See Section 14.7.4, …","Uncore R-box 0 perfmon local box control MSR.","Uncore R-box 0 perfmon local box overflow control MSR.","Uncore R-box 0 perfmon local box status MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 0 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 1 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 2 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 3 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 4 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 5 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 6 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 7 select MSR.","Uncore R-box 0 perfmon QLX unit Port 0 select MSR.","Uncore R-box 0 perfmon QLX unit Port 1 select MSR.","Uncore R-box 0 perfmon QLX unit Port 2 select MSR.","Uncore R-box 0 perfmon QLX unit Port 3 select MSR.","Uncore R-box 1 perfmon local box control MSR.","Uncore R-box 1 perfmon local box overflow control MSR.","Uncore R-box 1 perfmon local box status MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 10 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 11 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 12 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 13 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 14 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 15 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 8 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 9 select MSR.","Uncore R-box 1 perfmon QLX unit Port 4 select MSR.","Uncore R-box 1 perfmon QLX unit Port 5 select MSR.","Uncore R-box 1 perfmon QLX unit Port 6 select MSR.","Uncore R-box 1 perfmon QLX unit Port 7 select MSR.","Unit Multipliers used in RAPL Interfaces (R/O)  See …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Uncore S-box 0 perfmon local box control MSR.","Uncore S-box 0 perfmon local box overflow control MSR.","Uncore S-box 0 perfmon local box status MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon local box mask MSR.","Uncore S-box 0 perfmon local box match MSR.","Uncore S-box 1 perfmon local box control MSR.","Uncore S-box 1 perfmon local box overflow control MSR.","Uncore S-box 1 perfmon local box status MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon local box mask MSR.","Uncore S-box 1 perfmon local box match MSR.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","SMI Counter (R/O)","SMM Blocked (SMM-RO) Reports the blocked state of all …","SMM Delayed (SMM-RO) Reports the interruptible state of …","Enhanced SMM Feature Control (SMM-RW) Reports SMM …","Enhanced SMM Capabilities (SMM-RO) Reports SMM capability …","System Management Mode Physical Address Mask register  (WO …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","","Thermal Monitor 2 Control.","ConfigTDP Control (R/W)","See http://biosbits.org.","Maximum Ratio Limit of Turbo Mode RO if MSR_PLATFORM_INFO.…","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.7.2.3, Uncore Address/Opcode Match MSR.","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","Uncore Arb unit, counter 0 event select MSR","Uncore Arb unit, counter 1 event select MSR","Uncore Arb unit, performance counter 0","Uncore Arb unit, performance counter 1","Uncore C-Box 0, counter 0 event select MSR","Uncore C-Box 0, counter 1 event select MSR","Uncore C-Box 0, performance counter 0","Uncore C-Box 0, performance counter 1","Uncore C-Box 1, counter 0 event select MSR","Uncore C-Box 1, counter 1 event select MSR","Uncore C-Box 1, performance counter 0","Uncore C-Box 1, performance counter 1","Uncore C-Box 2, counter 0 event select MSR","Uncore C-Box 2, counter 1 event select MSR","Uncore C-Box 2, performance counter 0","Uncore C-Box 2, performance counter 1","Uncore C-Box 3, counter 0 event select MSR","Uncore C-Box 3, counter 1 event select MSR.","Uncore C-Box 3, performance counter 0.","Uncore C-Box 3, performance counter 1.","Uncore C-Box configuration information (R/O)","Uncore fixed counter","Uncore fixed counter control (R/W)","Uncore PMU global control","Uncore PMU main status","Uncore U-box perfmon counter MSR.","Uncore U-box perfmon event select MSR.","Uncore U-box perfmon global control MSR.","Uncore U-box perfmon global overflow control MSR.","Uncore U-box perfmon global status MSR.","Uncore W-box perfmon local box control MSR.","Uncore W-box perfmon local box overflow control MSR.","Uncore W-box perfmon local box status MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon fixed counter","Uncore U-box perfmon fixed counter control MSR","See Section 35.16, MSRs in Pentium Processors,  and see  …","See Section 35.16, MSRs in Pentium Processors,  and see  …","","CS register target for CPL 0 code","CPL 0 code entry point","Stack pointer for CPL 0 stack","Test Control Register","See Section 17.13, Time-Stamp Counter.","Read 64 bits msr register.","Write 64 bits to msr register.","RdRand trait to implement the generic rdrand_slice …","RdSeed trait to implement the generic rdseed_slice …","Fills <code>self</code> with random bits. Returns true on success or …","Fills <code>self</code> with random bits. Returns true on success or …","Generates a 16-bit random value and stores it in <code>e</code>.","Generates a 32-bit random value and stores it in <code>e</code>.","Generates a 64-bit random value and stores it in <code>e</code>.","Fill a slice with random values.","Generates a 16-bit random value and stores it in <code>e</code>.","Generates a 32-bit random value and stores it in <code>e</code>.","Generates a 64-bit random value and stores it in <code>e</code>.","Fill a slice with random values.","","","","","Code Segment types for descriptors. See also Intel 3a, …","Data Segment types for descriptors. See also Intel 3a, …","Entry for IDT, GDT or LDT. Provides size and location of a …","Makes building descriptors easier (hopefully).","Code Execute-Only","Code Execute-Only, accessed","Code Execute-Only, conforming","Code Execute-Only, conforming, accessed","Code Execute/Read","Code Execute/Read, accessed","Code Execute/Read, conforming","Code Execute/Read, conforming, accessed","Trait that defines the architecture specific functions for …","","","","","","Trait to define functions that build an architecture …","","Requestor Privilege Level","","","","Data Read-Only, expand-down","Data Read-Only, expand-down, accessed","Data Read-Only","Data Read-Only, accessed","Data Read/Write","Data Read/Write, accessed","Data Read/Write, expand-down","Data Read/Write, expand-down, accessed","Trait to define functions that build architecture specific …","Specifies which element to load into a segment from …","System-Segment and Gate-Descriptor Types 32-bit mode. See …","System-Segment and Gate-Descriptor Types 64-bit mode See …","Table Indicator (TI) 0 means GDT is used.","Table Indicator (TI) 1 means LDT is used.","","","","Trait to implement for building a task-gate (this …","","","","","","","","Returns the set containing all flags.","","Toggle the AVL bit.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the current value of the code segment register.","","","Set default operation size (false for 16bit segment, true …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Specifies the privilege level of the segment.","Returns the current value of the data segment register.","Returns an empty set of flags.","","","","","","Returns the current value of the extra segment register.","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Make a new segment selector from a untyped u16 value.","Returns the current value of the FS segment register.","Returns the current value of the GS segment register.","","Returns segment selector’s index in GDT or LDT.","Inserts the specified flags in-place.","","","","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Set a the interrupt stack table index (only if this ends …","Set L bit if this descriptor is a 64-bit code segment. In …","","","","The segment limit is interpreted in 4-KByte units if this …","Reload data segment register.","Reload es segment register.","Reload fs segment register.","Reload gs segment register.","Reload stack segment register.","","","Create a new SegmentSelector","Returns the complement of this set of flags.","","Indicates whether the segment is present in memory (set) …","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Set AVL bit. System software can use this bit to store …","Create a new segment, TSS or LDT descriptor by setting the …","Set D/B. Performs different functions depending on whether …","Specifies the privilege level of the segment. The DPL is …","Set G bit Determines the scaling of the segment limit …","Set L In IA-32e mode, bit 21 of the second doubleword of …","Set Present bit. Indicates whether the segment is present …","Specifies whether the segment descriptor is for a system …","Creates a new descriptor with selector and offset (for IDT …","Set the type of the descriptor (bits 8-11). Indicates the …","Returns the current value of the stack segment register.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Loads the task register.","Returns the current value of the task register.","Read the time stamp counter.","Read the time stamp counter.","Invalidate the given address in the TLB using the <code>invlpg</code> …","Invalidate the TLB completely by reloading the CR3 …","A specialized <code>Result</code> type for VMX operations.","Possible outcomes of VMfail pseudo-function used to convey …","VMCS pointer is not valid.","VMCS pointer is valid, but some other error was …","","","","","","","","","Virtual-machine control structure fields.","VM-execution, VM-exit, and VM-entry control fields.","Fields used to access guest-state area.","Fields used to access host-state area.","VM-exit information fields.","Acknowledge interrupt on exit.","APIC-access address (full).","APIC-access address (high).","Clear IA32_BNDCFGS.","Clear IA32_RTIT_CTL.","Conceal VMX from PT.","Conceal VMX from PT.","Conceal VMX from PT.","CR0 guest/host mask.","CR0 read shadow.","CR3-load exiting.","CR3-store exiting.","CR3-target count.","CR3-target value 0.","CR3-target value 1.","CR3-target value 2.","CR3-target value 3.","CR4 guest/host mask.","CR4 read shadow.","CR8-load exiting.","CR8-store exiting.","Deactivate dual-monitor treatment.","Descriptor-table exiting.","Enable EPT.","Enable INVPCID.","Enable PML.","Enable RDTSCP.","Enable user wait and pause.","Enable VM functions.","Enable VPID.","Enable XSAVES/XRSTORS.","Enable ENCLS exiting.","ENCLS-exiting bitmap (full).","ENCLS-exiting bitmap (high).","Enable ENCLV exiting.","Entry to SMM.","EOI-exit bitmap 0 (full).","EOI-exit bitmap 0 (high).","EOI-exit bitmap 1 (full).","EOI-exit bitmap 1 (high).","EOI-exit bitmap 2 (full).","EOI-exit bitmap 2 (high).","EOI-exit bitmap 3 (full).","EOI-exit bitmap 3 (high).","EPT pointer (full).","EPT pointer (high).","EPTP index.","EPTP-list address (full).","EPTP-list address (high).","EPT-violation #VE.","Exception bitmap.","Executive-VMCS pointer (full).","Executive-VMCS pointer (high).","External-interrupt exiting.","VM-entry controls.","VM-exit controls.","HLT exiting.","Host address-space size.","IA-32e mode guest.","Intel PT uses guest physical addresses.","Interrupt-window exiting.","INVLPG exiting.","Address of I/O bitmap A (full).","Address of I/O bitmap A (high).","Address of I/O bitmap B (full).","Address of I/O bitmap B (high).","Load debug controls.","Load IA32_BNDCFGS.","Load IA32_EFER.","Load IA32_EFER.","Load IA32_PAT.","Load IA32_PAT.","Load IA32_PERF_GLOBAL_CTRL.","Load IA32_PERF_GLOBAL_CTRL.","Load IA32_RTIT_CTL.","Mode-based execute control for EPT.","MONITOR exiting.","Monitor trap flag.","MOV-DR exiting","Address of MSR bitmaps (full).","Address of MSR bitmaps (high).","MWAIT exiting.","NMI exiting.","NMI-window exiting.","Page-fault error-code mask.","Page-fault error-code match.","PAUSE exiting.","PAUSE-loop exiting.","Pin-based VM-execution controls.","PLE_Gap.","PLE_Window.","PML address (full).","PML address (high).","Process posted interrupts.","Posted-interrupt descriptor address (full).","Posted-interrupt descriptor address (high).","Posted-interrupt notification vector.","Primary processor-based VM-execution controls.","Pin-based VM-execution controls.","Primary processor-based VM-execution controls.","RDPMC exiting.","RDRAND exiting.","RDSEED exiting.","RDTSC exiting.","Save debug controls.","Save IA32_EFER.","Save IA32_PAT.","Save VMX-preemption timer.","Activate secondary controls.","Secondary processor-based VM-execution controls.","Sub-page-permission-table pointer (full).","Sub-page-permission-table pointer (high).","Sub-page write permissions for EPT.","Secondary processor-based VM-execution controls.","TPR threshold.","TSC multiplier (full).","TSC multiplier (high).","TSC offset (full).","TSC offset (high).","Unconditional I/O exiting.","Unrestricted guest.","Use I/O bitmaps.","Use MSR bitmaps.","Use TPR shadow.","Use TSC offsetting.","Use TSC scaling.","Virtualize APIC accesses.","APIC-register virtualization.","Virtualize x2APIC mode.","Virtual-interrupt delivery.","Virtual NMIs.","Virtual-APIC address (full).","Virtual-APIC address (high).","Virtualization-exception information address (full).","Virtualization-exception information address (high).","VMCS shadowing.","VM-entry controls.","VM-entry exception error code.","VM-entry instruction length.","VM-entry interruption-information field.","VM-entry MSR-load address (full).","VM-entry MSR-load address (high).","VM-entry MSR-load count.","VM-exit controls.","VM-exit MSR-load address (full).","VM-exit MSR-load address (high).","VM-exit MSR-load count.","VM-exit MSR-store address (full).","VM-exit MSR-store address (high).","VM-exit MSR-store count.","VMREAD-bitmap address (full).","VMREAD-bitmap address (high).","VMWRITE-bitmap address (full).","VMWRITE-bitmap address (high).","Activate VMX-preemption timer.","VM-function controls (full).","VM-function controls (high).","Virtual-processor identifier (VPID).","WBINVD exiting.","XSS-exiting bitmap (full).","XSS-exiting bitmap (high).","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Guest activity state.","Guest CR0.","Guest CR3.","Guest CR4.","Guest CS access rights.","Guest CS base.","Guest CS limit.","Guest CS selector.","Guest DR7.","Guest DS access rights.","Guest DS base.","Guest DS limit.","Guest DS selector.","Guest ES access rights.","Guest ES base.","Guest ES limit.","Guest ES selector.","Guest FS access rights.","Guest FS base.","Guest FS limit.","Guest FS selector.","Guest GDTR base.","Guest GDTR limit.","Guest GS access rights.","Guest GS base.","Guest GS limit.","Guest GS selector.","Guest IA32_BNDCFGS (full).","Guest IA32_BNDCFGS (high).","Guest IA32_DEBUGCTL (full).","Guest IA32_DEBUGCTL (high).","Guest IA32_EFER (full).","Guest IA32_EFER (high).","Guest IA32_PAT (full).","Guest IA32_PAT (high).","Guest IA32_PERF_GLOBAL_CTRL (full).","Guest IA32_PERF_GLOBAL_CTRL (high).","Guest IA32_RTIT_CTL (full).","Guest IA32_RTIT_CTL (high).","Guest IA32_SYSENTER_CS.","Guest IA32_SYSENTER_EIP.","Guest IA32_SYSENTER_ESP.","Guest IDTR base.","Guest IDTR limit.","Guest interruptibility state.","Guest interrupt status.","Guest LDTR access rights.","Guest LDTR base.","Guest LDTR limit.","Guest LDTR selector.","VMCS link pointer (full).","VMCS link pointer (high).","Guest PDPTE0 (full).","Guest PDPTE0 (high).","Guest PDPTE1 (full).","Guest PDPTE1 (high).","Guest PDPTE2 (full).","Guest PDPTE2 (high).","Guest PDPTE3 (full).","Guest PDPTE3 (high).","Guest pending debug exceptions.","PML index.","Guest RFLAGS.","Guest RIP.","Guest RSP.","Guest SMBASE.","Guest SS access rights.","Guest SS base.","Guest SS limit.","Guest SS selector.","Guest TR access rights.","Guest TR base.","Guest TR limit.","Guest TR selector.","VMX-preemption timer value.","Host CR0.","Host CR3.","Host CR4.","Host CS selector.","Host DS selector.","Host ES selector.","Host FS base.","Host FS selector.","Host GDTR base.","Host GS base.","Host GS selector.","Host IA32_EFER (full).","Host IA32_EFER (high).","Host IA32_PAT (full).","Host IA32_PAT (high).","Host IA32_PERF_GLOBAL_CTRL (full).","Host IA32_PERF_GLOBAL_CTRL (high).","Host IA32_SYSENTER_CS.","Host IA32_SYSENTER_EIP.","Host IA32_SYSENTER_ESP.","Host IDTR base.","Host RIP.","Host RSP.","Host SS selector.","Host TR base.","Host TR selector.","Exit qualification.","Exit reason.","Guest-linear address.","Guest-physical address (full).","Guest-physical address (high).","IDT-vectoring error code.","IDT-vectoring information field.","I/O RCX.","I/O RDI.","I/O RIP.","I/O RSI.","VM-exit instruction information.","VM-exit instruction length.","VM-exit interruption error code.","VM-exit interruption information.","VM-instruction error."],"i":[0,1,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,2,2,0,0,3,3,0,0,0,0,4,5,0,6,5,0,4,7,5,2,5,2,7,5,6,5,0,8,8,5,5,7,6,3,4,2,9,8,5,7,6,3,4,2,9,8,10,8,10,5,7,6,3,4,2,9,8,5,7,6,3,4,2,9,8,9,9,5,7,6,3,4,2,9,8,10,5,7,6,3,4,2,9,8,8,0,10,10,10,10,9,9,8,10,5,7,6,3,4,2,9,8,5,7,6,3,4,2,9,8,10,10,5,7,6,3,4,2,9,8,9,10,0,8,8,8,0,11,12,0,13,13,13,13,13,13,13,13,13,13,13,13,13,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,16,16,16,16,16,16,16,16,17,18,19,20,21,22,23,0,0,0,22,23,22,23,0,0,0,22,23,0,22,23,0,22,23,0,0,0,22,0,0,0,22,23,0,22,23,22,23,0,17,17,17,18,18,18,19,19,19,17,17,18,18,19,19,19,20,21,17,18,19,17,18,19,17,18,19,17,18,19,22,23,17,19,17,19,17,18,19,17,18,19,17,18,19,17,17,18,18,19,19,19,19,22,23,22,23,17,17,18,18,19,19,19,22,23,22,23,22,23,22,23,22,23,24,25,17,18,19,22,20,23,21,24,25,17,18,19,22,20,23,21,17,18,19,22,20,23,21,17,18,19,22,23,22,23,22,23,22,23,22,23,17,18,19,22,23,22,23,20,21,17,17,17,17,17,17,17,18,18,18,18,18,18,18,19,19,19,19,19,19,19,22,22,22,22,22,20,23,23,23,23,23,21,24,25,17,17,17,17,18,18,18,18,19,19,19,19,22,20,23,21,22,23,22,23,22,23,22,23,19,19,17,18,19,22,23,22,23,22,23,22,23,24,25,17,17,17,18,18,18,19,19,19,22,20,23,21,20,21,17,18,19,22,23,17,18,19,20,21,22,23,20,21,17,18,19,20,20,21,20,21,20,21,20,21,20,21,20,21,17,18,19,17,18,19,17,18,19,22,23,20,21,22,23,17,18,19,22,23,0,0,17,17,17,18,18,18,19,19,19,22,23,22,23,17,18,19,19,19,17,17,17,18,18,18,19,19,19,22,23,22,23,22,23,22,23,24,25,17,18,19,22,20,23,21,24,25,17,18,19,22,20,23,21,24,25,17,18,19,22,20,23,21,22,23,17,18,19,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,0,0,0,0,0,0,27,28,29,30,31,32,33,34,35,36,37,38,39,0,0,0,37,38,39,37,38,39,0,0,0,0,0,0,35,36,37,38,39,0,37,38,0,35,36,37,38,39,0,0,0,0,0,0,0,0,0,0,0,0,0,37,38,0,0,0,35,36,37,38,39,0,35,36,37,38,39,35,36,37,38,39,0,35,36,37,38,39,27,27,27,28,28,28,29,29,29,27,27,28,28,29,29,29,30,31,32,33,34,27,28,29,27,28,29,27,28,29,27,28,29,27,28,29,27,28,29,35,36,37,38,39,29,29,27,28,29,27,28,29,27,28,29,27,27,28,28,29,29,29,29,35,36,37,38,39,35,36,37,38,39,27,27,28,28,29,29,29,35,36,37,38,39,35,36,37,38,39,35,36,37,38,39,35,36,37,38,39,35,36,37,38,39,40,41,42,27,28,29,35,36,30,31,37,32,38,33,39,34,40,41,42,27,28,29,35,36,30,31,37,32,38,33,39,34,27,28,29,35,36,30,31,37,32,38,33,39,34,27,28,29,35,36,37,38,39,35,36,37,38,39,35,36,37,38,39,35,36,37,38,39,35,36,37,38,39,27,28,29,35,36,37,38,39,35,36,37,38,39,30,31,32,33,34,27,27,27,27,27,27,27,28,28,28,28,28,28,28,29,29,29,29,29,29,29,35,35,35,35,35,36,36,36,36,36,30,31,37,37,37,37,37,32,38,38,38,38,38,33,39,39,39,39,39,34,40,41,42,27,27,27,27,28,28,28,28,29,29,29,29,35,36,30,31,37,32,38,33,39,34,35,36,37,38,39,35,36,37,38,39,35,36,37,38,39,35,36,37,38,39,29,29,27,28,29,35,36,37,38,39,27,28,29,35,36,37,38,39,35,36,37,38,39,35,36,37,38,39,40,41,42,27,27,27,28,28,28,29,29,29,35,36,30,31,37,32,38,33,39,34,30,31,32,33,34,27,28,29,35,36,37,38,39,27,28,29,33,34,35,36,37,38,39,33,34,27,28,29,30,31,32,33,34,27,28,29,32,33,30,31,32,33,34,30,31,32,33,34,32,33,30,31,32,33,34,30,31,32,33,34,30,31,32,33,34,27,28,29,27,28,29,27,28,29,35,36,37,38,39,30,31,32,33,34,35,36,37,38,39,27,28,29,35,36,37,38,39,0,0,0,0,0,27,27,27,28,28,28,29,29,29,35,36,37,38,39,35,36,37,38,39,27,28,29,29,29,27,28,27,27,27,28,28,28,29,29,29,35,36,37,38,39,35,36,37,38,39,35,36,37,38,39,35,36,37,38,39,40,41,42,27,28,29,35,36,30,31,37,32,38,33,39,34,40,41,42,27,28,29,35,36,30,31,37,32,38,33,39,34,40,41,42,27,28,29,35,36,30,31,37,32,38,33,39,34,35,36,37,38,39,27,28,29,0,0,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,43,0,43,43,43,43,43,43,43,43,43,0,44,44,44,44,44,44,44,0,0,44,0,0,0,44,44,44,0,44,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,0,0,0,0,0,0,0,0,46,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,0,48,48,48,48,48,48,48,48,48,0,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,0,0,0,0,0,0,0,0,46,47,48,46,47,48,46,47,48,46,47,48,46,46,46,46,46,47,47,47,47,47,48,48,48,48,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,46,47,48,0,0,49,0,0,50,50,50,50,49,0,51,0,0,0,0,0,0,52,0,0,51,0,0,0,53,54,0,55,55,56,0,0,0,0,0,0,0,0,0,0,0,55,51,50,49,0,0,57,53,54,52,49,0,0,0,0,0,0,0,0,50,50,55,53,54,0,50,51,0,0,0,0,0,50,49,49,0,0,53,52,51,0,0,0,0,0,0,0,51,0,0,0,53,54,55,50,54,49,49,0,57,49,58,59,60,61,62,63,62,63,64,65,65,66,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,59,83,84,55,85,60,86,87,88,58,62,89,51,90,91,92,64,53,93,94,95,52,96,50,57,97,98,99,56,100,101,54,102,63,49,66,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,59,83,84,55,85,60,86,87,88,58,62,89,51,90,91,92,64,53,93,94,95,52,96,50,57,97,98,99,56,100,101,54,102,63,49,66,65,80,86,81,81,64,76,97,65,88,58,89,51,90,92,64,94,96,99,101,64,78,74,70,85,0,83,83,83,83,88,79,90,83,84,83,84,83,84,83,84,67,58,58,70,58,58,83,84,55,85,60,86,87,58,62,89,91,64,53,93,95,52,50,57,97,98,54,63,49,65,65,66,93,65,70,70,66,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,59,83,84,55,55,85,60,86,87,88,58,62,62,89,51,90,90,91,92,64,53,53,93,94,95,52,52,96,50,50,57,57,97,98,99,56,100,101,54,54,102,63,63,49,66,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,59,83,84,55,85,60,86,87,88,58,62,89,51,90,91,92,64,53,93,94,95,52,96,50,50,57,97,98,99,56,100,101,54,102,63,49,88,88,88,69,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,82,88,88,88,82,88,82,88,88,88,82,82,88,60,85,81,66,81,66,81,81,66,86,65,66,68,65,66,86,66,70,65,67,87,65,68,68,68,68,68,68,68,68,68,68,68,60,65,68,68,65,66,65,65,65,76,64,78,85,65,66,65,65,86,87,65,65,67,67,65,77,77,67,66,66,65,66,68,85,67,87,65,66,65,68,85,68,65,87,87,67,68,87,65,67,86,85,85,67,67,67,67,67,67,67,67,65,66,67,60,60,85,60,60,68,78,75,75,73,66,87,98,78,74,66,66,65,85,65,60,75,66,65,66,65,66,65,68,65,78,65,66,87,87,74,68,66,65,65,86,65,87,87,65,65,65,65,66,66,66,65,68,67,65,78,85,66,68,86,68,65,65,65,67,78,68,60,65,68,68,68,66,68,60,86,85,78,68,86,86,86,68,77,77,68,68,78,66,68,86,68,65,87,65,65,65,65,65,65,66,87,65,85,66,87,66,65,66,85,87,65,85,65,78,78,66,74,78,85,65,68,65,87,67,67,68,60,87,65,86,87,65,85,86,60,66,65,71,66,65,71,71,71,76,97,98,71,71,83,83,83,83,59,65,93,66,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,59,83,84,55,85,60,86,87,88,58,62,89,51,90,91,92,64,53,93,94,95,52,96,50,57,97,98,99,56,100,101,54,102,63,49,89,92,94,96,99,101,102,60,70,70,70,72,70,81,64,72,72,64,70,70,70,64,64,76,97,71,77,83,84,83,84,83,84,83,84,75,84,84,84,84,75,73,84,84,84,84,93,64,95,95,60,72,68,81,64,64,77,77,86,98,65,60,60,74,75,86,77,65,0,83,84,55,85,60,86,87,58,62,89,91,64,93,95,50,97,98,63,49,88,89,92,94,96,99,101,102,79,90,60,70,79,72,81,60,60,86,100,64,66,80,80,95,72,87,73,77,91,91,91,91,91,81,64,95,72,100,93,65,72,87,93,93,93,93,93,93,93,93,78,78,78,66,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,59,83,84,55,85,60,86,87,88,58,62,89,51,90,91,92,64,53,93,94,95,52,96,50,57,97,98,99,56,100,101,54,102,63,49,66,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,59,83,84,55,85,60,86,87,88,58,62,89,51,90,91,92,64,53,93,94,95,52,96,50,57,97,98,99,56,100,101,54,102,63,49,79,59,90,66,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,59,83,84,55,85,60,86,87,88,58,62,89,51,90,91,92,64,53,93,94,95,52,96,50,57,97,98,99,56,100,101,54,102,63,49,70,81,88,95,71,71,71,71,71,71,71,71,71,71,71,71,103,104,105,105,105,106,0,107,108,108,108,108,108,0,108,108,0,0,0,109,109,109,109,110,110,111,111,111,111,0,0,107,107,107,110,110,107,108,107,108,108,108,108,108,108,108,108,108,111,110,109,107,108,111,110,109,107,108,111,110,109,107,108,108,111,107,108,107,108,107,111,111,111,0,0,0,0,0,0,0,0,0,0,0,0,108,107,107,107,107,111,111,107,108,111,110,109,107,108,108,108,108,108,108,111,110,109,107,108,111,110,109,107,108,108,108,108,108,108,108,108,108,111,110,109,107,108,108,108,107,108,108,108,108,108,108,108,108,108,111,110,109,107,108,111,110,109,107,108,111,110,109,107,108,111,0,112,112,112,112,112,112,112,0,0,0,112,0,112,112,0,0,112,112,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,113,0,0,0,0,0,0,113,0,113,0,113,0,0,0,113,0,113,0,113,113,113,113,113,113,113,113,114,113,114,113,113,113,113,113,114,113,0,113,0,113,113,114,114,113,113,113,113,113,113,114,113,113,113,113,113,113,113,113,113,114,113,114,113,113,114,113,113,113,113,113,114,113,113,113,113,114,113,114,113,114,113,113,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,115,116,0,0,0,0,0,0,0,0,0,117,118,118,0,0,0,0,119,119,119,119,119,119,119,119,0,117,118,118,117,118,0,120,121,121,121,121,122,122,122,122,122,122,122,122,0,0,0,0,121,121,118,118,118,0,117,118,118,117,118,117,118,121,120,123,121,121,121,121,121,121,121,121,117,118,122,119,123,120,121,117,118,122,119,123,120,124,123,123,123,121,117,118,122,119,120,121,125,123,121,121,0,125,123,123,120,121,123,0,121,121,117,118,122,119,0,121,126,123,123,121,121,121,121,121,121,117,118,122,119,123,120,120,121,117,118,122,119,123,120,121,121,121,121,121,0,0,121,121,121,124,123,123,123,121,121,121,117,118,122,119,123,120,121,121,123,123,127,123,123,123,0,0,0,0,0,120,121,121,121,121,123,121,121,120,120,120,120,120,120,120,120,120,120,0,121,121,121,128,123,121,124,123,123,123,121,117,118,122,119,123,120,121,117,118,122,119,123,120,124,123,123,123,121,117,118,122,119,123,120,121,120,0,0,0,0,0,0,0,0,129,129,129,129,129,129,129,129,129,129,0,0,0,0,0,130,0,0,130,130,131,132,130,0,0,133,133,0,0,0,0,0,0,0,133,133,132,131,131,131,131,131,131,131,131,131,131,0,0,131,132,0,0,0,0,0,0,0,0,0,0,0,0,0,131,0,0,0,134,0,0,133,130,132,131,133,133,0,0,0,0,132,132,132,130,132,130,132,130,132,131,133,133,133,0,0,133,134,133,0,0,133,131,0,0,0,0,0,134,0,0,0,0,0,0,133,131,131,133,130,130,130,130,133,0,0,0,131,0,0,0,0,0,0,133,131,133,133,133,133,131,131,131,131,131,134,0,0,0,0,131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,134,0,0,0,131,0,0,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,134,134,134,134,133,133,133,133,133,131,131,131,131,131,132,132,132,132,132,130,130,130,130,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,134,133,131,132,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["ring",4]],null,null,null,null,null,[[["ring",4]],["bool",15]],null,[[["formatter",3]],["result",6]],[[]],[[]],null,[[]],null,null,null,null,[[],["u64",15]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["apicid",4]],[[]],[[["deliverymode",4]],["bool",15]],[[["destinationmode",4]],["bool",15]],[[["deliverystatus",4]],["bool",15]],[[["level",4]],["bool",15]],[[["triggermode",4]],["bool",15]],[[["destinationshorthand",4]],["bool",15]],[[["icr",3]],["bool",15]],[[["apicid",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["u8",15],["apicid",4],["destinationshorthand",4],["deliverymode",4],["destinationmode",4],["deliverystatus",4],["level",4],["triggermode",4]],["icr",3]],[[["u8",15],["apicid",4],["destinationshorthand",4],["deliverymode",4],["destinationmode",4],["deliverystatus",4],["level",4],["triggermode",4]],["icr",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],null,[[["apicid",4]]],[[]],[[["apicid",4],["u8",15]]],[[],["u32",15]],[[],["u32",15]],[[["icr",3]],["bool",15]],[[["apicid",4]],["bool",15]],[[["icr",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u8",15]]],[[["u64",15]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["u32",15]],[[],["u32",15]],null,[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],null,null,null,null,[[]],[[]],[[]],[[["u8",15],["u8",15]]],[[]],[[],["u8",15]],[[]],[[["usize",15]]],[[],["u8",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["u8",15]],null,[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[],["u32",15]],[[]],[[["apicid",4]]],[[]],[[["apicid",4],["u8",15]]],[[],["u32",15]],[[],["x2apic",3]],[[["icr",3]]],[[["u64",15]]],[[],["result",4]],[[],["result",4]],[[["u8",15]]],[[["u64",15]]],[[],["typeid",3]],[[],["u32",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[],["u32",15]],[[]],[[["apicid",4]]],[[]],[[["apicid",4],["u8",15]]],[[],["u32",15]],[[],["xapic",3]],[[["icr",3]]],[[],["result",4]],[[],["result",4]],[[["u8",15]]],[[["u64",15]]],[[],["typeid",3]],[[],["u32",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[["eflags",3]]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[],["eflags",3]],[[["eflags",3]],["ordering",4]],[[]],[[],["bool",15]],[[]],[[]],[[["eflags",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[["ring",4]],["eflags",3]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[],["bool",15]],[[],["bool",15]],[[["eflags",3]],["bool",15]],[[],["eflags",3]],[[]],[[["eflags",3]],["option",4,[["ordering",4]]]],[[]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15]]],[[["u32",15]]],[[["paddr",3]]],[[["ioaddr",3]]],[[["u32",15]]],[[["usize",15]]],[[["u32",15]]],[[["usize",15]]],[[["vaddr",3]]],[[["paddr",3]]],[[["u32",15]]],[[["ioaddr",3]]],[[["u32",15]]],[[["vaddr",3]]],[[["usize",15]]],[[["u32",15]]],[[],["paddr",3]],[[],["paddr",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[["u32",15]]],[[]],[[["u32",15]]],[[]],[[["i32",15]]],[[["usize",15]]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[["u32",15]]],[[["paddr",3]]],[[["u32",15]]],[[["ioaddr",3]]],[[["vaddr",3]],["vaddr",3]],[[["u32",15]]],[[["usize",15]]],[[["pdflags",3]]],[[["ptflags",3]]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["paddr",3]],[[],["ioaddr",3]],[[],["vaddr",3]],[[],["pdflags",3]],[[],["pdentry",3]],[[],["ptflags",3]],[[],["ptentry",3]],[[["paddr",3]],["ordering",4]],[[["ioaddr",3]],["ordering",4]],[[["vaddr",3]],["ordering",4]],[[["pdflags",3]],["ordering",4]],[[["ptflags",3]],["ordering",4]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[["paddr",3]],["bool",15]],[[["ioaddr",3]],["bool",15]],[[["vaddr",3]],["bool",15]],[[["pdflags",3]],["bool",15]],[[["ptflags",3]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["pdflags",3]],[[],["ptflags",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["usize",15]]],[[["i32",15]]],[[["u32",15]]],[[]],[[["i32",15]]],[[["usize",15]]],[[["u32",15]]],[[]],[[["i32",15]]],[[["u32",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["u32",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[],["u32",15]],[[],["usize",15]],[[]],[[]],[[],["usize",15]],[[],["u32",15]],[[],["usize",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["paddr",3]],["bool",15]],[[["ioaddr",3]],["bool",15]],[[["vaddr",3]],["bool",15]],[[["pdflags",3]],["bool",15]],[[["ptflags",3]],["bool",15]],[[["paddr",3],["pdflags",3]],["pdentry",3]],[[["paddr",3],["ptflags",3]],["ptentry",3]],[[]],[[]],[[["paddr",3]],["option",4,[["ordering",4]]]],[[["ioaddr",3]],["option",4,[["ordering",4]]]],[[["vaddr",3]],["option",4,[["ordering",4]]]],[[["pdflags",3]],["option",4,[["ordering",4]]]],[[["ptflags",3]],["option",4,[["ordering",4]]]],[[["vaddr",3]],["usize",15]],[[["vaddr",3]],["usize",15]],[[["usize",15]]],[[["u32",15]]],[[["paddr",3]]],[[["usize",15]]],[[["u32",15]]],[[["ioaddr",3]]],[[["vaddr",3]]],[[]],[[]],[[]],[[]],[[["bool",15]]],[[["bool",15]]],[[["u32",15]]],[[["u32",15]]],[[["usize",15]]],[[["u32",15]]],[[["i32",15]]],[[["u32",15]]],[[["paddr",3]]],[[["usize",15]]],[[["ioaddr",3]]],[[["u32",15]]],[[["usize",15]]],[[["vaddr",3]]],[[["u32",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[],["taskstatesegment",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[]],null,null,[[]],null,null,null,[[],["taskstatesegment",3]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["paddr",3]]],[[["usize",15]]],[[["u64",15]]],[[["u64",15]]],[[["ioaddr",3]]],[[["usize",15]]],[[["usize",15]]],[[["vaddr",3]]],[[["u64",15]]],[[["u64",15]]],[[["paddr",3]]],[[["u64",15]]],[[["ioaddr",3]]],[[["u64",15]]],[[["vaddr",3]]],[[["usize",15]]],[[],["paddr",3]],[[],["paddr",3]],[[],["paddr",3]],[[],["paddr",3]],[[],["paddr",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[["u64",15]]],[[["u64",15]]],[[]],[[]],[[["u64",15]]],[[["usize",15]]],[[["i32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["paddr",3]]],[[["u64",15]]],[[["u64",15]]],[[["ioaddr",3]]],[[["vaddr",3]],["vaddr",3]],[[["u64",15]]],[[["usize",15]]],[[["pml4flags",3]]],[[["pml5flags",3]]],[[["pdptflags",3]]],[[["pdflags",3]]],[[["ptflags",3]]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["paddr",3]],[[],["ioaddr",3]],[[],["vaddr",3]],[[],["pml4flags",3]],[[],["pml5flags",3]],[[],["pml4entry",3]],[[],["pml5entry",3]],[[],["pdptflags",3]],[[],["pdptentry",3]],[[],["pdflags",3]],[[],["pdentry",3]],[[],["ptflags",3]],[[],["ptentry",3]],[[["paddr",3]],["ordering",4]],[[["ioaddr",3]],["ordering",4]],[[["vaddr",3]],["ordering",4]],[[["pml4flags",3]],["ordering",4]],[[["pml5flags",3]],["ordering",4]],[[["pdptflags",3]],["ordering",4]],[[["pdflags",3]],["ordering",4]],[[["ptflags",3]],["ordering",4]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["paddr",3]],["bool",15]],[[["ioaddr",3]],["bool",15]],[[["vaddr",3]],["bool",15]],[[["pml4flags",3]],["bool",15]],[[["pml5flags",3]],["bool",15]],[[["pdptflags",3]],["bool",15]],[[["pdflags",3]],["bool",15]],[[["ptflags",3]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["pml4flags",3]],[[],["pml5flags",3]],[[],["pdptflags",3]],[[],["pdflags",3]],[[],["ptflags",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["i32",15]]],[[["usize",15]]],[[["u64",15]]],[[]],[[["usize",15]]],[[["u64",15]]],[[]],[[["i32",15]]],[[["usize",15]]],[[["u64",15]]],[[["i32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["u64",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[],["usize",15]],[[]],[[],["usize",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[["paddr",3]],["bool",15]],[[["ioaddr",3]],["bool",15]],[[["vaddr",3]],["bool",15]],[[["pml4flags",3]],["bool",15]],[[["pml5flags",3]],["bool",15]],[[["pdptflags",3]],["bool",15]],[[["pdflags",3]],["bool",15]],[[["ptflags",3]],["bool",15]],[[["paddr",3],["pml4flags",3]],["pml4entry",3]],[[["paddr",3],["pml5flags",3]],["pml5entry",3]],[[["paddr",3],["pdptflags",3]],["pdptentry",3]],[[["paddr",3],["pdflags",3]],["pdentry",3]],[[["paddr",3],["ptflags",3]],["ptentry",3]],[[]],[[]],[[]],[[]],[[]],[[["paddr",3]],["option",4,[["ordering",4]]]],[[["ioaddr",3]],["option",4,[["ordering",4]]]],[[["vaddr",3]],["option",4,[["ordering",4]]]],[[["pml4flags",3]],["option",4,[["ordering",4]]]],[[["pml5flags",3]],["option",4,[["ordering",4]]]],[[["pdptflags",3]],["option",4,[["ordering",4]]]],[[["pdflags",3]],["option",4,[["ordering",4]]]],[[["ptflags",3]],["option",4,[["ordering",4]]]],[[["vaddr",3]],["usize",15]],[[["vaddr",3]],["usize",15]],[[["vaddr",3]],["usize",15]],[[["vaddr",3]],["usize",15]],[[["vaddr",3]],["usize",15]],[[["usize",15]]],[[["u64",15]]],[[["paddr",3]]],[[["usize",15]]],[[["ioaddr",3]]],[[["u64",15]]],[[["vaddr",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["u64",15]]],[[["u64",15]]],[[["i32",15]]],[[["usize",15]]],[[["u64",15]]],[[]],[[]],[[["usize",15]]],[[["paddr",3]]],[[["u64",15]]],[[["ioaddr",3]]],[[["usize",15]]],[[["u64",15]]],[[["u64",15]]],[[["vaddr",3]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[["rflags",3]]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[],["rflags",3]],[[["rflags",3]],["ordering",4]],[[]],[[],["bool",15]],[[]],[[]],[[["rflags",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["u64",15]],["option",4]],[[["u64",15]]],[[["u64",15]]],[[["intoiterator",8]]],[[["ring",4]],["rflags",3]],[[["u64",15]],["rflags",3]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[],["bool",15]],[[],["bool",15]],[[["rflags",3]],["bool",15]],[[],["rflags",3]],[[]],[[["rflags",3]],["option",4,[["ordering",4]]]],[[],["rflags",3]],[[]],[[["rflags",3]]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[],["descriptor64",3]],[[],["descriptor64",3]],[[["formatter",3]],["result",6]],[[]],[[],["u64",15]],[[],["u64",15]],[[]],[[["segmentselector",3]]],[[],["u64",15]],[[],["u64",15]],[[["u64",15],["u64",15]]],[[["u8",15]]],[[["segmentselector",3],["u64",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["u64",15]]],[[["u64",15]]],[[["u64",15],["u64",15]]],[[["u64",15],["u64",15]]],[[["u64",15],["u64",15]]],[[["u64",15]],["u32",15]],[[["u64",15]],["u64",15]],[[["u64",15],["u64",15]]],[[["u64",15],["u64",15]]],[[["u64",15],["u64",15],["u64",15]],["u32",15]],[[["u64",15],["u64",15],["u64",15]],["u32",15]],[[["u64",15],["u64",15],["u64",15]],["u32",15]],[[["u64",15],["u64",15]],["u32",15]],[[["u64",15],["u64",15]],["u32",15]],[[["u64",15],["u64",15]]],[[["u64",15]]],[[["u64",15]],["u32",15]],[[["u64",15],["u64",15],["u64",15]],["u32",15]],[[["u64",15],["u64",15]],["u32",15]],[[["u64",15],["u64",15],["u64",15]],["u32",15]],[[["u64",15],["u64",15]]],[[["u64",15],["u64",15]]],[[["u64",15],["u64",15]]],[[["u64",15],["u64",15]]],[[["u64",15],["u64",15],["u64",15]]],[[["u64",15],["u64",15]]],[[["u64",15]],["u64",15]],[[["u64",15],["u64",15]],["u64",15]],[[["u64",15],["u64",15],["u64",15]],["u64",15]],[[["u64",15],["u64",15],["u64",15],["u64",15]],["u64",15]],[[["u64",15],["u64",15],["u64",15],["u64",15],["u64",15]],["u64",15]],[[["u64",15],["u64",15],["u64",15],["u64",15],["u64",15],["u64",15]],["u64",15]],[[["u64",15],["u64",15],["u64",15],["u64",15],["u64",15],["u64",15],["u64",15]],["u64",15]],null,[[]],[[]],[[],["taskstatesegment",3]],[[],["taskstatesegment",3]],[[["formatter",3]],["result",6]],[[]],[[]],null,null,[[],["taskstatesegment",3]],null,null,null,null,null,[[["usize",15],["u64",15]]],[[["ring",4],["u64",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["u64",15]],["result",6]],[[],["result",6]],[[["u64",15]],["result",6]],[[],["result",6,[["u64",15]]]],[[["u32",15]],["result",6,[["u64",15]]]],[[],["result",6]],[[["u32",15],["u64",15]],["result",6]],[[],["result",6]],[[["u64",15]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["cr0",3]]],[[["cr4",3]]],[[["xcr0",3]]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cr0",3]],[[],["cr4",3]],[[],["xcr0",3]],[[["cr0",3]],["ordering",4]],[[["cr4",3]],["ordering",4]],[[["xcr0",3]],["ordering",4]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["cr0",3]],[[["cr0",3]]],[[],["usize",15]],[[["u64",15]]],[[],["u64",15]],[[["u64",15]]],[[],["cr4",3]],[[["cr4",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["cr0",3]],["bool",15]],[[["cr4",3]],["bool",15]],[[["xcr0",3]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[["u64",15]],["option",4]],[[["usize",15]]],[[["usize",15]]],[[["u64",15]]],[[["usize",15]]],[[["usize",15]]],[[["u64",15]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["cr0",3]],["bool",15]],[[["cr4",3]],["bool",15]],[[["xcr0",3]],["bool",15]],[[]],[[]],[[]],[[["cr0",3]],["option",4,[["ordering",4]]]],[[["cr4",3]],["option",4,[["ordering",4]]]],[[["xcr0",3]],["option",4,[["ordering",4]]]],[[]],[[]],[[]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[],["xcr0",3]],[[["xcr0",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["option",4,[["u32",15]]]],[[],["u8",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["usize",15]],[[],["u8",15]],[[],["uu32",15]],[[],["u8",15]],[[],["u16",15]],[[],["u8",15]],[[],["u8",15]],[[],["dattype",4]],[[],["cachetype",4]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["cpuid",3]],[[],["cpuidresult",3]],[[],["cacheinfoiter",3]],[[],["cacheinfotype",4]],[[],["cacheinfo",3]],[[],["cacheparametersiter",3]],[[],["cacheparameter",3]],[[],["extendedtopologyiter",3]],[[],["extendedstateiter",3]],[[],["sgxsectioniter",3]],[[],["datiter",3]],[[],["usize",15]],[[],["u8",15]],[[],["u32",15]],[[],["u8",15]],[[],["u32",15]],null,[[],["associativity",4]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["cpuid",3]],[[],["u32",15]],[[],["str",15]],[[],["associativity",4]],[[],["associativity",4]],[[],["u8",15]],[[],["u16",15]],[[],["associativity",4]],[[],["associativity",4]],[[],["u8",15]],[[],["u16",15]],[[],["u8",15]],null,null,[[],["u8",15]],null,null,[[["l1cachetlbinfo",3]],["bool",15]],[[["l2and3cachetlbinfo",3]],["bool",15]],[[["associativity",4]],["bool",15]],[[["apminfo",3]],["bool",15]],[[["processorcapacityandfeatureinfo",3]],["bool",15]],[[["memoryencryptioninfo",3]],["bool",15]],[[["svmfeatures",3]],["bool",15]],[[["cpuidresult",3]],["bool",15]],[[["vendorinfo",3]],["bool",15]],[[["cacheinfoiter",3]],["bool",15]],[[["processorserial",3]],["bool",15]],[[["cacheparameter",3]],["bool",15]],[[["cachetype",4]],["bool",15]],[[["monitormwaitinfo",3]],["bool",15]],[[["extendedtopologylevel",3]],["bool",15]],[[["topologytype",4]],["bool",15]],[[["extendedregistertype",4]],["bool",15]],[[["extendedregisterstatelocation",4]],["bool",15]],[[["l2catinfo",3]],["bool",15]],[[["membwallocationinfo",3]],["bool",15]],[[["dattype",4]],["bool",15]],[[["socvendorbrand",3]],["bool",15]],[[["hypervisor",4]],["bool",15]],[[],["u8",15]],[[],["u8",15]],[[],["u32",15]],[[],["bool",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["extendedregistertype",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4,[["apminfo",3]]]],[[],["option",4,[["cacheinfoiter",3]]]],[[],["option",4,[["cacheparametersiter",3]]]],[[],["u32",15]],[[],["option",4,[["datiter",3]]]],[[],["option",4,[["directcacheaccessinfo",3]]]],[[],["option",4,[["extendedfeatures",3]]]],[[],["option",4,[["extendedprocessorfeatureidentifiers",3]]]],[[],["option",4,[["extendedstateinfo",3]]]],[[],["option",4,[["extendedtopologyiter",3]]]],[[],["option",4,[["featureinfo",3]]]],[[],["option",4,[["hypervisorinfo",3]]]],[[],["option",4,[["l1cachetlbinfo",3]]]],[[],["option",4,[["l2and3cachetlbinfo",3]]]],[[],["option",4,[["memoryencryptioninfo",3]]]],[[],["option",4,[["monitormwaitinfo",3]]]],[[],["option",4,[["performancemonitoringinfo",3]]]],[[],["option",4,[["processorbrandstring",3]]]],[[],["option",4,[["processorcapacityandfeatureinfo",3]]]],[[],["option",4,[["processorfrequencyinfo",3]]]],[[],["option",4,[["processorserial",3]]]],[[],["option",4,[["processortraceinfo",3]]]],[[],["u32",15]],[[],["option",4,[["rdtallocationinfo",3]]]],[[],["option",4,[["rdtmonitoringinfo",3]]]],[[],["option",4,[["sgxinfo",3]]]],[[],["u16",15]],[[],["option",4,[["socvendorinfo",3]]]],[[],["u32",15]],[[],["option",4,[["svmfeatures",3]]]],[[],["option",4,[["thermalpowerinfo",3]]]],[[],["option",4,[["tscinfo",3]]]],[[],["option",4,[["socvendorattributesiter",3]]]],[[],["option",4,[["socvendorbrand",3]]]],[[],["option",4,[["vendorinfo",3]]]],[[],["u8",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["bool",15]],[[],["bool",15]],[[],["associativity",4]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["hypervisor",4]],[[],["u8",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u16",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["extendedstateiter",3]],[[],["sgxsectioniter",3]],[[],["associativity",4]],[[],["associativity",4]],[[],["u8",15]],[[],["u16",15]],[[],["associativity",4]],[[],["associativity",4]],[[],["u8",15]],[[],["u16",15]],[[],["option",4,[["l2catinfo",3]]]],[[],["associativity",4]],[[],["u8",15]],[[],["u8",15]],[[],["u16",15]],[[],["option",4,[["l3catinfo",3]]]],[[],["option",4,[["l3monitoringinfo",3]]]],[[],["associativity",4]],[[],["u8",15]],[[],["u8",15]],[[],["u16",15]],[[],["u16",15]],[[],["u8",15]],[[],["u8",15]],[[],["topologytype",4]],[[],["u8",15]],[[],["extendedregisterstatelocation",4]],[[],["u8",15]],[[],["u16",15]],[[],["usize",15]],[[],["usize",15]],[[],["u8",15]],[[],["u8",15]],[[],["u32",15]],[[],["u16",15]],[[],["u8",15]],[[],["u16",15]],[[],["usize",15]],[[],["u32",15]],[[],["option",4,[["membwallocationinfo",3]]]],[[],["u32",15]],[[],["u32",15]],[[],["u8",15]],null,[[["l1cachetlbinfo",3]],["bool",15]],[[["l2and3cachetlbinfo",3]],["bool",15]],[[["associativity",4]],["bool",15]],[[["apminfo",3]],["bool",15]],[[["processorcapacityandfeatureinfo",3]],["bool",15]],[[["memoryencryptioninfo",3]],["bool",15]],[[["svmfeatures",3]],["bool",15]],[[["cpuidresult",3]],["bool",15]],[[["vendorinfo",3]],["bool",15]],[[["cacheinfoiter",3]],["bool",15]],[[["processorserial",3]],["bool",15]],[[["cacheparameter",3]],["bool",15]],[[["monitormwaitinfo",3]],["bool",15]],[[["extendedtopologylevel",3]],["bool",15]],[[["extendedregistertype",4]],["bool",15]],[[["l2catinfo",3]],["bool",15]],[[["membwallocationinfo",3]],["bool",15]],[[["socvendorbrand",3]],["bool",15]],[[["hypervisor",4]],["bool",15]],[[],["cpuid",3]],[[],["option",4,[["cacheinfo",3]]]],[[],["option",4,[["cacheparameter",3]]]],[[],["option",4,[["extendedtopologylevel",3]]]],[[],["option",4,[["extendedstate",3]]]],[[],["option",4,[["sgxsectioninfo",4]]]],[[],["option",4,[["datinfo",3]]]],[[],["option",4,[["cpuidresult",3]]]],[[],["u32",15]],null,[[],["usize",15]],[[],["u8",15]],[[],["u32",15]],[[],["u32",15]],[[],["u8",15]],[[],["usize",15]],[[],["u8",15]],[[],["u8",15]],[[],["u64",15]],[[],["usize",15]],[[],["u32",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["extendedregistertype",4]],[[],["u8",15]],[[],["u32",15]],[[]],[[],["u64",15]],[[],["u128",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["usize",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[],["u16",15]],[[],["u8",15]],null,[[],["u32",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["option",4,[["u64",15]]]],[[],["option",4,[["u32",15]]]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["u8",15]],[[],["u16",15]],[[],["cpuid",3]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],null,null,null,null,null,null,[[["u32",15],["u32",15]],["cpuidresult",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[["dr6",3]]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["dr6",3]],[[],["breakpoint",4]],[[],["breakcondition",4]],[[],["breaksize",4]],[[],["dr7",3]],[[["dr6",3]],["ordering",4]],[[]],[[["usize",15],["breakcondition",4],["breaksize",4]]],[[["breakpoint",4],["breakcondition",4],["breaksize",4]]],[[],["bool",15]],[[]],[[]],[[["breakpoint",4],["bool",15]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["usize",15]]],[[],["usize",15]],[[["usize",15]]],[[],["usize",15]],[[["usize",15]]],[[],["usize",15]],[[["usize",15]]],[[],["dr6",3]],[[["dr6",3]]],[[],["dr7",3]],[[["dr7",3]]],[[]],[[["breakpoint",4],["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["dr6",3]],["bool",15]],[[["breakpoint",4]],["bool",15]],[[["breakcondition",4]],["bool",15]],[[["breaksize",4]],["bool",15]],[[["dr7",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["option",4]],[[["usize",15]]],[[["usize",15]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["dr6",3]],["bool",15]],[[["dr7",3]],["bool",15]],[[]],[[["dr6",3]],["option",4,[["ordering",4]]]],[[]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["usize",15]]],null,null,[[]],[[]],[[],["descriptortablepointer",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["segmentselector",3]],[[["descriptortablepointer",3]]],[[["descriptortablepointer",3]]],null,[[["segmentselector",3]]],[[]],[[]],[[["descriptortablepointer",3]]],[[["descriptortablepointer",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[["u16",15]],["u8",15]],[[["u16",15]],["u32",15]],[[["u16",15]],["u16",15]],[[["u16",15],["u8",15]]],[[["u16",15],["u32",15]]],[[["u16",15],["u16",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[["pagefaulterror",3]]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pagefaulterror",3]],[[["pagefaulterror",3]],["ordering",4]],[[]],[[],["bool",15]],null,[[]],[[]],[[]],[[]],[[["pagefaulterror",3]],["bool",15]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],null,[[],["bool",15]],[[],["bool",15]],null,[[["pagefaulterror",3]],["bool",15]],[[]],[[["pagefaulterror",3]],["option",4,[["ordering",4]]]],[[]],[[["bool",15]]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15]],["u64",15]],[[["u32",15],["u64",15]]],null,null,[[],["bool",15]],[[],["bool",15]],[[["u16",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u64",15]],["bool",15]],[[],["bool",15]],[[["u16",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u64",15]],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["u64",15]],[[],["descriptorbuilder",3]],[[]],[[]],[[["segmentselector",3]]],[[]],[[],["u16",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["segmentselector",3]]],[[["segmentselector",3],["u64",15]],["descriptorbuilder",3]],[[["segmentselector",3],["u16",15]],["descriptorbuilder",3]],[[["segmentselector",3],["u32",15]],["descriptorbuilder",3]],[[],["segmentselector",3]],[[],["systemdescriptortypes64",4]],[[],["systemdescriptortypes32",4]],[[],["datasegmenttype",4]],[[],["codesegmenttype",4]],[[],["descriptor",3]],[[["segmentselector",3]],["ordering",4]],[[["codesegmenttype",4]]],[[["u32",15],["u32",15],["codesegmenttype",4]],["descriptorbuilder",3]],[[]],[[],["bool",15]],[[],["segmentselector",3]],[[["datasegmenttype",4]]],[[["u32",15],["u32",15],["datasegmenttype",4]],["descriptorbuilder",3]],[[],["descriptorbuilder",3]],[[],["descriptor",3]],[[]],[[["ring",4]],["descriptorbuilder",3]],[[],["segmentselector",3]],[[]],[[["segmentselector",3]],["bool",15]],[[["systemdescriptortypes64",4]],["bool",15]],[[["systemdescriptortypes32",4]],["bool",15]],[[["datasegmenttype",4]],["bool",15]],[[["codesegmenttype",4]],["bool",15]],[[],["segmentselector",3]],[[["intoiterator",8]]],[[]],[[],["descriptor",3]],[[],["descriptor64",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u16",15]],["option",4]],[[["u16",15]]],[[["u16",15]]],[[["intoiterator",8]]],[[["u16",15]],["segmentselector",3]],[[],["segmentselector",3]],[[],["segmentselector",3]],[[]],[[],["u16",15]],[[]],[[["segmentselector",3]]],[[["segmentselector",3],["u32",15]],["descriptorbuilder",3]],[[["segmentselector",3],["u16",15]],["descriptorbuilder",3]],[[["segmentselector",3],["u64",15]],["descriptorbuilder",3]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["u8",15]],["descriptorbuilder",3]],[[],["descriptorbuilder",3]],[[]],[[["u32",15],["u32",15]],["descriptorbuilder",3]],[[["u64",15],["u64",15]],["descriptorbuilder",3]],[[],["descriptorbuilder",3]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3]]],[[["segmentselector",3]]],null,[[["segmentselector",3]],["bool",15]],[[["u16",15],["ring",4]],["segmentselector",3]],[[]],[[["segmentselector",3]],["option",4,[["ordering",4]]]],[[],["descriptorbuilder",3]],[[]],[[["bool",15]]],[[]],[[["u32",15],["u32",15]]],[[]],[[["ring",4]]],[[]],[[]],[[]],[[]],[[["segmentselector",3],["u32",15]]],[[["u8",15]]],[[],["segmentselector",3]],[[]],[[]],[[]],[[["segmentselector",3]]],[[["segmentselector",3]],["descriptorbuilder",3]],[[]],[[["segmentselector",3]]],[[["segmentselector",3],["u16",15]],["descriptorbuilder",3]],[[["segmentselector",3],["u64",15]],["descriptorbuilder",3]],[[["segmentselector",3],["u32",15]],["descriptorbuilder",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u64",15],["u64",15],["bool",15]]],[[["u64",15],["u64",15],["bool",15]],["descriptorbuilder",3]],[[["u64",15],["u64",15],["bool",15]],["descriptorbuilder",3]],[[["u64",15],["u64",15],["bool",15]],["descriptorbuilder",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,[[["segmentselector",3]]],[[],["segmentselector",3]],[[],["u64",15]],[[],["u64",15]],[[["usize",15]]],[[]],null,null,null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pinbasedcontrols",3]]],[[["primarycontrols",3]]],[[["secondarycontrols",3]]],[[["entrycontrols",3]]],[[["exitcontrols",3]]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pinbasedcontrols",3]],[[],["primarycontrols",3]],[[],["secondarycontrols",3]],[[],["entrycontrols",3]],[[],["exitcontrols",3]],[[["pinbasedcontrols",3]],["ordering",4]],[[["primarycontrols",3]],["ordering",4]],[[["secondarycontrols",3]],["ordering",4]],[[["entrycontrols",3]],["ordering",4]],[[["exitcontrols",3]],["ordering",4]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pinbasedcontrols",3]],["bool",15]],[[["primarycontrols",3]],["bool",15]],[[["secondarycontrols",3]],["bool",15]],[[["entrycontrols",3]],["bool",15]],[[["exitcontrols",3]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["pinbasedcontrols",3]],["bool",15]],[[["primarycontrols",3]],["bool",15]],[[["secondarycontrols",3]],["bool",15]],[[["entrycontrols",3]],["bool",15]],[[["exitcontrols",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[["pinbasedcontrols",3]],["option",4,[["ordering",4]]]],[[["primarycontrols",3]],["option",4,[["ordering",4]]]],[[["secondarycontrols",3]],["option",4,[["ordering",4]]]],[[["entrycontrols",3]],["option",4,[["ordering",4]]]],[[["exitcontrols",3]],["option",4,[["ordering",4]]]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Ring"],[4,"DestinationShorthand"],[4,"Level"],[4,"TriggerMode"],[4,"DeliveryMode"],[4,"DeliveryStatus"],[4,"DestinationMode"],[4,"ApicId"],[3,"Icr"],[8,"ApicControl"],[13,"XApic"],[13,"X2Apic"],[3,"IoApic"],[3,"X2APIC"],[3,"XAPIC"],[3,"EFlags"],[3,"PAddr"],[3,"IOAddr"],[3,"VAddr"],[3,"PDEntry"],[3,"PTEntry"],[3,"PDFlags"],[3,"PTFlags"],[3,"Page"],[3,"LargePage"],[3,"TaskStateSegment"],[3,"PAddr"],[3,"IOAddr"],[3,"VAddr"],[3,"PML4Entry"],[3,"PML5Entry"],[3,"PDPTEntry"],[3,"PDEntry"],[3,"PTEntry"],[3,"PML4Flags"],[3,"PML5Flags"],[3,"PDPTFlags"],[3,"PDFlags"],[3,"PTFlags"],[3,"Page"],[3,"LargePage"],[3,"HugePage"],[3,"RFlags"],[3,"Descriptor64"],[3,"TaskStateSegment"],[3,"Cr0"],[3,"Cr4"],[3,"Xcr0"],[4,"Hypervisor"],[4,"ExtendedRegisterType"],[4,"CacheInfoType"],[4,"TopologyType"],[4,"CacheType"],[4,"DatType"],[4,"Associativity"],[4,"SgxSectionInfo"],[4,"ExtendedRegisterStateLocation"],[3,"CpuIdResult"],[3,"HypervisorInfo"],[3,"ProcessorCapacityAndFeatureInfo"],[3,"ProcessorBrandString"],[3,"VendorInfo"],[3,"SoCVendorBrand"],[3,"CacheParameter"],[3,"FeatureInfo"],[3,"ExtendedProcessorFeatureIdentifiers"],[3,"ThermalPowerInfo"],[3,"ExtendedFeatures"],[3,"DirectCacheAccessInfo"],[3,"PerformanceMonitoringInfo"],[3,"ExtendedStateInfo"],[3,"ExtendedState"],[3,"RdtMonitoringInfo"],[3,"L3MonitoringInfo"],[3,"RdtAllocationInfo"],[3,"L3CatInfo"],[3,"SgxInfo"],[3,"ProcessorTraceInfo"],[3,"TscInfo"],[3,"ProcessorFrequencyInfo"],[3,"DatInfo"],[3,"SoCVendorInfo"],[3,"L1CacheTlbInfo"],[3,"L2And3CacheTlbInfo"],[3,"ApmInfo"],[3,"MemoryEncryptionInfo"],[3,"SvmFeatures"],[3,"CpuId"],[3,"CacheInfoIter"],[3,"CacheInfo"],[3,"ProcessorSerial"],[3,"CacheParametersIter"],[3,"MonitorMwaitInfo"],[3,"ExtendedTopologyIter"],[3,"ExtendedTopologyLevel"],[3,"ExtendedStateIter"],[3,"L2CatInfo"],[3,"MemBwAllocationInfo"],[3,"SgxSectionIter"],[3,"EpcSection"],[3,"DatIter"],[3,"SoCVendorAttributesIter"],[13,"NWay"],[13,"Unknown"],[13,"Unknown"],[13,"Epc"],[3,"Dr7"],[3,"Dr6"],[4,"BreakSize"],[4,"BreakCondition"],[4,"Breakpoint"],[3,"DescriptorTablePointer"],[3,"PageFaultError"],[3,"InterruptDescription"],[8,"RdRand"],[8,"RdSeed"],[4,"SystemDescriptorTypes64"],[4,"SystemDescriptorTypes32"],[4,"CodeSegmentType"],[3,"Descriptor"],[3,"SegmentSelector"],[4,"DataSegmentType"],[3,"DescriptorBuilder"],[8,"GateDescriptorBuilder"],[8,"SegmentDescriptorBuilder"],[8,"BuildDescriptor"],[8,"LdtDescriptorBuilder"],[8,"TaskGateDescriptorBuilder"],[4,"VmFail"],[3,"ExitControls"],[3,"SecondaryControls"],[3,"EntryControls"],[3,"PrimaryControls"],[3,"PinbasedControls"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};